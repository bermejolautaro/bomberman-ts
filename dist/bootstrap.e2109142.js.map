{"version":3,"sources":["engine/game.ts","engine/image-utils.ts","constants.ts","engine/draw-utils.ts","solid-tile.ts","game-map.ts","explosion.ts","bomb.ts","engine/game-animation.ts","engine/spritesheet.ts","player.ts","player-controls.ts","bomberman-game.ts","engine/collision-manager.ts","engine/entity-manager.ts","engine/time-utils.ts","engine/game-loop.ts","engine/key-listener.ts","engine/position-manager.ts","bootstrap.ts"],"names":[],"mappings":";;;;;;AEAa,ASSA,OTTA,ASSA,CTTA,ASSA,KTTA,GAAQ,ASSR,GAA6B,CACxC;AJVF,ALCE,AWIF,AVHA,AWEA,ANFA,AQFA,AEGA,ATHA,AMAA,ATAA,ADAA,AMWI,ADXJ,ANAA,IGAA,AMKA,ACDA,ANFA,AQFA,AEGA,ATHA,AHAA,ADAA,AKAA,ANAA,IOWU,CRTM,AYFA,AJWL,CDXX,CRCW,CSUD,CDXV,CCWgB,CFXhB,AHAA,AFAA,CGAA,ASAA,AXAA,CSIA,ANFA,AGSU,CLXV,AKUE,APVF,CGAA,AJEA,AaFA,AEGA,AbHA,CQKA,AVFE,AOHF,CAAA,EKAA,ETAA,AFAA,CGAA,ASAA,ADA8B,ATA9B,ADAA,ADAA,CGAA,AJEA,AaFA,AXAA,EFIE,AOJF,CAAA,IPEA,EAGE,GGLF,AFAA,CEAA,AFAA,CGAA,AJEA,AaFA,AXAA,CEAA,ASAA,AXAA,CFME,GAJF,EAKE,CALF,EAME,CANF,EAMW;ADPE,AWIb,AVIE,AWLF,ANFA,AUCA,ATHA,AMCE,AJWE,ERHF,EDRW,CAAC,EAAE,ECQP,AYRC,CbAC,ACQD,AQGE,CAAC,EIXC,CJWF,EAAM,CIXR,EZQR,AYRO,AJWG,CRHQ,AYRA,AJSlB,KRDA,EAAyB,AYRlB,EAAP,CZQ4B,CAAC,CAA7B,EAAgC,GAAG,CAAC,CAApC,EAAuC,GAAG,CAAC,KAA3C,EAAkD,GAAG,CAAC,MAAtD,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,GAAG,CAAC,KAAJ,GAAY,KAAhF,EAAuF,GAAG,CAAC,MAAJ,GAAa,KAApG;AIRF,ALAqB,AWIrB,AVKC,AWND,ANFA,AQOA,AENA,ATHA,AMEC,ATED,ADHA,AMYI,ADRJ,ANFA,IGFA,ALAqB,AcQrB,AVLA,ADHA,AKIA,ANFA,CFFsB,EAAE,GAAb,ASYC,CAAC,CERb,ACDA,ANFA,AUCA,ATHA,EEaY,CJZZ,AFAA,CCGA,AKSkB,APVlB,EGFA,AFAA,CCGA,AKSY,APVZ,COOE,ADLF,CMIA,ENJA,EHJA,AFAA,CEAA,ADGA,ADHA,ADEA,CECA,AFDA,GMEA,CAAA,QHJA,AFAA,CEAA,AFAA,QCGA,AFDA,CECA,AFDA,OMEA,CAAA;ARJ6B,AWI7B,ACEE,ANCA,AQCF,AEHE,ATJA,AEYE,ITbyB,KAAK,EAAE,AWIpC,ACEE,ANCA,AUFA,ATJA,AEYW,CAAC,CTbH,ESaE,EAAM,GAAN,CAJX,CFRA,CACU,CKIV,ANCA,CMAmB,ANCT,CUHV,CLDF,CJHE,CSIA,CLDF,AJDY,MDIV,EAEU,GMHV,ALLA,EKOmB,ALJT,ODGV,EAGU,GCTV,EAG8B,CKE9B,EAEmD,ENDnD,EAG4B;ADN9B,ALJwC,AWK9B,AVJV,AWMqB,ANCT,AQAZ,AELmB,ATDP,AMHZ,ATmBA,ADhBA,AMYI,ADNJ,ANFA,IGFA,ALJwC,AIkBxC,ADhBA,AKMA,ANFA,GDLA,AYFA,CZEA,AYFA,CFMU,ACEW,ANCT,AULO,ATDP,CPFkC,ASclC,CAAC,CTdmC,AcQhD,CVUA,AFZA,CKJY,AEYA,EJVZ,AFFA,AMYkB,CFZN,ACMZ,CPPA,CIGA,AFFA,AMYY,CETF,ALGE,AEAZ,CPPA,CeEmB,ATDP,AMHZ,CFMuC,ALG3B,EKHF,ACEW,AIJ+B,AHJpD,CRKA,AFFA,CEEA,AWDmB,AbDnB,AKMA,CIDqB,AJCrB,GPPA,GKOY,KOTZ,KDQqB,IPHrB,AFFA,CEEA,AFFA,CKMA,CAAA;ARRW,AWiGV,ACzFoB,ANCT,AQMV,AEVgB,ATFN,AHeZ,AKTE,APHF,COE0C,ETTrB,ASiBnB,MGRmB,ANCT,ACNA,EOYV,SPZU,CDMA,ECNA,CKKS,ANCT,GMDS,CEOnB,GAAA,GPZU,EDMA,MMDS;APErB,ALTE,AYGiB,ANMP,AQDF,APLE,AHcZ,ADTA,AMQI,ADNJ,ANLA,IGIA,AFDA,AKEK,ICMK,CGbS,ANMP,AQDF,APLE,AEaD,ENRX,CCSA,AFZA,CMKA,EHDA,EONmB,CPMnB,AIOU,CHPE,AQDF,ALOR,CGZuC,CLA7B,CKAO,ANMP,AQDmB,CdRR,AcQb,CPLE,CFMZ,CAAA,MCAY,ICNA,GFMZ,CAAA;ALTyB,AWMhB,ACEN,ANPO,AQQA,AEHD,ATFF,AH6DL,ADzDF,AMSI,APTF,ESFO,AKAA,EhBNgB,CAAC,EAAE,EMClB,AQQA,CdTa,ASiBX,CLgDV,AKhDW,APTX,KYCQ,CEHD,CLAA,AKAA,CLAA,AGGmB,CAAlB,AVwDR,AFzDA,CE0DU,AFzDA,COQA,CAFV,GHdQ,AFgER,AFzDA,CcFO,CLAA,AKAA,AZ6DY,AFzDA,CSJZ,ALL6B,CAA5B,GFgER,EAGU,CF5DV,CEyDA,CFtDU,CE0DA,EAJV,CO3DO,CKAA,AZgEY,AF9DnB,ESFA,ATMU,CcNV,CdEA,EAKU,EALV,EAKoB,ESPC,CKAE,AZ2DvB,EAKoD,OOhEpD,EAA4C,CKA5C,EAAkD;AXIpD,ALViC,AWO7B,ALLM,AQQA,AEHN,AZ2DQ,AD1DZ,AMUI,ADRJ,ANDY,CMCZ,GHAA,ALViC,CAAC,EAAE,EWO3B,ALLC,AQQA,AEHD,AZ2DG,AFzDA,CFTW,ASkBX,CAAC,ADRR,CHAL,AFFA,EC0DY,AFzDA,CGCZ,EDwDY,AFzDA,CYCF,EHHN,AHGJ,CGHqB,AGGS,CTA9B,ASAU,AEHN,AZ2DQ,AKhDA,ADRE,ANDF,CGCZ,AWHuB,APQrB,EERE,ALLM,CKKgB,CKAtB,CVLiC,AUKT,CVLlB,IDQV,CAAA,EMHI,IKAA;AhBPqC,AWQtC,ACEM,ANPC,AQWS,AENhB,ATFM,AH6DY,ADlDnB,AMEE,ADRF,ANDmB,EUAZ,ALJA,ACKP,CGLO,AKAA,ChBNgC,KAAK,AMGpC,AFgEW,AFzDA,EFV2B,AGiB9C,AMEW,ADRX,CCQY,ADRZ,CRXqB,AOMd,CAAA,AH6DY,CQzDZ,CAAA,CRyDY,AFzDA,CCOnB,CACU,CDRS,CMCnB,CFRQ,AFgEW,AIxDnB,CDLO,CAAA,AEaI,CGTJ,ANPyB,AHchC,AMFA,CGLO,ANPC,AEQR,CLQU,AKRV,CNDmB,EKJZ,ACKP,CAAA,CLMA,AKNA,CDLA,CJcE,CSVK,AJCP,GIDA,CJCA,IDJE,EJUF,EAIE,CSXe,ELJjB,EAEE,EKEF,EAAgC,ELJhC,CJWA,CIRE,CJYoB,KIftB,EAIE,CAJF,EAKE,CALF,EAME,KANF,EAOE,MAPF,EAOgB;AFDlB,ALZoD,AYWhD,ANPM,ACWN,AHqDQ,ADlDA,AMER,ADRF,ANDU,EMCV,EHAF,ALZoD,AOehD,IFHJ,CODS,ANPC,AFgEE,ADlDA,ADPA,CFX8C,ASoB9C,CFLD,AHqDC,AKhDC,ADRX,CRZ0D,AOehD,ACHV,EJwDU,AFzDA,CCOA,CCkDA,CQzDR,AVAQ,CUAM,ATON,AMEA,GFLR,ACHF,CIDE,ANPM,ACYJ,ACJJ,ANDU,CUAW,CTOX,CGdsB,CAAxB,CCYC,EKLP,AJCF,CAAA,EDGE,CCHF,CDKI,ACLJ,CAAA,GAAA,EDKU,GAAG,ECLb,GDKkB,WAFhB,EAGE,MAAM,GAAG,KAAK,YAHhB,EAIE,KAAK,WAJP,EAKE,KAAK,YALP,EAME,CANF,EAOE,CAPF,EAQE,KARF,EASE,MATF;AFHJ,ALZuB,AWUd,ALAH,AQMG,AENA,ATgBN,AH2CS,ADlDA,AMJV,ADFA,ANDU,COL8B,CEGjC,AGMA,AENA,APHI,ADMX,CRfmB,AOQZ,MH+DG,ADlDA,ADPA,EEyDA,AIxDV,ANDU,CMCV,EJwDU,ADlDA,ADPA,EEyDA,AFzDA,CcFH,AbSG,CQTH,AKAA,CLAA,AGMA,CAAA,CNHP,CLMU,AKNV,KQHO,CLAA,AKAA,ARGP,CGHO,AGMA,ANHP,CMGO,ENHP,CMGO,ANHP,CAAA,EMGA,CNHA,MAAA,EGHO,CGMI,AENJ,ELAP,CKAA,SLAwB,CKAE,CFM1B,EAA2C,MHN3C,EAA+C,CKA/C,EAAqD,GFMrD,EAAyE;ATJ3E,ALXE,AWUE,ACEA,AEGF,AELE,AZ2DiB,AD3DF,AKGjB,ANDU,EMCV,MGHQ,ACEF,AEGN,AELQ,CZ2DW,AD3DF,ADEP,EFZD,AQaT,ANDU,CGDZ,AGEE,CGHa,ACEF,AEGX,AELa,CdEH,ESFM,AGKhB,AELgB,AdEN,GCFO,CWKjB,CHLqB,AKAA,ARGrB,CJwDmB,AD3DW,AKG9B,GJwDmB,GIxDnB,CIDM,AJCN,CID4B,EDFZ,AHGhB,CGHiC,ARAH,AKG9B,CQHgB,AbAc,AKG9B,CQHmC,ERGnC,CJwDmB,CD3DW,CAAM,EQApB,ACEV,CDFqC,ACEF,AJCzC,CQHgB,CAA6B,EbAf,CAAb,CSEX,CAAJ,EAAgD,CDFP,CAAA,CKAE,CLAD,AKAC,EAAC;AXe9C,ALzBW,AWUqC,ACG5C,ANFG,AUD2C,ATgBpD,AHTmB,ADHT,AKAT,ANAG,CMLJ,CFES,CEFJ,CRTQ,CAAC,EAAE,EO0BhB,AHTmB,ADHT,ADAD,CFdE,CKyBT,AOZS,CJJG,CGCoC,AKAE,CLAD,AKAE,CXenD,ACdO,CDeG,ACfH,AFMU,CIRd,EGCmD,AKAE,AZOc,CGSxE,CFDE,AHXE,EGaQ,CHbY,CIHf,CAAA,AEFK,CIIR,ATCI,CEWR,AOZ0B,CDHsB,AHDpC,CHmBF,AFd4B,CaJY,ARDtC,CHgBZ,ACdO,AEFT,EHoBY,CClBV,AHGQ,CEWR,EAKmB,GOjBf,CAAoC,CPYxC,EAKgC,ACnBlB,GMEV,ENFJ,EAA2B;ADejB,AL1BS,AWU6C,ACI7D,ANFD,AQIA,AENkE,ATbtE,AHqBI,ADGE,ADNA,CKlBN,EAAA,CPGqB,CAAC,AWUJ,AKAA,CLAd,AKAA,AZQA,AFHE,CFfkB,EK0BZ,ACdH,AQIA,AXKE,CHrBA,EIkBD,AFHE,EGWA,ADRA,AFHE,CEIR,ECOM,CSVR,CZDe,CCMb,CWLe,CTUT,ASVS,CXKI,CDND,CIHpB,AQIiB,EXKQ,CAAC,CGTD,AJEL,GCOC,CAAU,CGTD,CFMtB,EENyB,AQIhB,AVIf,CUJe,GRJjB,GHS0C,IAAI,IWL7B,CXKkC,EWLnD,EVEQ,EAGN,IDA4C,CAAgB,KAAhB,GAAwB,KAAK,ECHnE,EAIN,CDDwC,CAArB,CAAnB,iBCHM,EAKN,oBALM,CAD4D;ACU5D,AL3BiB,AWWzB,AGMA,AENA,AZcA,ADHE,AKKN,ANXM,IFhBuB,AQ2B7B,EJFI,AFTE,GGWM,AL3BsB,AWWzB,AGMA,AENA,AbWE,CKKX,CR3BoC,AEgBzB,EFhBA,AEgBE,CGWD,EDFE,CCEF,CDFI,AFTE,CEUZ,COfF,ARWE,CQXe,CNgBT,AWhBR,CFMA,AENmB,AbWE,ADNF,GYCG,CHNtB,ARWyB,CQXD,ARWE,ADRN,CcHpB,CAA0B,EbWL,CQXrB,ARW+B,EQXA,AKA/B,CLAA,CKAiC,CAAjC,EFMA,GVQY,EAEV,ADLyC,IAAI,KAAK,UAAL,CAAgB,ICGnD,EAGV,ADN6C,GAAyB,KAAK,KAAlC,CAAtB,CAAnB,SCGU,EAIV,wBAJU,EAKV,wBALU,CARwD;ACW5D,AL5B4B,AWYrC,ACIC,ANHA,AQKA,AEND,ATfU,AHmCT,ADTE,AKIN,ANVM,GSRG,AKAA,ChBT+B,EIgCpC,AFfE,CKpBO,CKmBL,ANHD,AChBM,CF+BD,ASVH,AXKE,CHvBmC,AEiBpC,CGWE,CL5BoC,AEiBpC,CUDC,ANHD,AHUN,CEKM,ADIA,ECJA,ADIE,ADTI,CCUZ,AFhBW,EKpBJ,ALiBW,GKjBX,COqBT,AXKqB,CAAC,EWLA,EFFlB,CAAqB,ANHtB,IAAyB,AChBnB,EJ0BK,CAAoB,EGVD,CFmBvB,CUdV,CVgBE,ADXqC,ESPnC,CAAoC,INHxC,EMGI,ANHyC,CMG7C,CTOc,CSPmC,CTOG,KAAK,ICS/C,EAGR,KDZY,CAAZ,gBCSQ,EAIR,sBAJQ,EAKR,sBALQ,CAf0D;ACY5D,AL7BD,AYiBL,ANHA,AQMF,AVmBA,ADfC,AKGL,ANTM,GFrBe,CcuBjB,EVmBA,AFrBE,GGWM,CSTF,AVmBF,AFrBE,CGWE,AOZD,ANHA,AQMA,CVmBD,AIZV,ANTY,CEsBN,CCXM,EAAA,CHXK,SUDX,CAAqB,ANHrB,IAAyB,AFyBrB,CUnBN,CAA6B,AVqB3B,GE3B8B,MMG9B,CAAqC,EEGV,CRN3B,GMGA,ERsBI,EAGJ,kBAHI,EAIJ,kBAJI,EAKJ,kBALI,CAtB8D;ACanD,AL7BnB,AWaO,ACIJ,ANHC,AQMA,AEPG,AZgCL,AIJF,AN5BsB,ESAf,AKAA,GdAL,CYOE,AVyBF,GChBiB,ECfV,AQMD,AVyBD,AIJP,CRzCU,AcoBD,CVyBA,CChBU,ADiBf,EU1BA,CTSe,AWhBZ,AR4BP,CG5BO,AKAA,AR6BG,CG7BH,CH4BP,EHZmB,AGcT,EAFV,EAGE,CQ/BK,CLAA,ALCH,AUDG,CLAA,ELCsB,CAAC,CF+BrB,EAEL,EEjC+B,IKD5B,EH4BP,CG5BA,AKAO,CRgCG,EQhCV,OLAoB,ALCU,AF+BrB,EAGL,CElCmD,CAA1B,CUD7B,CR4BA,EF3B4D,AEgClD,KFhCuD,AE2BjE,EAMmB,CGlCnB,EAAmD,GPgC1C,COhCT,CPoCI,COpC6D,CLCL,CAAkB,EKD9E,CH4BA,CG5B6E,CHkC5B,CFjC7C,UF+BK,EAKL,mBALK,CA7B6D;ACLrD,ALXL,AWcV,ACID,ANHE,AQMA,AEPD,AZsCA,AD3BF,AKiBU,ANvBT,ECMD,CSjBO,CZRK,CAAC,AcmBX,CViCA,CJpDa,CGyBf,CEdiB,ADyCZ,AD3BL,AKiBU,CR1CA,CWcD,AKAA,AZsCF,AIVG,EJ1B4D,CI0B5D,EH/BO,AMGH,AKAA,AR4BJ,GH/B0B,CAAC,GFcrC,CAAW,IEdyB,CWGlC,CXH6C,AMGtC,CAAoB,ARWlB,CAAA,MEdyB,EAAqB,CFczD,EAAW,GAAX,CQXS,CNH2B,AFcxB,CEdK,AMG8B,IAAtC,EAA4C,IAA5C,EAAkD,MAAlD,CAAyD,UAAA,CAAA,EAAC;ANF3D,ALZY,AWcmD,AGQtE,AEPA,AZsCC,AIVQ,GM7BH,AEDA,ChBba,CAAC,CIqDnB,CJrDqB,EKYf,AFaR,AKkBU,CR3CA,CQ2CA,CJUF,COvC+D,CAAC,APuC9D,AIVA,CG7B+D,CH6B/D,GG7B6D,CAAO,ENFtE,EFaR,CEbgC,AMEuC,CNF/D;AACA,ALboB,AWcuD,ACM5E,ANHC,AFD8D,ADUpE,AKmBQ,ANxBV,EUDO,AVCP,EFrB4B,CWcnB,APEQ,COFf,ELGM,AJIR,CGRQ,ALbyB,AQ6CvB,ANxBV,CIJQ,CNjB2B,EAAzB,AMiBiB,AHSlB,CAAP,CEbM,AOOD,CAAA,EPPmB,ACIM,KDJxB,AHQR,CMwBU,ANxBC,CUDJ,CAAA,CJyBG,GF5BiB,CAAkB,EJIlC,CAAA,EIJuC,EMG3C,GAAP,CJyBU,CNxBV,EAAW,GAAX,EAAY,CUDQ,ENHO,CAAnB,GMGR,EAAmC;APN3B,ALd+B,AWetC,ACMC,ANJM,AQOA,AEPD,AZuCC,AD7BP,AKmBS,EMtBF,AEPD,CLJA,CXbgC,CGyB3B,GSJJ,ANJC,CDHD,AD0CA,AIVE,ANzBV,CFrB6C,EAAE,CYqBlC,CNJE,AE6BL,EIzBM,CNJD,AUAR,AR6BG,CHhCF,AWGD,CVAQ,AQOP,CRPO,AQOP,CTVqB,AOOR,ANJN,CAAP,AE6BE,ENzBV,CEmCQ,CC1CA,CWGD,CAAA,AZuC4B,CQnCnB,AEGR,AVgCA,CQnCsB,AEGtB,IAAA,GAAR,EFHgB,CAAwB,MIJjC,GFOP,AEPA,CJIwC,CAAA,EAAC,MIJf,CAA1B,EAAqC,CAArC,EAA8C;AXDtC,ALhBE,AYqBmC,ANJrC,AQOR,AENE,AZuCM,AIVW,ANzBjB,GF1BiB,KMqBF,AQOjB,CTRQ,ADyCA,AIVW,EQ7BV,EJGoC,AEG7C,AZFS,CUDqC,ANJvB,EQOvB,AENc,CVDS,CJKT,CUDqC,ANJ5B,AFwCf,CExCe,AQOvB,AZFE,CILqB,AHQX,CGRJ,AFwCqB,CIVV,CJUX,CCzCA,AOKqC,CJ0B1B,EH/BgB,CAA3B,AWEC,CAAmB,MAAnB,CAA0B,GR6BhB,OQ7BgB,CAAA,EAAC;AXD5B,ALhBR,AWgBO,ACIkD,ANHvD,AUAsC,AZwChC,AI/BA,ANJP,ESNM,GCIS,AVAJ,CUAV,GPJM,ACCD,AFwCC,AI/BA,GR1BE,CgBiB8B,CAAC,CAAC,CAAF,ELDjC,CNAC,AMAD,CPyCC,CYxCwC,CXDnB,ACC3B,AUAsC,CZwCV,CAAtB,CCzCA,ACCe,AESf,CQT6C,CAAC,CLD/C,AKCgD,ARSpB,CGV5B,AKC8C,ARS7C,EFTN,GUA2D,CAArB,QLDjC,GAAP,UAAsB,gBAAtB,EAAoE,OAApE,EAAyF,OAAzF,EAA4G;ANEpG,ALlBI,AWgBwD,ACKlE,ANHA,AQMA,AEP4D,AZ0CtD,ADnCI,AKGJ,GLHR,CHxBY,CAAC,AgBiBJ,CAAP,ChBjBa,CWgBqD,AGQ9D,CTNE,AOGD,ANHA,AQMA,AVmCC,AIhCA,CR3BE,IcwBE,CHRwD,ECKlE,CAAc,ARsCR,EO3C4D,AHW5D,CJgCoB,AFvChB,CIFV,AFyCM,CIhCsB,CIN5B,CDLkE,ACK7C,ANHA,AESf,CGX4D,EAAA,AGQ9D,EFHJ,CNHA,CMG4B,AEGA,CTNtB,AOGN,AEG6B,GTNY,CAAnC,CSM4B,cAAlC,EAAkD;ATLnC,ALnBG,AWgBgD,ALGnE,AQMG,AEPH,AZ0CgB,ADhCjB,AKAQ,ELAR,CGnBO,AUOA,ChBhBa,CAAC,CWgB+C,CXhB7C,CG4BvB,CETiB,ADyCA,ADhCjB,AKAQ,CR5BE,EcyBA,CHT0D,GAAA,CAAA,AGSrD,CAAC,ANGR,GAAoB,CAApB,CJgCS,ADhCjB,CAAW,EETM,ADyCyB,GCzCG,ADyC5B,EDhCN,CAAA,EETuC,OFSlD,EAAW,CETkC,EFS7C,CET+D,CFSnD,CWHG,CAAX,ETNgE,OAAL,CAAa,MAA/B,GAAwC,CAApE;AAET,ALrBoB,AWgB2D,ACOrF,AEGC,AV4CF,AItCO,ANZI,GAAZ,CFpB4B,IYuBvB,CPFG,ALrByB,AG4BjC,AKIQ,ERhC2B,EAAzB,AYuBA,AJSF,GAAO,CAAP,KHXA,EFOR,CEPiC,IAAzB,AOEH,CAAsB,YAAtB,CAAmC,MAAnC,CAAH,EAA+C;APM5C,AL7BkC,AYwBnC,ANHG,AUDA,AbSL,AKIM,ANTR,EIHO,AUDA,AdIP,EFxBuC,IEwBvC,CMSQ,ANTR,CFxB6C,CYwBpC,CZxBsC,CG6BtC,AKID,CLJN,CGRK,CAAA,AEYQ,CQbR,ARaC,CQbD,KdIP,CAAW,CIHJ,CAAA,CMGH,AIJG,CJImB,AIJnB,IVCA,CJGI,CAAA,CIHX,QJGA,CUAI,CAAuC,ANFzC,AJES,GAAX,EAAY,CUAR,AIJG,CVCP,EAEE,AUHF,CVCA,EAGE,CAHF,EAIE,IUL6B,CVC/B,CUDA,CVME,CUNyC,EAA3C,EAAuD,CVCvD,CUDA,CVMgB,CUNmD,EAAnE,EAA6E;AhBpBnE,AWgB+E,ACStF,ANGD,AQDA,AENA,AZmDF,AD1CC,AKIO,EJsCR,CJ7EmB,EGiCP,GQZ6E,AGWjF,AV6CR,CE5CO,AF4CP,AItCQ,ANVR,EcHS,GRaD,CGlBiF,CKK3E,CRaE,EMPG,ANOX,CGlBiF,ALYvF,CAAiB,CQDG,CAAA,AV6CtB,CAAW,AFhDX,CSRyF,CAAA,AGWnE,CRCpB,CKZuF,ALarF,CURK,CAAmB,GZmDjB,CAAA,CE5CT,CUPO,CVSL,AUT+B,CFMb,CAAA,GRGb,CF0CT,EAAW,EYnDwB,CAAA,EAAC,EZmDpC,CU7CsB,CV6CN,CE5Cd,CQDA,CRIE,KAAK,aAHP,EAIE,CAJF,EAKE,CALF,EAME,KANF,EAOE,MAPF;ADGF,AL9BA,AWeyF,ALqBxF,AQTC,AENE,ARaI,ANVN,EGMF,CCVO,GKLkF,ENezF,ASHQ,CTGR,ADyCA,AIrCQ,CMPE,Ed3BA,CWe+E,AGY5E,AENT,AdGK,CYGK,AENT,CAAC,ARaE,CGnBiF,AKMrF,CLNqF,CHmBxE,ANVH,EcHH,ARaH,ANVN,CCGU,CaNR,CXSJ,CAAW,ADyCX,CU5CyB,CENR,CAAC,CXSP,ASHiB,AENT,CXSR,AWTM,IFMgB,AENT,EAApB,GXSJ,CWRI,CXQO,AWRN,CAAC,CFKO,AELT,IFK0C,AELnC,CXQX,CWTI,CXSY,CSHd,EELe,CAAC,CAAC,CAAF,IAAO,EADpB;AhBrBQ,AWegG,ACW1G,AEEA,AENwB,AZkDxB,AIrCM,ANVP,IFzBW,CAAC,AgBoBJ,AdGG,CcHV,ChBpBa,CY0BV,CPIL,ASFO,ANOC,CRnCE,GY0BA,AR8CD,CIrCD,GAAQ,CMPd,AV4CA,EIrCM,CMPW,GTEnB,IOJK,CAAqB,GEExB,WFFG,CAAoC,MAApC,CAAH,EAAgD;APKhD,AL/BkB,AY2BhB,ANUN,AQRI,AEND,AZkDA,AD9CW,AKmBV,GQ3BK,AbQP,CH3BoB,CAAC,AIuEL,EJvEO,EMqCzB,AQRS,ANiBA,CR9CG,CY2BD,EPIA,KAAK,CSFZ,CNiBA,CNvBU,CIcd,CQRuB,ANiBA,CHfnB,CSFA,CFFE,CAAqB,AJmBA,aAAA,CAAA,IInBrB,CAAwC,MAAxC,AJmBiB,CAAgB,iBAAhB,EAAmC,EAAnC,EAAuC,EAAvC,CAAnB;AHdD,ALhC2B,AWgB1B,ACYC,ANhCL,AQkCI,AXCF,AKgBE,CFnDJ,CHmCE,CGnCF,CNI8B,CK8BZ,GMdR,AReR,CH/BiC,Ac8B1B,AXCP,AKgBO,ER/C4B,EAAzB,CWgBI,EGcZ,CHde,EAAf,CGcgB,CAAhB,AVyCc,EDxChB,CAAW,CKgBT,GAAwB,GLhBf,CAAA,SAAX,EAAW,GAAX,EAAY;AH/B2B,AY6BtC,AIJM,ARuBH,ANzBQ,EcEL,CJPA,AVKP,CFvBuC,KG+BvC,CH/B6C,EAAE,KgByBxC,ARuBQ,CQvBR,GXKS,AGkBG,GLjBnB,GaNO,CAAA,SRuBY,CAAA,IQvBZ,GAAP,MRuBe,CAAkB,GQvBX,ERuBgB,IQvBtC,EAAqD,KRuBtC,EAAoC,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAApC,EAA8C,GAA9C,CADW;AR/ChB,AWkBR,ALtBS,AQoCT,AENA,AZ6Cc,ADvCd,AKiBE,ANtBJ,EAAA,CFjCmB,AI6EnB,IE3EW,CAAA,AQoCN,AENG,AdCR,CST2B,ATS3B,IST2B,AGcjB,AXAD,CAAP,CQdyB,GAAA,CAAA,CKQP,ARuBF,CG/BS,ALtBhB,EKsBgB,AGctB,AENkB,AdCvB,CI/BW,AEqDW,ANtBX,ESTgB,CGcH,CAAtB,CENA,CFMyB,CHdK,ETSrB,CAAA,GI/BA,GEqDW,CAAA,CG/BpB,CTSF,CST2B,CTShB,CSTgB,ETS3B,CST2B,CTSf,CSTe,CAAA,EH+BT,CAAkB,GG/BlC,EAAyB,AH+Bc,EG/Bd,EAAzB,EAA2C,KH+B3B,EAAoC,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAApC,EAA8C,GAA9C,CAFQ;AHjBV,AL7BhB,AWiBO,ACaA,AEEH,AENF,AbMD,AKiBG,EInBG,CPDP,EFCY,IDJZ,CSTa,CGeJ,AENA,IJIF,CAAA,GJmBU,CGhCM,CGenB,EHfmB,AKSF,ARuBA,CRjDC,AcgCA,AENA,AdAtB,CSTuB,ACahB,AEEH,AENK,CLTc,ACahB,EDbgB,CAAhB,CKSqB,OJIrB,EIJE,ARuBY,CInBrB,AJmBqB,GQvBoB,SJIzC,CJmBiB,CAAkB,CQvBkB,CAAC,CAAb,ERuBD,GQvBoB,QRuB3C,CQvBf,CRuBmD,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAApC,EAA8C,GAA9C,CAHS;AHb1B,ALjCwB,AWkBpB,ACaF,AEEE,AENH,AZ+CM,AIxBH,ANvBF,EGMF,ADyCO,CYlDA,ChBxBiB,CAAC,EAAE,CKiC3B,CAAA,CLjCsB,AWkBZ,CCaD,AEEA,AVyCF,CAAA,CF/CE,CAAP,EUIY,EEEV,CHfe,AHgCF,EMjBE,AVyCZ,AD5CK,CQZU,AGelB,AVyCG,CCzCP,AGiBqB,CHjBV,AOFT,GDbyB,CNehB,CAAA,QDyCJ,CCzCP,CGiBqB,CHjBV,AMfW,APwDtB,AIxBqB,CGhCoB,SNezC,EAAmB,ADyCnB,CIxBiB,CAAkB,GGhCb,EAAqC,AHgCnB,UGhClB,CHgCL,CGhCsD,CHgClB,CAAC,CAAC,CAAD,EAAI,CGhCpC,AHgCgC,CAAD,CGhC2B,AHgC/D,EAA8C,GAA9C,CAJS,CG5BJ,CAAlB;AXlB4B,AYgC/B,AEEE,AVyCD,AIxBE,ANvBH,GUEM,CZ9ByB,CAAC,AE0BrB,EF1BuB,EKiCnC,CLjCsB,CI2Eb,SIxBS,IHlBlB,AGkBsB,gBAAA,CAAA,aAAJ,CAAkB,KAAK,WAAvB,EAAoC,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAApC,EAA8D,GAA9D,CALQ;AHZxB,ALlCsC,AWmBpC,AKSN,AZgDM,AD9CQ,AKsBR,GLtBJ,CH9BwC,EI4EpC,GJ5EyC,AgB4B/C,CLTU,CXnBuC,CI4ErC,CC1CD,ALlCa,CI4EV,IC1CE,AD0CE,COzDZ,EAAe,ATOP,EEkDS,AIxBA,CQxBvB,GXMI,AGkBuB,CJuBhB,eIvBgB,CAAA,aAAJ,CAAkB,KAAK,WAAvB,EAAoC,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAApC,EAA8D,GAA9D,CANK;AHXzB,ALnCkD,AWoB7C,ACaR,AEGI,AExCJ,AZiFM,AIxBA,CQzDN,EAAA,ChBIqD,CKiChC,CD4Cf,EOzDE,CCaR,AEGS,CdpCkD,CI6EhD,CJ7EkD,CI6EhD,COzDC,CAAC,EPyDE,EOzDT,CAAY,ECapB,AR4CsB,AIxBA,CMjBlB,CAAoB,EAApB,ANiBsB,CJsBf,EOvDH,aHiCkB,CAAA,aAAJ,CAAkB,KAAK,WAAvB,EAAoC,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAApC,EAA8D,GAA9D,CAPM;AR9CJ,AWqBjB,ACxBP,AEwCI,AVyCE,AD5CJ,AKoBI,AN5BQ,CU7Bd,CTqCE,CHzCmB,AYIrB,AV6BE,GEoDI,GUzCG,AXHP,CC4CQ,AD5CR,EC4CU,KAAK,CAAL,CD5CV,CAAA,CEDmB,AD6CA,CIxBC,CMjBlB,EVyCqB,CD5CvB,AKoBwB,GLpBxB,CC4C4B,KAHnB,IDzCF,GAAP,AKoBwB,CAAA,CLpBJ,GAApB,EAAsC,GAAtC,EAA6D,EAA7D,AKoBoB,CAAkB,CLpB0C,GAAhF,CKoB2C,CLpByD,UKoBhF,EAAoC,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,CAApC,EAA8D,GAA9D;ARrDpB,AWqBG,AGgBD,AE1CS,AZmFP,AD5CF,AKWwB,ANhB1B,EAAA,EYQE,CNQA,CJiCE,CYnFO,CAAA,AbuCN,ADLL,CCKM,ADLN,CYQQ,AVyCA,CUzCC,CVyCC,ED5CC,GC4CI,CAAL,GAAS,EYnFR,AdkCX,CF7BsB,AE6BX,CEiDY,CYnFZ,IZmFiB,EUzC1B,AXHA,CWG6B,AZRpB,CCKoB,ADLpB,OclCA,EdkCX,EYQ+B,AZRpB,SAAX,EAAkB;AGGC,ALhCK,AYJb,AEyC0B,AVqC5B,ADvCL,AKoBF,GHvBF,CLhCwB,CAAC,AI0EvB,EJ1EyB,AYJhB,CAAA,CJ2DJ,AN1BP,CF7BsB,CGmCb,EWE4B,EXFxB,CAAC,EWE2B,CAAC,AXFzB,CAAb,CSvCO,CTuCS,CWEiB,AXFhB,CSvCV,AViCX,CYQqC,ANkBnC,CLpBsB,EKoBE,GLpBG,EKoBE,II3DpB,KTuCP,EAAsC,CAAC,EAAvC,EAA2C,AKoBrB,CAAsB,cAAtB,CAAxB;ARvD8B,AWuB9B,AGc8C,AV2C/C,AD5CK,AKoBJ,AN1BA,GE2CK,CJzEyB,CAAC,AcqC/B,EdrCiC,EQwD5B,CRxDe,CWuBb,ERaE,ADNF,ISPP,ARaa,CAAC,ADNF,GCMK,CAAb,EAAgB,CAAC,AKoBrB,CN1BA,ECMwB,AKoBA,KLpBK,IKoBI,CAAC,IAAlC,ELpBI,EAAsC,CAAC,EAAvC,EAA2C;AEA1C,ALpCiC,AWwBvC,AGcA,AXDO,AKoBP,AN1BA,EGKM,CMvBA,AGOC,CdpBgC,CE6BtB,CGOX,CAAA,ELpCsC,EAAE,EAAzB,CGqCX,EEDJ,CAAA,EFCS,IAAL,CAAU,CAAV,EAAa,CAAb,IEDJ,EFCwB,CED/B,MFCQ,EAAgC,IEDxC;AACE,ALrCiD,AIkFnD,AD5CU,EC4CV,EJlFmD,IKqC3C,AD6CR,CAAA,CJlFyD,EAAE,AGsCjD,CEDG,CFCD,CAAC,CEDG,KAAK,AHRH,EEqDlB,CAAW,AD5CD,CAAa,CEDG,GFCC,EEDzB,ED6CS,CAAA,OD5CgB,CAAA,CC4C3B,EAAW,GAAX,EAAY,CD5CW,CAAc,KAAK,MAAnB,EAA2B,OAA3B,EAAmC,KAAK,KAAxC,EAA+C,CAAC,GAAG,KAAK,KAAT,GAAiB,EAAhE,EAAoE,CAAC,GAAG,KAAK,KAAT,GAAiB,EAArF,CAAb;AEAR,ALtCoB,AW0Bd,AGaV,AXAW,AKoBT,EGjCQ,AHiCR,CRnEmB,KK8CX,AGqBR,CMpBF,AV2CE,AIvBA,KHrBc,GAAG,CMZT,CAAA,GNYc,CGqBtB,CJuBA,AIvBW,EMpBb,CTD6B,CMZnB,CAAA,CHiCG,CAAA,CHrBT,QGqBF,EGjCQ,AHiCG,GGjCX,IHiCA,EAAgB,IGhCd,qBADF,EAEE,eAFF,EAGE,OAHF,EAIE,OAJF,EAIqB;ANSnB,ALtCF,AW4BE,AG5BJ,AVkFI,AFtDgB,CY5BpB,EAAA,AZ4BE,KSAE,CH8BF,EHpBS,ED4CA,EOtDP,GPsDY,EOtDZ,APsDA,IJlFoB,AQ0DtB,CG9BE,CAAA,EAAA;ANWE,ALvCoB,AW4BtB,APuDD,AD3CO,AKmBN,AN3BF,EAAA,EFhCwB,CAAC,AIiFb,CC1CR,AMXF,CX5ByB,CEgC3B,CAAA,CGOQ,ALvCc,EKuCZ,CMXR,AH+BO,CLnBE,EQZT,CNWa,AMXb,AH+BA,CHpBQ,CFCM,EEDG,EFCR,ADRX,CCQqB,ADRV,CCQA,CEDa,CFCA,CAAb,CEDgB,CADlB,GHNE,CCQoB,ADRpB,SAAX,EAAW,OAAX,CCQQ,CDRQ,CCQoC;AEAhD,ALxC4B,AW4BX,AG5BV,AXyCD,AKmBT,IR5D+B,CAAC,AQ0DjB,CHlBZ,CLxC+B,AcAxB,CAAA,CZgCX,CGQQ,ALxCc,EKwCZ,AFCA,EAAE,CAAC,EEDE,CAAL,GAAS,ADyCP,GDxCF,ADTV,CYhCW,AXyCY,EEDE,CSxCd,CXyCgB,CEDC,CAFnB,UFGkB,CAAA,GWzChB,MXyCY,CAAc,KAAK,MAAnB,EAA2B,mBAA3B,EAAgD,KAAK,KAArD,EAA4D,CAAC,GAAG,KAAK,KAAT,GAAiB,EAA7E,EAAiF,CAAC,GAAG,KAAK,KAAT,GAAiB,EAAlG,CAAb;AEAN,ALzCoC,AG0C/B,ADTP,IFjCsC,EKyCpC,GLzCyC,EKyCpC,ALzCsC,EKyCpC,ALzCW,AEiCb,IAAP,CGQc,GAAG,AGiBH,CHpBP;AAIL,AL1C+C,AW6BjD,APoDU,ADtCL,ADTN,GE+CD,CJjFmD,CEgCnC,CGUZ,EMbF,EX7BuD,EK0C/C,AL1CiD,EK0C/C,CMbV,KNagB,AMbhB,GNamB,EMbnB,CAAA,EAAA;ANSO,ALtCa,AW6BpB,APwDF,ADzCK,AKcW,EJ2BhB,CJ9FmB,AQmEnB,EHpBE,CMTA,EPwDF,CAAA,IOxDE,GAAA,CAAA,ITGc,EEqDhB,CAAW,SAAA,CAAA,SAAX,EAAW,GAAX,EAAY;ACzCX,AL3CD,AW4BqB,GNMd,MDkDP,eJpFsB,AIoFtB;AJpFwB,AIqFtB,ADxCE,AKgBG,AN9BS,EM8BT,CN9BP,CF/BwB,CAAC,EAAE,CQ6DpB,CAAA,CR7De,CG6Cb,ECwCA,KAAK,AIxBP,CAAA,CJwBL,SDxCE,GAA0B,EKgBvB,ELhBH,CKgBJ,YAAA;AHhBO,AL7CyB,AW8B9B,APwDD,ADxCE,AKgBD,EHjBK,EL7CyB,CAAC,AIoFrB,CCvCL,CAAA,AL7C4B,CW8B7B,EX9BgB,CQ8Db,KHjBF,CAAA,MAAA,GAAP,AMfE,UNeY,EAAd,EAA0B,GAA1B,EAA4C,EAA5C,EAAkE,EAAlE,EAAqF,GAArF,EAAyG;AACvG,AL9CsC,AG+CvC,AKgBG,AN5BJ,EAAA,CCJA,CH/BwC,EQ+DpC,GHjBG,AL9CsC,CQ+DrC,CR/DuC,AEmC/C,CM4BU,AN5BV,CFnCsB,IQ+DP,EAAL,EJqBE,AFjDZ,CM4BoB,AN5BpB,EM2BS,aN3BT,GGWE,AHXF,CGWuC,EAArC,SHXF;AGaE,ALhDiD,AWgCjD,AHgCE,AN5BF,IFpCiD,EQgE/C,EGhCE,CNgBC,CLhDkD,AQgEjD,CN5BC,CFpCkD,AQgEjD,CGhCC,GTIG,CM4BC,EAAL,GAAU,EAFX,CHdP,AMhBI,CAAkB,ETItB,CGYyB,EAAE,GAAG,IAA9B,SMhBI,CAAJ,EAA8C;ANiB9C,ALjDoB,AWiClB,APmDQ,ADnCL,AKgBH,AN5BH,ECYM,CH3DY,AI8FnB,AFjDA,GM8BI,GHhBG,AFAA,CQhBC,ARgBD,CKgBE,EAAE,KAAK,CLhBT,CAAA,GKaE,GLbF,GAAP,EQhB6B,ENgB3B,GMhBgC,CNgBC,EAAE,AFAvB,GEA0B,IAAtC,AFAF,EAA+C,GQhB3C,EAA+C;AXhCnD,AWiCM,APsDN,ADtCE,AKgBE,EJsBJ,IItBI,EJsBJ,CAAA,ADtCO,GKgBG,EAAE,CGhCC,GRgBX,CQhBI,ARgBW,AKgBA,IJsBjB,CJvFsB,AIuFX,CItBC,CLhBV,EAAwB,AKgBA,KJsBf,ADtCoB,CCsCpB,KDtCT,ICsCF,EAAW,GAAX,EAAY;ACrCV,ALlDsB,AWkCnB,ARgBJ,AKWQ,ANvBT,EAAA,CCUO,CHhDiB,CAAC,AQ6DvB,ER7DyB,AWgCvB,CNkBE,CDqCN,CJvFsB,CEsCtB,CAAA,CGYW,AMhBA,QTIX,CAAA,EEiDA,IFjDA,GAAA,MGYM,IAAiC,AHZhC,GAAP,EGY4C,AHZxB,GAApB,EAAoC,CAAW,CAA/C,UGYE,EAA6D;AAC3D,ALnD4B,AWmC1B,APqDJ,AIrBD,GAPM,CR5DyB,CAAC,CKmD7B,CLnD+B,CKmD7B,AMhBA,CNgBC,CLnDe,GIwFb,CAAP,OCrCE,CAAgB,IAAhB,AMhBoB,GAAG,qBAAqB,CAAC,eAAtB,EAArB;ANiBF,ALpDoC,AWoCnC,APqDJ,ADrCO,ADZR,ECYQ,ADZR,EFxCwC,CIuF5B,IJvFiC,AGoDrC,CAAA,CEAC,ALpDsC,AEwC/C,CAAA,CFxCsB,MGoDd,CEAJ,AFAI,CDZR,CAAA,CGYqB,IAAjB,CHZJ,CCYQ,EDZR,CCYA,SDZO,CCaL,MDbF,CCYA,CDZwC,CCctC,KAFF,EAEyB;AEArB,ALtD+C,AWqChD,ARmBD,AKaF,AN5BE,EM4BF,ERrEmD,CW+BjD,ATUA,GM4BF,AN5BE,CCeK,AKaP,CHfU,ALtD+C,CWqChD,CXrCkD,CGwDhD,CAAC,GAAG,CAAb,CEFiB,CFED,ADfhB,CE8CU,AD/BO,ADfjB,CGaoB,CGetB,CLbsB,AKaX,EHfe,CAAC,EFEA,CKahB,CAAA,AN5BT,CGaoB,CAAW,AHbpB,KGayB,CAAhB,CAAlB,AFEF,AKaF,AN5BE,ECesC,AKa7B,AN5BW,CCemB,EAAvC,AKaF,ELb6C,AKajC,AN5Be,KAAzB,EAAgC,KAAK,KAArC,EAA4C,WAAA,CAAA,KAAA,CAAM,KAAK,QAAX,CAA5C,EAAkE,KAAK,EAAvE,EAA2E,KAAK,EAAhF;AGcE,ALvDkB,AWsClB,ARmBA,ADfH,GFrDkB,AEmDnB,GSFI,GH+BJ,CHdU,CFED,IAAI,CAAC,GEFK,AFEF,CAAb,EEFkB,AFEF,CAAC,CQnBC,AH+BtB,EHd0B,AFEF,CEFG,AMjBF,IRmBI,CEFP,CAAW,KAAK,CAAhB,CAAlB,EFEA,EAAsC,CAAC,EAAvC,CQnBA,CRmB2C;AED3C,ALvDJ,AWsCG,APgDS,AD7BN,AKYJ,GJiBF,MD7BM,EEFG,CFEH,CKYG,KAAK,EAAZ,ILZI,CEFF,AFEE,CEFkB,EAApB,ALvDsB,EKuDE,EAAxB,EAA4B,CFE1B,EAAW,MEFb,CFEE,CEFqC,CFEjB,KAApB,EAA2B,CEF7B,EAAkD,CAAlD,CFEkC,CEFmB,CAArD,GFEE,EAAuC,WAAA,CAAA,KAAA,CAAM,OAAN,CAAvC,EAAuD,CAAC,GAAG,KAAK,UAAL,CAAgB,KAApB,GAA4B,KAAK,KAAxF,EAA+F,CAAC,GAAG,KAAK,UAAL,CAAgB,MAApB,GAA6B,KAAK,KAAjI;AEDF,ALxDwB,AG0DvB,AKYJ,AN5BH,IF1C8B,CAAC,AQoEjB,ERpEmB,EE0CjC,CF1C4B,CKwDjB,OHdX,OGcM,CAAoB,EAApB,EAAwB,EAAxB,EAA4B,SAA5B,EAAuC,SAAvC,EAAkD,CAAC,CAAnD,EAAsD,CAAtD;AACA,ALzDgC,AWwClC,APmDF,ADhCG,ADhEL,CAAA,CEgGE,CFhGF,CFKsC,AWwClC,CXxCmC,EAAE,GAAb,CKyDjB,ADkCT,CAAA,SAAA,AIvBY,CG5BQ,APmDpB,COnDqB,ENiBjB,CAAoB,CMjBtB,CNiBE,ADkCJ,EClC4B,CMjBC,APmD7B,CClCI,EAA4B,IMjB9B,GPmDK,EClCH,ADkCJ,EClC2C,ADkCxB,EAAnB,EAAoC,EAApC,EAA0D,CClCtD,CDkCJ,CClCsD,CAAlD,ADkCyE,EClCpB,ADkCzD,CClCI,CDkC4F;ACjC5F,AL1DwC,AWyC1C,APmDA,ADhCD,GATO,CHnDoC,AWyC1C,KXzC+C,AI4F1C,EClCE,AL1D0C,EAAzB,KI4FxB,IOnDkB,APmDA,COnDC,CPmDC,CClClB,CAAoB,CMjBtB,APmDuB,CClCrB,EAAwB,CMjBC,APmD3B,CClCE,EAA4B,IMjB9B,KNiBE,EAAuC,SAAvC,EAAkD,CAAlD,EAAqD,CAAC,CAAtD;AACD,AL3DoD,AW0CrD,APmDA,AIzBU,ANzED,GMyEX,CRpEuD,GEL5C,CS+CH,AT/CG,CEkGJ,CJ7FsD,EAAE,KELpD,GAAA,KEkGT,IAAyB,AFlGhB,CS+CmB,CPmDD,EOnDI,CPmDD,IAA9B,UOnD8C,CAAC,eAAhB,EAA/B;AX1CwB,AW4CxB,ARkBa,AKUf,ELVe,AKUf,CRpFmB,KWwDX,AH4BR,CLVe,AKUf,CLVe,YQlBO,CH4BtB,CAAW,CG3BP,CRiBW,GAAf,CKUW,CAAA,QLVqB,CKUhC,EAAW,CG3BW,ARiBtB,CQjBuB,CRiBuB,AKU9C,EAAY,CG3BR,IAA2B,ARiB/B,EAA6D,oBQjBR,CAAC,IAAlD,IACA,kBAAkB,CAAC,IAAnB,GAA0B,kBAAkB,CAAC,KAA7C,IAAsD,sBAAsB,CAAC,IAF/E;ANiBA,AL5DF,AW+CE,AP+CA,ADhCA,QEFI,AMbE,AP+CF,ADhCE,CKSR,ELTW,EEFA,ADkCA,CDhCc,IAAI,GQfR,EReI,CQdrB,ARc+B,AKSnC,IRvE0B,AG8DD,CEFnB,ADkCA,ADhCJ,IEF6B,ADkCA,KClCK,ADkCA,QO9CV,CAAC,CNYzB,ADkCA,EClC8C,ADkCA,CO9C5C,IAA+B,kBAAkB,CAAC,IAAlD,IACA,sBAAsB,CAAC,IAAvB,GAA8B,sBAAsB,CAAC,KAArD,IAA8D,kBAAkB,CAAC,IAFnF;ANcE,AL7DwB,AWmD1B,AP4CE,AIvBF,IRxE0B,CAAC,EAAE,CWmDvB,EXnDkB,CK6DjB,ADkCA,EIvBA,KAAK,EGrBM,AHqBlB,GGpBE,INSA,ADkCA,IClCyB,ADkCA,KClCK,ADkCA,KO3CZ,CAAC,INSnB,AMTA,AP2CA,IO3C2B,sBAAsB,CAAC,IAAlD,IACA,kBAAkB,CAAC,IAAnB,GAA0B,kBAAkB,CAAC,MAA7C,IAAuD,sBAAsB,CAAC,IAFhF;AXnDkC,AWuDlC,APyCE,ADhCF,AKSD,IRzEmC,CAAC,AQuEzB,ERvE2B,CWuD/B,CRSD,CHhEmB,CIgGjB,EDhCE,CAAC,GAAG,CAAb,EAAgB,CAAC,CCgCf,COzCmB,CRSD,CCgCC,COxCnB,APwCoB,CDhCC,CAAC,GCgCG,GDhC3B,EAAgC,CAAC,EAAjC,EAAqC,CCgCf,GAAmB,CAApB,EOxCG,CAAC,CPwCqB,GOxC5C,EPwCiD,EOxClB,KPwCa,CAAa,KAAK,OOxCb,CAAC,IAAlD,CPwC4C,EAAiC,COvC7E,KPuCA,iBOvCsB,CAAC,IAAvB,GAA8B,sBAAsB,CAAC,MAArD,IAA+D,kBAAkB,CAAC,IAFpF;ANQE,AL/DwC,AIiGzC,ADhCC,IHjEwC,EGiExC,GHjE6C,AGiE1C,CEFC,AFEA,CHjE2C,AGiE5C,CAAH,CHjEsB,EK+Db,AFEA,IAAI,EKML,GLNC,CAAU,GEFf,IFEK,CEFkB,AFE3B,KEFgC,OAAL,CAAa,MAAb,GAAsB,CAAjD,EAAoD;AAClD,ALhEiD,AW2DrD,AROC,IHlEoD,IW2DjD,CAAC,CX3DsD,EAAE,CKgEpD,UMLU,GNKf,CMLmB,ENKE,KAArB,MMLA,MAAsC,YAAY,IAAI,eAAtD,CAAJ,EAA4E;ANMzE,ALjEqB,AW4DtB,APuCF,AI5BU,GRpFO,AQoFnB,KJ4BM,KOvCK,APuCA,SAAL,IAAkB,KAAK,cAA3B,EAA2C;AJlG7C,AW4DM,APuCF,ADhCF,AKOF,EAAA,IJyBI,EOvCE,APuCA,AIzBN,CJyBO,ADhCA,AKOP,GGdU,CROC,CQPC,AROA,GAAG,CAAb,EAAgB,CCgCd,ADhCe,CCgCC,CIzBpB,CLPsB,AKOX,EJyBP,EJnGsB,AGmExB,CQRS,CRQiB,AKOjB,CLPkB,AKOlB,ELPT,EAA+B,KKOjC,EAAW,GAAX,EAAY;AHRR,ALlEwB,AW6DtB,APuCH,ADhCC,IHpEwB,CAAC,EAAE,CW6DzB,CHaN,CHRQ,ALlEkB,CGoEjB,GQPG,CNKC,AFEA,CQPC,AROA,GAAG,CAAb,EAAgB,CAAC,CKMrB,ELNwB,EEFhB,GMPG,ENOoB,AFE3B,CEFA,CFE6B,CEFC,AFEA,EAA9B,EAAkC;AEDhC,ALnE8B,AW8D9B,APuCL,ADhCK,AKMJ,GJcF,CJzFoC,CAAC,EAAE,CW8DjC,AROA,EHrEoB,CGqEjB,CQPC,AROA,CEFC,AFEF,AKMA,CGbG,ARON,CAAO,AKMX,CLNI,IAAY,MEFZ,CMRK,ARUL,EEFqB,IAArB;AACD,ALpEuC,AW+DtC,AROD,AKMJ,IR5E2C,CQ0EhC,GGXN,CX/D2C,EAAE,EAAzB,AW+Df,EAAE,cAJF;AX3D4C,AWgEjD,APuCN,ADhCG,ECgCH,EJvGuD,IWgEjD,EXhEuD,CWgEpD,APuCT,CJvG+D,AIuG/D,COvCW,QPuCX,AI7BY,CJ6BZ,MAAA,GAAA,UAAO,OAAP,EAAwC;ACjCpC,ALtEsB,AW2Df,AP6CT,GJtHiB,EIsHjB,EO7CE,CP6CF,EClCM,KAAK,KDkCX,CAAA,OClCE,EAAwB,CDkC1B,EAAW,OAAX,EAAoB,KAAK,KAAzB,EAAgC,KAAK,KAArC,EAA4C,WAAA,CAAA,KAAA,CAAM,KAAK,OAAL,CAAa,KAAK,aAAlB,EAAiC,KAAK,WAAtC,CAAN,CAA5C,EAAuG,KAAK,CAA5G,EAA+G,KAAK,CAApH;ACjCI,ALtEN,AWiEG,APuCF,ADhCC,AKCU,GJ6BZ,AI7BA,QLDS,EEFE,CFET,YEFI,ELtEoB,EKsEE,CAAtB;AACD,ALvEuB,AGyE3B,GAdc,CH3Da,CAAC,EKqEzB,ALrE2B,GAAL,GKuEf;AACL,ALxE8B,AWmElC,APsCJ,AI5BS,EAAA,ER7E6B,CAAC,EAAE,CQ6EhC,CJ4BT,AI5BS,CR7EmB,CWmEjB,ENKE,EMLT,GPsCJ,AI5BS,CAAA,MAAA,CHLD,EGKN,EHL4B,CAAtB,OGMJ,EADF,EAEE,EAFF,EAGE,EAHF,EAIE,EAJF,EAKE,EALF,EAKqB;AHThB,ALzEuC,AWoE3C,APhEH,ADuEiB,AKSb,CJhFJ,CDuEiB,CQxDP,APfV,CJJ8C,KAAK,AG2ElC,AKSR,CLTQ,CH3EoC,EAAzB,AQoFxB,GAAY,CAAZ,wBLTa,GAAf,UAA+C,IAA/C,EAA6D,OAA7D,EAA4E;AEDzE,AL1EoD,AG4ErD,AKSA,IRrFqD,IG4E/C,CKSD,CRrFsD,EAAE,CQqF7D,GLTc,AKSF,CAAZ,ELTiB,OAAO,CAAC,gBAAR,CAAyB,IAAzB,EAA+B,OAA/B,CAAjB;AEDD,AL3EyB,AWuEnB,APnEI,AIkFT,EGfK,CN/BA,ALvDY,IImBR,CAAA,CIkFJ,QJlFI,COmEJ,CAAA,CPnEI,AIkFT,GAAmB,KGfd,AHemB,CGfnB,APnEI,MOmEJ,GAAP,CHeqB,CAAiB,MAAjB,CAAwB,CGf/B,OAAd,EAA+C,AHeF,CAAA,EAAC;ARrF9C,AWuEE,ARMA,AKQgD,SGdvB,ARMpB,IQNoB,ARMhB,AKQuC,CLRtC,AKQuC,CGdxB,AHcyB,CAAC,CLRtC,CQNY,ARMzB,CQNyB,CRMT,CQNS,ARMR,EQNQ,CRML,AKQ4B,EGdvB,EXvED,AG6ExB,EAA0B,CQNI,ARMH,EAA3B,EAA+B,OQN/B,EAAyB,EAAA,GAAA,EAAA,CAAA,MAAzB,EAAyB,EAAA,EAAzB,EAA2C;ANK9B,AL5Ea,AWuErB,AROH,AKOyD,EHT9C,EL5Ea,CAAC,AQqFR,CHTN,AGSb,CHTa,AL5EgB,GAAL,AWuEb,CROJ,IAAI,CAAC,GAAG,CQPM,AROnB,EAAgB,CQPG,AROF,EQPE,CAAA,AROC,EQPD,CAAhB,CNKQ,GAAf,AFEI,EAA6B,CAAC,EAA9B,EAAkC,GEFC,EAAvC,EACE,SADF,EAEE,SAFF,EAGE,QAHF,EAIE,KAJF,EAKE,QALF,EAME,aANF,EAOE,UAPF,EAQE,UARF,EAQoB;AAClB,ALrFkC,AWwEhC,ARQE,IHhF8B,CAAC,EAAE,CKqF/B,ELrFkB,AWwEhB,ERQA,CQRG,ARQF,CEKG,EMbE,CNagC,CFLhC,CEKd,AFLQ,IAAW,CAAC,EQRI,CAAC,ERQA,CAAjB,IAAsB,CAAC,KAAK,EQRtB,EAAZ,ARQsC,GAAG,CAAnC,IAAwC,CAAC,KAAK,OAAO,GAAG,CAA5D,EAA+D;AEMnE,ALtF0C,AWyExC,ARQI,AKMN,IRvF0C,EWyExC,ENaI,AGCF,CRvF2C,CGiFzC,AKMA,CRvF2C,AQuF1C,EHDI,ALtFa,AWyEf,CAAC,ENaI,EFLA,CAAC,CAAD,CAAR,CAAY,CAAZ,AKMF,CHDkB,AGCF,CGdlB,ENauB,AFLF,CQRC,CHcC,GHDzB,EMbE,SHckB,CAAoB,ELNlC,EKMF,CAAJ,EAA+C;AHA/C,ALvFqD,AW0EnD,ARQG,AKMH,IRxFmD,EW0EnD,ENaI,ELvFqD,CQwFpD,CRxFsD,CW0EpD,CNaG,AMbF,CHcR,EHDa,CGCD,CAAC,IGdb,CHckB,CHDG,CMbD,CAApB,CNawB,CGCZ,GAAc,CHD5B,CGCE;AHCF,ALzFwB,AW2EtB,AHcD,GRzGgB,GW2Ff,ENcE,GAAG,EMdE,CNce,AMdd,UAAR,CAAmB,GAAG,CAAC,IAAvB,EAA6B,GAAG,CAAC,IAAjC,EAAuC,GAAG,CAAC,KAA3C,EAAkD,GAAG,CAAC,MAAtD;ANeA,ALzFJ,AW2EG,ARQG,MEMF,IAAI,EAAE,AFNA,CAAC,GAAG,CAAJ,IEMS,CFNC,CAAV,CEMY,ELzFE,CGmFC,CAAC,CEMC,EFNE,CEMC,AFNL,CEKC,IFLS,CAA7B,EAAgC;AEOlC,AL1FsB,AW4EzB,ARQO,AKMN,GGrBK,CXrEmB,CAAC,CK0FvB,CL1FyB,CQ0FvB,EHAE,AL1FgB,AGoFhB,AKMA,CAAC,CHAC,MFNM,CAAC,CAAD,CEMG,AFNX,CAAY,CAAZ,AKMF,CHAgB,AGAA,GLNG,EKME,CHAC,GAAG,CAFL,SGEJ,CAAoB,ELNlC,GKMF,CAAJ,EAAgD;AHC9C,AL3F8B,AGqF3B,AKMH,IR3F8B,CAAC,CK2F/B,CL3FiC,GAAb,CK2Ff,AGAA,EHAE,EGAP,GHAY,AGAA,GHAG,CAHO,CGGL,KAAL,GAAa,EAAzB;AHCA,AL5FsC,AW8EnC,ARQF,AKMF,EGdI,EX9EmC,EK4FtC,GL5F2C,EAAE,CK4FvC,CL5Fc,CK4FZ,IMdL,CAAA,CNcW,GAAG,KMdd,CAAA,YAAA,GAAP,UAAoB,MAApB,EAAgE;ANUtC,ALxF2B,AW+EnD,ARQC,IHvFkD,CKwFnD,KLxFyD,CW+EjD,CX/EmD,KW+E7B,CAAC,eAAvB,KAA2C,SAAnD;ANeA,AL9FsB,AWgFvB,AHcC,GR/GiB,AW+FZ,KNgBD,AGAA,EAAE,CAAC,OHAO,GAAG,EAAE,AGAf,CHAgB,AGAA,KAAK,SHAR,CAAkB,GAAlB,CAAjB,AGAoB,CAAoB,EAApC,CAAJ,EAA6C;AHC7C,AL9FF,AGwFE,AKME,QHAE,GFNG,AKMA,IAAL,GAAY,CLNd,AKMe,GHAG,EGAE,CHAC,CAArB,AL9FsB,GQ8FR,GAAc,EAA1B;AHCF,AL/FwB,AWgF5B,ARSG,AKME,GLvBY,CHxEW,CAAC,EAAE,CK+FvB,CMfR,CXhF0B,eWgF1B,SNekC,GAAG,UAAU,CAAC,IAAX,CAAgB,UAAA,CAAA,EAAC;AAAI,AL/FtB,AWbpC,CAAA,EAAA,CXaoC,CAAC,EAAE,GAAb,GK+FgC,CAAC,CAAC,IAAF,YAAkB,YAAA,CAAA,SAAlB,IAA+B,CAAC,CAAC,IAAF,CAAO,OAAP,KAAmB,mBAAlD;AAAqE,AL/FnF,AG2F3B,AKMb,ELNa,EH3F2B,CK+FP,CAAjC,EGEI,CRjGyC,AG2FhC,CAAA,AKMP,CRjGyC,AQiGxC,ERjGe,QG2FT,EKMT,CLNN,AKMsB,KAAK,KLNA,IAA3B,EAAyC,GKMnB,CAAoB,GLN1C,CKMM,CLNkD,AKMtD,EAA+C;AHD/C,ALhGmD,AWb1C,ARyGT,AKME,IRlGiD,GWb1C,CN6GL,AM7GK,ARyGH,EH5FmD,CQkGlD,CRlGoD,GQkGzD,GHFY,AGEA,ELNI,CEID,EFJI,AKMF,CG/GV,EN6GT,CM7GS,CH+GK,ELNc,CAAC,AKMF,EAAzB,UG/GO,mBRyGY,CAAwC,IAAxC,EAA8C,OAA9C,CAArB;AH5FsB,AG8FtB,AKKC,GRrHgB,KGgHX,YAAY,GAAG,CACnB;AEGF,ALjGF,AG+FI,KAAC,CAAD,EAAI,CAAJ,CAFmB,CEKnB,CAAC,AFFD,CAAC,CAAD,EAAI,CAAJ,CAHmB,EAInB,CAAC,CAAD,EAAI,CAAJ,CHjGoB,AG6FD,EAMnB,UEDA,IACA,cAAc,IAAI,aADlB,IAEA,cAAc,IAAI,QAFlB,IAGA,CAAC,UAJH,EAIe;AACb,ALtGsB,AGoGtB,AKAF,IRpGwB,CAAC,AGoGtB,EHpGwB,CQoGvB,EHEE,ALtGgB,AQoGhB,CAAC,CLAG,GAAG,CAAX,CEEW,CFFG,CAAd,CEE2C,AFTxB,CESyB,CFD5C,CAAC,AKDC,CAAgB,KAAK,CHEoB,AFDnC,EEC+C,CFD5C,CAAX,EAAc,CAAd,CARmB,EASnB,CEA2C,AFA1C,EEAiE,AGFhD,CAAoB,CHEK,CAA3C,EFAQ,AKFN,GLES,CAAX,CKDA,CLCc,CAAd,CATmB,EAWnB,AKHK,WAAL,CAAiB,MAAjB,GAA0B,KAAK,gBADjC,EACmD;ARrGnB,AGyG9B,AKHA,IRtG8B,CAAC,AGyG9B,CAAD,CHzGiC,CGyG7B,EHzGgB,AQsGd,ELGE,GAAG,CAAX,CAZmB,EAanB,CAAC,CAAD,CKJkB,CLId,EKJiB,ELIb,GAAG,AKJe,CLI1B,CAbmB,EAcnB,CAAC,CAAD,EAAI,IAAI,GAAG,AKLU,CLKrB,CAdmB,AKSnB,ELOA;AELA,ALxGsC,AG8GtC,AKPA,IRvGsC,CG8GrC,IH9G0C,CQuGrC,CHC6B,ALxGU,CG8GrC,CH9GY,EKwGe,AFMxB,AKPA,CLOX,CENmC,CFMrB,AKPA,EHCqB,CAAA,CFMjB,AKPA,CHCiB,AGDhB,ELOE,CAArB,CAjBmB,CKUL,CLQd,AKRyB,CLQxB,AKRyB,KHCS,EFO3B,CEP2B,EFOxB,CAAX,CKRsC,CLQxB,AKRyB,ILQrB,AKRQ,CHC1B,EAAmC,AFOd,AKRyB,CLQ9C,CEPmC,AFXhB,EAmBnB,CERmC,AFQlC,OAAO,AKTkD,CAAC,ELShD,CAAX,CERmC,CAAA,AFQrB,AKTgC,GAAqB,CLSjD,AKTO,EHCzB,CFQqB,CERc,AFQnC,CAnBmB,AKUsD,CHCtC,AFXrC,EEWE,EAA+C,AGD+B,KAAK,KAA1D,CAAX,IAA+E,EAA/E,GAAoF,KAAK,KAAvG;AHCa,ALxGoC,AQwGjD,IRxGiD,MAAM,AQwGjD,EHAa,ALxGsC,GQwG9C,GAAG,IHAe,AGAX,CAAC,EHAU,GGAf,CAAY,QHAG,CAAA,EAAA,CAAA,AGAS,CHAT,AGAU,IHA1B,AGAY,IAAuB,KAAK,KAAK,KAAjC,CAAX,IAAsD,EAAtD,GAA2D,KAAK,KAA9E;ARxGoB,AGmHtB,GHtIiB,MGsIZ,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,CAAC,EAA3B,EAA+B;AEV3B,ALxGN,AGmHI,AKVA,UAAI,CLUC,AKVA,CHDC,CGCC,CAAC,CLUC,CAAC,GAAG,CAAb,EEXgB,AFWA,CAAC,GHnHG,AGmHA,MKVf,CLUL,AKV2B,CHDC,CFWC,CAAC,EAA9B,AKVK,ELU6B,AKVA,KAA7B,CHDuB,CAAA,AGCa,IAApC,CAAyC,IHDxC,IAAmC,EGCK,CAAA,EAAC,KHDI,CAAC,OAAX,KAAuB,OAA9D,EAAuE;AACrE,ALzGkB,AGoHpB,AKXiD,IRzG7B,CAAC,EAAE,GKyGrB,ALzGgB,EGoHZ,GKX2C,CAAC,CHAzC,CAAC,CAAD,CAAP,CAAW,IAAX,CAAgB,EFWI,AKXwC,GLWrC,GKXqC,CLWjC,AKXiC,CHA5D,AFW4B,GKXmB,GLWxB,KAAgB,GAAzC;AEVE,AL1G0B,AQyGsC,IRzGtC,CAAC,EAAE,AQyG5B,CAAL,EHCI,AL1GgB,AQyGmD,UHCzD,GAAG,IAAb;AACD,AL3GmC,AGsHpC,AKZA,IR1GoC,KAAK,EAAE,CGsHvC,AKZE,CR1GY,GQ0GR,GAAG,IAAI,CLYD,CAAC,CAAD,CAAZ,CAAgB,CAAhB,AKZa,CAAA,IAAJ,CLYc,AKZL,KAAK,ELY3B,EAAoC,WKZvB,EAA+B,KAAK,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAK,SAA9D,CAAb;AR1G+C,AGuH7C,AKZF,IR3G+C,IQ2G/C,ER3GqD,AQ2GnD,CAAC,CR3GoD,QQ2GvD,CAAa,IAAb;AHEA,AL7GkB,AGwHjB,AKZD,GRhIa,SKiIT,CGDC,SHCS,EGDd,CAAiB,IAAjB,CAAsB,IHCI,AGD1B,QHC0B,CAAA,MAA1B,EAAkC;AAChC,AL7GR,AQ4GK,UHCG,OAAO,CAAC,CAAD,CAAP,CAAW,IAAX,CAAgB,AL7GA,UK6GhB;AACD,AL9GmB,AGyHpB,AKZH,IR7GuB,CAAC,EAAE,GAAL,EGyHd,gBAAJ,EAAsB;AEVvB,AL/G6B,AG0H1B,IH1H0B,CAAC,EAAE,GAAb,AG0HhB,YAAY,CAAC,CAAD,CAAZ,CAAgB,CAAhB,IAAqB,OAArB;AH1HkC,AG2HnC,AKZL,IR/GwC,IQ+GpC,CR/GyC,EAAE,EAAzB,AQ+Gb,IAAL,KAAc,CAAd,IAAmB,KAAK,IAAL,KAAc,CAArC,EAAwC;AHEtC,ALjHiD,AG4HhD,AKZD,IRhHiD,EKiHjD,ILjHuD,AQgHjD,ERhHmD,GKiHhD,AGDA,GAAG,CHCC,CGDC,CAAC,MHCM,GAAG,KAAX,AGDb,GHCgC,UAAhC;AACA,ALlHoB,AG6HrB,GHlJgB,GKuIf,SAAS,IAAI,QAAQ,GAAG,KAAX,GAAmB,UAAhC;AAEA,ALnHJ,AQgHI,MHGA,GAAG,CGHC,EHGE,GGHG,ORhHO,OQgHZ,CAAoB,IAApB,CAAyB,IAAzB,CAA8B,UAAA,CAAA,EAAC;AHIjC,ALpHgB,AG8HpB,AKdyC,IRhHrB,CAAC,EAAE,CKoHnB,CFUiB,CH9HH,EKoHV,CFUa,CEVX,CFUW,AKdoB,CAAC,ELcrB,CAAA,EAAA,AKd0B,EHI5B,GAAG,AGJmB,KHId,GAAG,CADtB,AFWa,GAAA,YAArB,EAAqB,EAAA,GAAA,cAAA,CAAA,MAArB,EAAqB,EAAA,EAArB,EAAmC;AET/B,ALrHwB,AG8HjB,AKduC,IRhHtB,CAAC,EAAE,AQgHzB,CHKF,ELrHc,AG8HP,EETH,AFSG,AKbP,EHIM,CFSC,EKbF,MHIU,GAAG,GFSX,CAAA,CKbP,CHIwB,AFSjB,AKba,CLab,EEToB,CAFvB,CGFJ,CAA0B,IAA1B,CAA+B,UAAA,CAAA,EAAC;AHKhC,ALtHgC,AG8HzB,AKb6B,IRjHJ,IKsHhC,CLtHqC,CG8H7B,CH9H+B,AG8H9B,EERJ,ALtHS,CG8HL,CERF,AGL6B,CLa3B,AKb4B,CLa5B,CAAA,CAAF,CERK,CGL8B,EHK3B,CAHX,EGFgC;AHMpC,ALvH2C,AG8HpC,AKbsC,IRjHF,GQiH3C,CHMA,AGPF,ERhHmD,AG8HtC,AKbqC,CLapC,CH9HuC,EKuH7C,AFOM,EEPJ,AFOI,CAAA,CAAA,CAAL,GEPO,GAAG;AAJb,ALnHU,AG+HhB,AKbE,GRxIa,GGqJf,CEZA,MGDO,IAAL,CLaU,CAAC,CAAD,AKbE,CLad,AKbE,CLac,CAAhB,IAAqB,OAArB;AELA,ALzHJ,AG+HG,AKbE,MHOD,UAAU,GAAG,EAAE,CAAC,ALzHA,cKyHH,CAAkB,GAAlB,CAAb;AACA,AL1HkB,IAAA,CAAC,CK0HnB,CL1HqB,GAAL,sBK0HU,GAAG,UAAU,CAAC,IAAX,CAAgB,UAAA,CAAA,EAAC;AAAI,AL1HxB,AGiI5B,AKbE,IRpH0B,CAAC,EAAE,GAAb,AQoHZ,CLaC,IEP6C,AGNzC,CHM0C,CAAC,IAAF,EFOpD,MKbM,CAAoB,EAApB,CHMgE,AGNzC,IAAvB,CAA4B,OHMoC,CAAA,EGNpC,CAAA,EAAC,IHMiB,IAA+B,CAAC,CAAC,IAAF,CAAO,OAAP,KAAmB,mBAAlD;AAAqE,AL1HrF,AGkIrC,AKdwC,GL9B1B,CHtFuB,GK0HL,CAA7B,CL1HuC,EAAE,EAAzB,EQoHqB,CAAC,KAAK,KAAN;AHOrC,AL3H6C,AQoHC,IRpHD,EK2H7C,CGPI,GRpH+C,EAAE,AQqHnD,IHMQ,CGNH,EHMM,UAAU,CAAC,CGNtB,CAAoB,EHMT,CAAgB,CGN3B,CAAyB,IAAzB,CAA8B,GHMH,CAAA,EAAC,IGNE,CAAA,EAAC;AHMC,AL3HlB,AGmItB,AKd2C,GR5ItB,MG0JrB,MERwC,AGNG,CHMF,AFQzC,AKd4C,CHMF,IAAF,AGNS,KAAN,OHMe,YAAA,CAAA,SAAlB,IAA+B,CAAC,CAAC,IAAF,CAAO,OAAP,KAAmB,OAAlD;AAAyD,AL1H/F,AGdF,AKkIoD,CLlIpD,EAAA,IEwImB,AGNX,CHMF,AGPA,EACiD,YRpHjC;AK4HhB,AL5HkB,AQqHhB,IRrHgB,CAAC,CK4HnB,CL5HqB,GAAL,GQqHT,IAAL,GHOY,AGPA,CAAZ;AHQF,AL7H0B,AGdnB,AKoIN,IRtHyB,CAAC,CK6H3B,CL7H6B,AGdtB,CAAA,EHcS,EK6HV,CAAC,EF3IA,EE2IP,CAAY,AF3IL,OE2IP,AF3IO;AE4IR,AL9HmC,AQuHnC,IRvHmC,KAAK,EAAE,EAAzB;AiBxBtB,AjBwBmD,IiBxBnD,AjBwBmD,MAAM,EAAE,QiBxB3D,GAAA,OAAA,CAAA,kBAAA,CAAA;AZwJI,ALhIkB,AFjBtB,ACPA,AgBAA,APiJU,GRjJW,CFOrB,AiBPA,IjBOA,AU0IU,CTjJY,CSiJZ,CHOC,EGPoB,EOjJ/B,EVwJI,EGPiC,CAAC,KTjJtC,CAAuC,GAAvC,EAAkD,OSiJnB,CAA0B,EAA1B,EAA8B,IAA9B,EAAoC,KAAK,IAAzC,EAA+C,KAAK,IAApD,CAArB;AHQP,AYxJH,AjBwBE,AFlBF,AiBPA,APiJU,GHrDO,CY3FjB,ITgJW,OAAO,GAAA,EAAA,CAAA,CRxHI,AQwHJ,CShJlB,ATgJU,GShJV,OAAA,AlBDqD,CkBCrD,QlBD4D,YAAA,QkBC5D,CAAA;AjBwBwB,AFlBxB,AiBPA,APiJU,IRxHc,CAAC,EAAE,CQwHP,ERxHE,EFlBtB,AiBPA,GPiJ2B,GAAA,EAAA,CAAA,CAAA,CAAjB;AHUA,AYzJV,AjBuBgC,AFZ9B,ACZA,AgBGA,EVuJQ,EYzJV,AjBuBgC,CAAC,CKkIvB,CAAA,ALlIyB,GAAb,CFZpB,AiBTA,EhBHA,CAAA,CDYA,CO8IQ,AP7II,CO6IJ,GYzJV,CnBWE,CiBTA,CEFF,AnBac,AiBXQ,MjBSpB,CmBXF,CZyJU,AYzJV,AnBcY,AiBZV,EAA+C,CVuJ/C,IP9IA,EAIU,IO2IR,EADF,EAEE,EAFF,CP9IA,COiJE,CP5IQ,GmBhBZ,CAAA,IZyJE,EAIE,GPlJF,EAMU,IOwIV,EAKE,UALF,AP9IA,EOoJE,AP7IQ,UOuIV,EAMwB,GPpJxB,EAQU,QARV,EAQ6B;AO8I3B,AL1IoC,AFZtC,ACZA,AgBGoB,AP+IlB,IR1HoC,IK0I9B,APtJR,CEY2C,AerBvB,AP+Ib,ER1HsC,EAAzB,AFZpB,AUsIE,GVtIF,AUsIc,CO/IM,GV+JA,APtJpB,AiBToB,GV+JG,AGhBrB,EHgBA,GU/JkB;AVgKlB,AYjKJ,AjBsBmD,ADxBjD,AgBAQ,APmJN,ISjJJ,AjBsBmD,IK2I3C,ANnKC,CgBAC,APmJD,CR3HgD,EAAE,ADxB9C,CSmJT,ESjJJ,CTiJgB,ESjJhB,ClBFS,AgBAC,ChBAW,EMmKC,AUnK6B,CPmJ/C,COnJM,CVmKe,AYjKzB,CZiKI,AYjKJ,IlBFqB,OAAA,EAAO,OkBE5B,CAAA;AZkKI,AL5IkB,AFXR,ACZV,AgBEkD,APkJlD,GRtJiB,KKqKb,CPvJM,AUwIL,EAAL,CTpJM,EDYI,CCZD,ASoJE,EVxID,CCZE,ESoJI,EVxIN,ACZM,ESoJhB,GTpJY,CMmKY,CNnKxB,EMmK+C,QAA/C;AACA,AYlKJ,AjBsBE,AFXY,ACZV,ASoJA,ISnJJ,IZkKQ,ANnKJ,CDYU,AUwIL,ETpJF,ASoJH,CTpJI,GDYM,ACZV,ASoJW,EHeE,CYlKjB,AnBWc,ACZA,EMmKM,AGfA,CSnJpB,AlBDI,CCuBkB,EK4IE,APvJV,AUwIV,ISnJJ,CAAA,MZkKwB,CAAA,SAAJ,CAAc,KAAK,CYlKvC,CAAA,GZkKoB,EAA0B,KAAK,KAA/B,EAAsC,SAAtC,EAAiD,SAAjD,EAA4D,oBAA5D,CAAhB;AACA,AL7IoB,AFVZ,AiBVG,APkJX,EOlJW,EfoBS,CAAC,EAAE,CK6InB,CPvJI,AUwIH,CR9Ha,GepBP,CAAA,EjBUH,EOuJM,CPvJN,EOuJS,EAAE,AUjKR,CViKS,AUjKT,CPkJX,CVxIQ,EUwIgB,COlJb,GAAb,EPkJgC,CAAC,GHed,CAAkB,KUjKrC,GPkJ0B,CHeP,AGf2B,CHe5C,IGfiD,gBAAzB,EAA2C,KAAK,IAAhD,EAAsD,KAAK,IAA3D,CAAxB;AHgBA,AYnKJ,AjBqBgC,AFTpB,ACbR,ASqJA,ISpJJ,AjBqBgC,CAAC,EAAE,CK8I3B,ANpKJ,CDaQ,AUwIH,CR/Ha,CDtBf,CAAC,MAAJ,EDaQ,CCbK,CkBCjB,CnBYY,EmBZZ,AToJI,GAAwB,ISpJ5B,CAAA,AlBDiB,CMoKiB,APvJtB,AUwIsB,CAAC,EHeE,UAAU,CAAC,IAAX,CAAgB,CGfzB,CAA2B,KSpJvD,AToJ4D,CSpJ5D,EZmKqD,CAAA,EAAC,UGf1B,EAAkD,KAAK,gBAAvD,EAAyE,KAAK,IAA9E,EAAoF,KAAK,IAAzF,CAAxB;AHesD,AL9IlB,AFR5B,ACbN,ASqJF,IRhIoC,KAAK,AFRjC,AUwIH,CTrJH,CCqByC,EK8IW,AL9IpC,CK8IqC,CAAC,ENnK/C,CAAC,CMmK4C,ENnK7C,CDaD,ACbN,GDaM,AUwIR,CAAsB,KHckD,CGdxE,CAA6B,EAA7B,GVxIQ,KOsJgE,CAAA,SAAlB,IAA+B,CAAC,CAAC,IAAF,CAAO,OAAP,KAAmB,mBAAlD;AAAqE,AYhK/H,AjBkBmD,AFPvC,ACbP,ASqJF,GA/DM,CRlE0C,CK8Id,CAAjC,GYhKW,AnBWH,ACfR,CCsBqD,EAAE,MiBlB3D,GAAwB,InBWZ,GAAA,gBAAA;AOsJR,AL/IkB,AFNV,ACbT,GCPkB,IDCZ,CMwKD,ANxKN,CDmBU,ACnBV,SMwKgB,GAAG,GPrJT,EOqJR,CPrJQ,eAAA;AEOV,AFNU,AiBdR,APsJK,EAAA,MAAA,CVxIG,AUwIH,IOtJA,IjBcG,CUwIH,CAAA,CVxIG,CiBdR,CAAc,CfoBK,EQkId,GVxIG,AUwIV,UOtJE,APsJY,COtJmB,MPsJjC,EAA+C,COtJ7C,EAA0C,UAAA,CAAA,EAAC;AVoK3C,ALhJqB,AFnBJ,AiBAf,APsJF,IRnIqB,CAAC,EAAE,EFnBP,AUsJZ,CRnIc,AenBjB,CVmKK,AUnKJ,CVmKK,AUnKJ,GjBAa,GAAiB,CAAjB,MUsJjB,COtJE,APsJoB,MAAtB,CAA6B,KHatB,EGbP,EHcE,AGdoC,KAAK,EAA3C,EAA+C,KHc/B,AGdoC,EAApD,EHcoB,AGdoC,KAAK,KAAK,EHa3D,GGbP,CHeE,CGfuE,KAAK,KAAK,GHenE,EGfhB,EHeoB,KAAK,KAFlB,IAGL,CAAC,UAHH,EAGe;AAEb,ALrJ2B,AFjBvB,ACFT,AgBCK,APsJH,GAFM,CRlIwB,CAAC,CKqJ5B,CLrJ8B,CKqJ5B,CAAC,APtKC,CEiBa,AelBjB,KAAI,CAAC,EVuKL,CAAa,OUvKb,CjBCI,AiBDY,CVuKhB,AUvKiB,CAAC,CjBCgB,EiBDlC,GjBCI,CiBDqB,IAAzB;AfkBmC,AFLnC,AiBZA,IfiBmC,KAAK,AFLnC,CiBZL,CfiB0C,EAAzB,EejBb,CAAC,UjBYL,GAAyB,EiBZzB,GAAuB,CAAC,CAAC,CjBYQ,CAC/B,CiBbF,EjBYiC,EAE/B,YAAA;AO0JF,AYzKE,AjBkB4C,AFHtC,ACxBd,AgBWK,APsJY,EAAA,ERtImC,GD3BpD,CAAA,ASiKiB,CO1Jb,AP0Ja,CSxJT,AjBkBkD,CKuJjB,CLvJmB,CFH9C,EO0J2B,EAAA,CYzKzB,AnBeE,CAAC,CO0JsB,CAAA,AYzKtB,EZyKsB,CNlLzC,GAAA,ASiKiB,ESxJU,CAAC,AnBed,AUyIZ,CVzI6B,IO0JU,GAAA,EP1J3B,AUyIsB,CVzIK,CUyIvC,CTjKF,CkBSmB,ATwJuC,CSxJf,AnBe7B,CAAA,EO0JR,EAAmC,AGjBvC,EHiBuC,AGjBsC,GHiBtC,CGjBvC,ESxJiB,ATwJ0E,CSxJrF,GTwJN,EAAuG,GHiBhE,CAAA,MAAnC,EAAmC,EAAA,EAAnC,EAA+C;AAAlC,ALvJI,AFHuB,AiBX1C,APqJA,GRlKiB,EFsBkB,EAG/B,CUyIE,IHgBe,CUrKhB,MjBYD,AUyIa,EOrJjB,CVqK+B,AUrKjB,APqJM,EAAE,CHgBS,AGhBR,YHgBQ,AGhBX,CHgBW,AUrK/B,APqJoC,COrJL,CVqKA,CAAA,CAAA,EGhBX,EHgBL,AUrKf,APqJ4C,EOrJJ,EPqJpB,EAA8B,CAA9B,CAApB,IOrJwC,CAAA,EAAC;AEF3C,AjBiBA,AFHY,AiBXR,APqJE,QAAA,EOrJF,APqJE,COrJD,CAAC,CjBWM,AU0Ie,CSxJvB,ATwJwB,CSxJvB,GnBcW,AU0IW,CV1IV,CU0IiB,GSxJlC,AjBiBqB,CQuIM,CSxJZ,ATwJT,COrJF,WjBWQ,GAA0B,CAAC,KAAI,CAAC,kBAAhC;AO0JN,AYvKJ,AjBgBqB,AFHuC,AiBV1D,APoJE,IRvIiB,CAAC,AFNa,CAAjC,CEMsB,CQuInB,ERvIc,AebjB,EVoKM,AYvKR,GFGM,APoJM,COpJL,EPoJK,CSvJL,CAAC,ATuJI,CAAA,CHgBM,AGhBN,CAAR,ESvJJ,CAAc,AFGZ,CAAgB,CAAC,CAAC,GAAlB,EVoK4B,EUpKH,KAAzB,KVoK4B,CAAA,SAAtB,IAAmC,CYvK3C,SZuKqD,CAAC,OAAX,KAAuB,OAA9D,EAAuE;AACrE,AYvKN,AjBe6B,AFF5B,AiBVA,APmJG,IRvIyB,CAAC,EAAE,CQuIlB,COtJd,CVuKM,ALxJa,EKwJX,CAAC,EGjBY,GAAA,CStJrB,CAAA,ATsJqB,CAAA,CAAA,CAAjB,EHiBE,CAAgB,UAAhB;AACA,AYxKN,AjBeqC,IAAA,KAAK,CKyJpC,CLzJsC,EAAzB,OKyJH,GAAG,IAAb;AACD,AYzKL,AjBegD,AFArC,AUyIX,EVzIW,EEAqC,EFArC,CAAA,CUyIP,ERzIkD,EAAE,CiBfxD,GnBeW,CAAA,EUyII,CVzIJ,AUyIK,GVzIlB,GUyIM,GAAqB,CAAzB,EAA4B,GVzI9B;AmBdC,AjBcoB,AQ0IjB,GRtKe,GQsKf,OAAO,GAAG,CAAV;AHkBE,AL3JN,AQ0IG,YHiBO,UAAU,CL3JC,WK2JW,QAAA,CAAA,MAA1B,EAAkC;AAChC,AYzKF,AjBaiB,IAAA,CAAC,EAAE,GK4JlB,AYzKF,AjBae,EK4JX,CAAC,IYzKE,GAAG,KZyKR,CAAgB,EYzKA,CAAC,OZyKjB,GYzKQ,CAAoB,IAApB,CAAV;AZ0KC,AL7JwB,AeZ9B,APwJC,GOnKW,CfuBkB,CAAC,EAAE,CQ4I1B,ER5Ia,SQ4IF,GAAG,EAAE,CAAC,YAAH,CAAgB,MAAhB,EAAwB,CAAxB,EAA2B,IAA3B,CAApB;AHkBG,AKzLP,AOgBE,AjBWuC,IU3BzC,AV2ByC,KAAK,CU3B9C,CV2BgD,EU3BhD,AV2BuB,CiBXlB,CAAC,KPhBN,CAAA,COgBE,EAAa,YPhBf,CAAA;AOiBI,AjBUgD,AeV3C,APwJL,EOxJK,EfU2C,IQ8I5C,ER9IkD,EiBVtD,AjBUwD,CeVnD,CAAA,KEAE,ATwJQ,CSxJP,ATwJQ,GOxJX,CAAA,CEAL,CAAc,ATwJV,GAAqB,CAAzB,EAA4B,COxJvB,GAAP,UAAiB,GAAjB,EAA4B,EEA1B;AZ0KE,AKzLN,AOgBI,AjBSmB,AFAnB,AiBTA,APwJE,GR5Ke,CUIrB,ELyLM,AGjBA,KOxJK,EPwJE,EHiBE,CUzKC,APwJA,CExKhB,AFwKM,EHiBa,AYzKf,AnBSA,CYzBJ,AOgBI,AnBSA,IOgKoB,EUzKb,CLhBX,AKgB2B,CLhB3B,CLyL6B,CUzKlB,IVyKQ,EUzKiB,CVyKC,GUzKjC,OVyKE,GKzLN,CAAA;AL0LM,AY1KF,AjBUF,AFDE,AiBRD,APwJE,GO1JI,GV2KH,SAAS,IAAI,ILhKI,CKgKC,KAAK,KAAV,GAAkB,UAA/B;AAEA,AKzLN,AOaI,AjBUqB,AFDrB,IYtBJ,AVuByB,CAAC,CKkKpB,CLlKsB,GAAL,GiBVnB,CPbJ,AZsBU,COmKK,EKzLf,CLyLkB,CPnKH,GOmKO,EKzLtB,AZsBU,CYtBV,CZsBI,CAAA,MOmKkB,CAAA,GKzLtB,CAAA,KLyLkB,CAAc,KAAK,KAAnB,EAA0B,KAAK,KAA/B,EAAsC,SAAtC,EAAiD,SAAjD,EAA4D,oBAA5D,CAAZ;AAEA,AY7KH,AjBS8B,AePxB,APwJL,EOxJK,EfOwB,CAAC,CKoK5B,CLpK8B,GAAb,CQiJZ,CAAC,COxJH,CAAA,EV2KO,GAAG,AGnBR,EHmBU,AGnBA,CHmBC,CU3Kb,CAAA,IPwJE,CAAP,OHmBe,AU3KV,CV2K4B,EU3KnC,OV2KiB,CAAb,EU3KgB,IAApB,EAAkC;AV4K9B,AK3LN,AVsByC,AePvC,APyJC,GAfc,CEzJjB,AVsByC,EKqKnC,EU5KJ,CfO4C,EAAE,CUtBhD,CVsBuB,AePrB,ELfF,CKeE,IAAA,ELfF,CAAA,SL2LgC,CK3LhC,CAAA,CL2LmC,UAAU,CAAC,IAAX,CAAgB,UAAA,CAAA,EAAC;AAAI,AY5KtD,AjBOkD,AFDhD,IECgD,MiBPlD,AjBOwD,EAAE,AFDxD,EAAA,COsKoD,APtKpD,COsKqD,CAAC,CY5KhD,CAAC,AnBMP,EOsKoD,GY5KtD,SZ4KwE,YAAA,CAAA,SAAlB,IAA+B,CAAC,CAAC,IAAF,CAAO,OAAP,KAAmB,mBAAlD;AAAqE,AK1L7H,AOeE,AjBMqB,AeNnB,AP0Ja,EAAA,CRlLI,CUSrB,GL0LmC,CAA7B,AGjBW,CAAA,CS1Jf,CFAS,IAAI,CAAC,CEAP,CAAC,EFAC,CLfX,AKeqB,AP0JJ,GEzKjB,AFyKE,OEzKF,AKeqB,CLfrB,EKeqB,AP0JS,EO1JN,GEAtB,GAAgC,KAAhC,GT0JA,CEzKF,CAAA,AFyK2D,IAAzD,EAAuE,IAAvE,EAAmF;AHkB/E,AY1KE,AjBKN,AFDE,AiBNwB,AP2JxB,QAAI,EHiBE,AY1KF,ETyJI,CO3JgB,CV4Kd,CGjBC,CAAX,CHiBsB,APtKjB,CiBNuB,AP2Jd,CO3Je,IfOV,EFDnB,CmBJoB,AnBIN,COsKZ,CU5KsB,CEED,AnBIvB,AiBNuC,CjBOrC,EiBPsB,CEEG,AFFH,OjBOrB,EAAD,EAAG,QmBLsB,CAAA,gBAAJ,EAAnB;AZ2KF,AK1LN,AOgBQ,AjBIiB,AFAX,AiBPiC,AP4JzC,IEzKN,AVoByB,CAAC,AePf,CV6KL,AU7KF,CfOwB,GiBJpB,AjBIe,GQqJV,GHiBG,CK1LhB,EL0LmB,EPtKL,CUqJQ,CAAC,ESzJA,CnBIL,CAAC,CmBJO,ATyJpB,CHiBuB,CAAC,EY1KA,CnBIhB,COsKK,APrKX,COqK2B,CPtKrB,EAEN,KAAI,CAAC,COoKsB,CAAA,EAAC,EY1KN,CAAA,InBIhB,EAGN,KAAI,CAAC,GmBPa,EAAlB,WnBIM,EAIN,KAAI,CAAC,aAJC,EAKN,KAAI,CAAC,eALC,CAAA;AOsK0B,AK1LxC,AOkBQ,AjBEyB,AFKJ,AiBX1B,AP4JE,GO9JI,CfQwB,CAAC,AQoJ9B,ERpJgC,GiBF5B,AjBEe,CQsJZ,EVvJP,CmBDQ,CZwK4B,APhKlC,AUgJS,CHgB0B,CAAC,AYxK3B,ETwJI,EHgBqB,AYxKrB,CTwJG,CAAX,EAAc,EVhJnB,MOgKoD,IYxKvC,CAAA,OZwKuC,CAAA,KYxK3C,CACX,GZuKoC,IAA+B,AYxKxD,CZwKyD,CAAC,AYtKrE,IZsKmE,CAAO,GYtKlE,CAAC,GZsK0D,EYxKxD,EAGX,CZqKsF,OAAlD,AYrK5B,CAAC,MAHE,EAIX,IAAI,cAAA,CAAA,WAAJ,CAAgB,QAAhB,CAJW,EAKX,IAAI,gBAAA,CAAA,aAAJ,CAAkB,gBAAlB,EAAoC,eAApC,CALW,EAMX,gBANW,EAOX,eAPW,EAQX,IAAI,WAAA,CAAA,iBAAJ,EARW,CAAP;AZwKyF,AK1LjG,AO4BE,AjBRuC,AFM7B,AUiJN,IRvJmC,GKsKtB,CAAb,CLtKwC,CUpB9C,CVoBgD,EAAzB,AQuJV,GE3Kb,CO4BE,CP5BF,AO4BE,GnBFU,CUiJU,CAAC,GVjJP,CAAC,AUiJX,MVjJM,CAAY,KAAI,CAAC,OAAjB,CAAA;AOiKN,AK3L6B,AO4BjC,AjBRkD,AFMf,AiBVnC,AP4JG,EE5K8B,AKgBjC,EfIkD,EKuK9C,EU3KJ,CAAA,CfIwD,CUpBvB,CAAA,AVoByB,CFDxD,OOwKgB,GU3KlB,CAAW,CLhBsB,EAAA,MAAA,CAAA,CKgBtB,CAAA,SAAX,EAAW,gBAAX,EAAyB;AEYzB,AjBRqB,SeJrB,GEYM,IAAI,CAAC,GAAL,EAAN,CAAA,CFZA;AV6KI,AK1LJ,AVdmB,Ae4BjB,AP6JA,CRzLS,OQyLL,EHeE,CK1LR,CF2KU,CO7JD,EP6JI,CAAX,EO7JY,AP6JE,ME3KhB,CACE,OADF,CKcE,CLZA,ELwLgC,GK1LlC,CL0LsC,CKvLpC,MAHF,EAIE,KLsLkD,IAAI,EK1LxD,EAKE,QLqLM,IAAgE,CK1LxE,EAME,WLoLoF,IAAI,CK1L1F,EAOE,ELmL6F,KAAvF,IAAgG,IK1LxG,EAQE,ILkLE,EAAgH,EK1LpH,EAQqB;ALmLf,AK3LN,AKeC,AP6JG,KO/JqB,GLbzB,IL2LU,CK3LV,AF4KW,GElKT,MLiLkB,AKjLlB,AFkKkB,CElKlB,AFkKmB,IHeI,AKjLvB,AFkKE,CHeE,AKjLJ,ELiL0B,EKjL1B,EACE,KADF,EAEE,MAFF,EAGE,OAHF,EAIE,WAJF,EAKE,aALF,EAME,gBANF,EAOE,eAPF,EAQE,QARF,KASC,IAnBH;AL4LQ,AYnKR,AToJG,KAFD,KHiBM,AYnKR,CToJS,CSpJT,CAAA,EToJa,ESpJb,EToJiB,EOhKQ,CPgKL,CAAX,EAAc,KHeK,GAAG,OAAvB;AACD,AK/LU,AFgLb,IEhLa,KAAA,CAAA,GFgLN,KEhLM,GAAmB,CFgLhB,CEhLH,AFgLI,EAAjB;AOjKqB,APkKtB,GOlKH;AVkLM,AK3KL,AZKA,AiBTH,GjBFe,MiBEf,GV+KY,QU/KZ,EV+KsB,KAAK,CAAC,CAApB,EAAuB;AACrB,AU9MV,AP+LI,CO/LJ,EAAA,OV8MU,CGfC,gBAAP,GHe0B,GAAG,MAAvB;AACD,AK3KkB,AZKT,AUuJf,EE5JwB,AZKT,CUyID,GVzIC,CAAA,QYLS,CAAA,AZKT,CAAA,KAAA,GYLS,AZKzB,CYLyB,KAAA,GAAzB,GZKA,SYLA;AL4KK,AUhNM,OVwMP,AUxMO,CAAA,KVgNA,MUhNA,GAAA,WAAA,ELoCuB,AZKT,SYLgB,AZKT,YYLS,AZKT;AO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","file":"bootstrap.e2109142.js","sourceRoot":"..","sourcesContent":["import { CollisionManager } from \"./collision-manager\";\r\nimport { IEntity } from \"./entity\";\r\nimport { IGameLoop } from \"./game-loop\";\r\nimport { KeyListener } from \"./key-listener\";\r\nimport { EntityManager } from \"./entity-manager\";\r\nimport { PositionManager } from \"./position-manager\";\r\n\r\nexport abstract class Game {\r\n  protected readonly _scale: number = 3;\r\n\r\n  private showCollisionBoxes: boolean = false;\r\n  private activateDebugMode: (dt: number) => void;\r\n\r\n  constructor(\r\n    protected width: number,\r\n    protected height: number,\r\n    private context: CanvasRenderingContext2D,\r\n    private keyListener: KeyListener,\r\n    private entityManager: EntityManager,\r\n    private collisionManager: CollisionManager,\r\n    private positionManager: PositionManager,\r\n    private gameLoop: IGameLoop) { \r\n      this.activateDebugMode = debounce(\r\n        200,\r\n        () => this.keyListener.isKeyDown('F1'),\r\n        () => this.showCollisionBoxes = !this.showCollisionBoxes);\r\n    }\r\n\r\n  public async run() {\r\n    await this.setup();\r\n    this.gameLoop.run(\r\n      (dt) => this.update(\r\n        dt, \r\n        this.keyListener, \r\n        this.collisionManager, \r\n        this.entityManager, \r\n        this.positionManager),\r\n      () => this.render(this.context)\r\n    );\r\n  }\r\n\r\n  protected async setup(): Promise<void> {\r\n    const promises = [this.keyListener.setup()];\r\n    Promise.all(promises);\r\n  };\r\n\r\n  protected addEntity(entity: IEntity) {\r\n    this.entityManager.addEntity(entity);\r\n  }\r\n\r\n  private update(\r\n    dt: number, \r\n    kl: KeyListener, \r\n    cl: CollisionManager, \r\n    em: EntityManager, \r\n    pm: PositionManager) {\r\n    for (const entity of this.entityManager.getEntities()) {\r\n      entity.update(dt, kl, cl, em, pm);\r\n    }\r\n\r\n    this.activateDebugMode(dt);\r\n  }\r\n\r\n  private render(context: CanvasRenderingContext2D) {\r\n    for (const entity of this.positionManager.getPositionables().slice(0).sort((a, b) => a.z - b.z)) {\r\n      entity.render(context);\r\n    }\r\n\r\n    if(this.showCollisionBoxes) {\r\n      this.collisionManager.render(context);\r\n    }\r\n  }\r\n}\r\n\r\nfunction debounce(debounceKeyInputMs: number, condition: () => boolean, action: () => void) {\r\n  let currentDebounceMs = 0;\r\n  let debounce = false;\r\n\r\n  return (dt: number) => {\r\n    currentDebounceMs += dt * 1000;\r\n\r\n    if(currentDebounceMs >= debounceKeyInputMs) {\r\n      debounce = false;\r\n      currentDebounceMs = 0;\r\n    }\r\n\r\n    if(condition() && !debounce) {\r\n      action();\r\n      debounce = true;\r\n      currentDebounceMs = 0;\r\n    }\r\n  }\r\n}","export async function loadImageFromUrl(url: string): Promise<HTMLImageElement> {\r\n  return new Promise(resolve => {\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.onload = () => {\r\n      resolve(img);\r\n    }\r\n  })\r\n}","export const TILES = {\r\n  'floor': { x: 328, y: 461, width: 16, height: 16 },\r\n  'unbreakable-brick': { x: 294, y: 461, width: 16, height: 16 },\r\n  'brick': { x: 311, y: 461, width: 16, height: 16 },\r\n  's-bomb': { x: 379, y: 563, width: 16, height: 16 },\r\n  'm-bomb': { x: 396, y: 563, width: 16, height: 16 },\r\n  'l-bomb': { x: 413, y: 563, width: 16, height: 16 },\r\n  'explosion-center-1': { x: 345, y: 512, width: 16, height: 16 },\r\n  'explosion-center-2': { x: 362, y: 512, width: 16, height: 16 },\r\n  'explosion-center-3': { x: 379, y: 512, width: 16, height: 16 },\r\n  'explosion-center-4': { x: 396, y: 512, width: 16, height: 16 },\r\n  'explosion-center-5': { x: 345, y: 529, width: 16, height: 16 },\r\n  'explosion-horizontal-1': { x: 277, y: 512, width: 16, height: 16 },\r\n  'explosion-horizontal-2': { x: 277, y: 529, width: 16, height: 16 },\r\n  'explosion-horizontal-3': { x: 277, y: 546, width: 16, height: 16 },\r\n  'explosion-horizontal-4': { x: 311, y: 512, width: 16, height: 16 },\r\n  'explosion-horizontal-5': { x: 311, y: 529, width: 16, height: 16 },\r\n  'explosion-vertical-1': { x: 362, y: 529, width: 16, height: 16 },\r\n  'explosion-vertical-2': { x: 379, y: 529, width: 16, height: 16 },\r\n  'explosion-vertical-3': { x: 396, y: 546, width: 16, height: 16 },\r\n  'explosion-vertical-4': { x: 311, y: 546, width: 16, height: 16 },\r\n  'explosion-vertical-5': { x: 328, y: 546, width: 16, height: 16 },\r\n  'explosion-left-1': { x: 345, y: 478, width: 16, height: 16 },\r\n  'explosion-left-2': { x: 328, y: 478, width: 16, height: 16 },\r\n  'explosion-left-3': { x: 311, y: 478, width: 16, height: 16 },\r\n  'explosion-left-4': { x: 294, y: 478, width: 16, height: 16 },\r\n  'explosion-left-5': { x: 277, y: 478, width: 16, height: 16 },\r\n  'explosion-right-1': { x: 294, y: 512, width: 16, height: 16 },\r\n  'explosion-right-2': { x: 294, y: 529, width: 16, height: 16 },\r\n  'explosion-right-3': { x: 294, y: 546, width: 16, height: 16 },\r\n  'explosion-right-4': { x: 328, y: 512, width: 16, height: 16 },\r\n  'explosion-right-5': { x: 328, y: 529, width: 16, height: 16 },\r\n} as const;\r\n\r\nexport type Tiles = keyof typeof TILES;","import { Sprite } from \"./sprite\";\r\n\r\nexport function drawSprite(\r\n  context: CanvasRenderingContext2D, \r\n  image: HTMLImageElement,\r\n  scale: number,\r\n  spr: Sprite, \r\n  x: number, \r\n  y: number) {\r\n  context.drawImage(image, spr.x, spr.y, spr.width, spr.height, x, y, spr.width * scale, spr.height * scale);\r\n}","import { Tiles, TILES } from \"./constants\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\n\r\nexport class SolidTile implements ICollidable, IPositionable {\r\n  private collisionBox: CollisionBox;\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private readonly _tilekey: Tiles,\r\n    private scale: number,\r\n    private _x: number,\r\n    private _y: number) {\r\n\r\n    this.collisionBox = {\r\n      height: 16 * this.scale,\r\n      width: 16 * this.scale,\r\n      xPos: this._x,\r\n      yPos: this._y\r\n    };\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y\r\n  }\r\n\r\n  public get z(): number {\r\n    return 1;\r\n  }\r\n\r\n  public get tilekey(): Tiles {\r\n    return this._tilekey;\r\n  }\r\n\r\n  public get solid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getCollisionBox(): CollisionBox {\r\n    return this.collisionBox;\r\n  }\r\n\r\n  update(_dt: number, _kl: KeyListener): void { }\r\n\r\n  render(context: CanvasRenderingContext2D): void {\r\n    drawSprite(context, this.image, this.scale, TILES[this._tilekey], this._x, this._y)\r\n  }\r\n}","import { SolidTile } from \"./solid-tile\";\r\nimport { Tiles, TILES } from \"./constants\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { IEntity } from \"./engine/entity\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\n\r\nexport class GameMap implements IEntity, IPositionable {\r\n\r\n  private readonly _map;\r\n  private readonly _floorTile = TILES['floor'];\r\n  private readonly _tileCountX: number;\r\n  private readonly _tileCountY: number;\r\n\r\n  private hasBeenInitialized: boolean = false;\r\n\r\n  constructor(\r\n    private sprite: HTMLImageElement, \r\n    private scale: number, \r\n    screenWidth: number, \r\n    screenHeight: number) { \r\n      this._tileCountX = Math.ceil(screenWidth / (this._floorTile.width * this.scale));\r\n      this._tileCountY = Math.ceil(screenHeight / (this._floorTile.height * this.scale));\r\n      this._map = GameMap.generateMap(this._tileCountY, this._tileCountX);\r\n    } \r\n\r\n  public get x(): number {\r\n    return 0;\r\n  }\r\n\r\n  public get y(): number {\r\n    return 0;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 0;\r\n  }\r\n\r\n  update(_dt: number, _kl: KeyListener, _ch: CollisionManager, em: EntityManager, _pm: PositionManager): void {\r\n    if(!this.hasBeenInitialized) {\r\n      for (let y = 0; y < this._tileCountY; y++) {\r\n        for (let x = 0; x < this._tileCountX; x++) {\r\n          if(this._map[y][x] === 'brick') {\r\n            em.addEntity(new SolidTile(this.sprite, 'brick',this.scale, x * this.scale * 16, y * this.scale * 16));\r\n          }\r\n\r\n          if(this._map[y][x] === 'unbreakable-brick') {\r\n            em.addEntity(new SolidTile(this.sprite, 'unbreakable-brick', this.scale, x * this.scale * 16, y * this.scale * 16));\r\n          }\r\n        }\r\n      }\r\n\r\n      this.hasBeenInitialized = true;\r\n    }\r\n  }\r\n\r\n  public render(context: CanvasRenderingContext2D) {\r\n    this.drawFloor(context, this.sprite);\r\n  }\r\n\r\n  private drawFloor(\r\n    context: CanvasRenderingContext2D, \r\n    image: HTMLImageElement) {\r\n\r\n    for (let y = 0; y < this._tileCountY; y++) {\r\n      for (let x = 0; x < this._tileCountX; x++) {\r\n        drawSprite(context, image, this.scale, TILES['floor'], x * this._floorTile.width * this.scale, y * this._floorTile.height * this.scale);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static generateEmptyMap(rows: number, columns: number): Tiles[][] {\r\n    const map: Tiles[][] = new Array(rows);\r\n  \r\n    for (let i = 0; i < map.length; i++) {\r\n      map[i] = new Array(columns);\r\n    }\r\n  \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n        map[y][x] = 'floor';\r\n      }\r\n    }\r\n  \r\n    return map;\r\n  }\r\n  \r\n  private static generateMapWithUnbreakableWalls(rows: number, columns: number): Tiles[][] {\r\n    const emptyMap = GameMap.generateEmptyMap(rows, columns);\r\n  \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n  \r\n        if (x === 0 || y === 0 || y === rows - 1 || x === columns - 1) {\r\n          emptyMap[y][x] = 'unbreakable-brick';\r\n        }\r\n  \r\n        if (x % 2 === 0 && y % 2 === 0) {\r\n          emptyMap[y][x] = 'unbreakable-brick';\r\n        }\r\n      }\r\n    }\r\n  \r\n    return emptyMap;\r\n  }\r\n  \r\n  private static generateMap(rows: number, columns: number): Tiles[][] {\r\n    const mapWithWalls = GameMap.generateMapWithUnbreakableWalls(rows, columns);\r\n  \r\n    const omittedTiles = [\r\n      // Top Left\r\n      [1, 1],\r\n      [2, 1],\r\n      [1, 2],\r\n  \r\n      // Top Right\r\n      [columns - 2, 1],\r\n      [columns - 3, 1],\r\n      [columns - 2, 2],\r\n  \r\n      // Bottom Left\r\n      [1, rows - 2],\r\n      [2, rows - 2],\r\n      [1, rows - 3],\r\n  \r\n      // Bottom Right\r\n      [columns - 2, rows - 2],\r\n      [columns - 3, rows - 2],\r\n      [columns - 2, rows - 3]\r\n    ];\r\n  \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n        const putBreakableWall = Math.random() > 0.2;\r\n  \r\n        if (mapWithWalls[y][x] !== 'floor') {\r\n          continue;\r\n        }\r\n  \r\n        if (putBreakableWall) {\r\n          mapWithWalls[y][x] = 'brick'\r\n        }\r\n      }\r\n    }\r\n  \r\n    for (const [x, y] of omittedTiles) {\r\n      mapWithWalls[y][x] = 'floor';\r\n    }\r\n  \r\n    return mapWithWalls;\r\n  }\r\n}\r\n\r\n","import { Tiles, TILES } from \"./constants\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\n\r\nexport type ExplosionAnimation =\r\n  | 'center'\r\n  | 'horizontal'\r\n  | 'vertical'\r\n  | 'left'\r\n  | 'right'\r\n  | 'top'\r\n  | 'bottom'\r\n\r\nexport class Explosion implements IPositionable, ICollidable {\r\n  private readonly _frames: { [anim in ExplosionAnimation]: Tiles[] } = {\r\n    center: [\r\n      'explosion-center-1',\r\n      'explosion-center-2',\r\n      'explosion-center-3',\r\n      'explosion-center-4',\r\n      'explosion-center-5'\r\n    ],\r\n    horizontal: [\r\n      'explosion-horizontal-1',\r\n      'explosion-horizontal-2',\r\n      'explosion-horizontal-3',\r\n      'explosion-horizontal-4',\r\n      'explosion-horizontal-5',\r\n    ],\r\n    vertical: [\r\n      'explosion-vertical-1',\r\n      'explosion-vertical-2',\r\n      'explosion-vertical-3',\r\n      'explosion-vertical-4',\r\n      'explosion-vertical-5',\r\n    ],\r\n    left: [\r\n      'explosion-left-1',\r\n      'explosion-left-2',\r\n      'explosion-left-3',\r\n      'explosion-left-4',\r\n      'explosion-left-5',\r\n    ],\r\n    right: [\r\n      'explosion-right-1',\r\n      'explosion-right-2',\r\n      'explosion-right-3',\r\n      'explosion-right-4',\r\n      'explosion-right-5',\r\n    ],\r\n    top: [],\r\n    bottom: [],\r\n  };\r\n\r\n  private msInCurrentFrame: number = 0;\r\n  private msPerFrame: number = 50;\r\n  private _frameIndex: number = 0;\r\n\r\n  private currentMs: number = 0;\r\n  private readonly keepAliveForMs: number = 250;\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private readonly scale: number,\r\n    private _x: number,\r\n    private _y: number,\r\n    private readonly animDirection: ExplosionAnimation\r\n  ) {\r\n\r\n  }\r\n\r\n  public get solid(): boolean {\r\n    return false;\r\n  }\r\n\r\n  public getCollisionBox(): CollisionBox {\r\n    return {\r\n      height: 8 * this.scale,\r\n      width: 8 * this.scale,\r\n      xPos: this.x + 4 * this.scale,\r\n      yPos: this.y + 4 * this.scale\r\n    }\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 5;\r\n  }\r\n\r\n\r\n  update(dt: number, kl: KeyListener, ch: CollisionManager, em: EntityManager, pm: PositionManager): void {\r\n    this.currentMs += dt * 1000;\r\n    this.msInCurrentFrame += dt * 1000;\r\n\r\n    if (this.msInCurrentFrame >= this.msPerFrame) {\r\n      this.msInCurrentFrame -= this.msPerFrame;\r\n      this._frameIndex = (this._frameIndex + 1) % this._frames[this.animDirection].length;\r\n    }\r\n\r\n    if (this.currentMs >= this.keepAliveForMs) {\r\n      em.removeEntity(this);\r\n    }\r\n  }\r\n\r\n  render(context: CanvasRenderingContext2D): void {\r\n    drawSprite(context, this.image, this.scale, TILES[this._frames[this.animDirection][this._frameIndex]], this.x, this.y);\r\n  }\r\n}","import { SolidTile } from \"./solid-tile\";\r\nimport { Tiles, TILES } from \"./constants\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { IEntity } from \"./engine/entity\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\nimport { Explosion, ExplosionAnimation } from \"./explosion\";\r\nimport { Player } from \"./player\";\r\n\r\nexport class Bomb implements IEntity, IPositionable, ICollidable {\r\n  private readonly _frames: Tiles[] = ['s-bomb', 'm-bomb', 'l-bomb'];\r\n  private _currentFrame: number = 0;\r\n  private _solid: boolean = false;\r\n  private _exploded: boolean = false;\r\n\r\n  private msInCurrentFrame: number = 0;\r\n  private msPerFrame: number = 300;\r\n\r\n  private currentExplosionTimeInMs: number = 0;\r\n  private readonly explosionTimeInMs: number = this.msPerFrame * this._frames.length * 2;\r\n\r\n  private _incrementing: boolean = true;\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private scale: number,\r\n    private _x: number,\r\n    private _y: number,\r\n    private readonly range: number\r\n  ) { }\r\n\r\n  public get solid(): boolean {\r\n    return this._solid;\r\n  }\r\n\r\n  public get exploded(): boolean {\r\n    return this._exploded;\r\n  }\r\n\r\n  public getCollisionBox(): CollisionBox {\r\n    const width = 16 * this.scale;\r\n    const height = 16 * this.scale;\r\n    return {\r\n      xPos: this.x + width / 4,\r\n      yPos: this.y + height / 4,\r\n      width: width / 2,\r\n      height: height / 2\r\n    }\r\n  }\r\n\r\n  public update(dt: number, _kl: KeyListener, ch: CollisionManager, em: EntityManager, _pm: PositionManager): void {\r\n    this.notSolidUntilPlayerMovesOutside(ch);\r\n\r\n    this.msInCurrentFrame += dt * 1000;\r\n    this.currentExplosionTimeInMs += dt * 1000;\r\n\r\n    if (this.currentExplosionTimeInMs >= this.explosionTimeInMs) {\r\n      em.removeEntity(this);\r\n      this._exploded = true;\r\n\r\n      const startingX = Math.floor(this.x);\r\n      const startingY = Math.floor(this.y);\r\n      this.explosionLogic(ch, em, startingX, startingY, 1, 0);\r\n      this.explosionLogic(ch, em, startingX, startingY, -1, 0);\r\n      this.explosionLogic(ch, em, startingX, startingY, 0, 1);\r\n      this.explosionLogic(ch, em, startingX, startingY, 0, -1);\r\n    }\r\n\r\n    if (this.msInCurrentFrame >= this.msPerFrame) {\r\n      this.msInCurrentFrame -= this.msPerFrame;\r\n\r\n      if (this._currentFrame === this._frames.length - 1) {\r\n        this._incrementing = false;\r\n      }\r\n\r\n      if (this._currentFrame === 0) {\r\n        this._incrementing = true;\r\n      }\r\n\r\n      if (this._incrementing) {\r\n        this._currentFrame += 1;\r\n      } else {\r\n        this._currentFrame -= 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  private static getCellsToPutExplosions(ch: CollisionManager,\r\n    startingX: number,\r\n    startingY: number,\r\n    tilesize: number,\r\n    scale: number,\r\n    rangeMax: number,\r\n    iterationsMax: number,\r\n    directionX: number,\r\n    directionY: number): [number, number, IEntity[]][] {\r\n    const result: [number, number, IEntity[]][] = [];\r\n    const width = tilesize * scale;\r\n    const height = tilesize * scale;\r\n\r\n    let box: CollisionBox = {\r\n      xPos: startingX + width / 4,\r\n      yPos: startingY + height / 4,\r\n      width: width / 2,\r\n      height: height / 2\r\n    };\r\n    let collisions = ch.findCollisions(box);\r\n    let iterationCount = 0;\r\n    let isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n    let brickFound = false;\r\n\r\n    while (\r\n      !isCollisionWithUnbreakable &&\r\n      iterationCount <= iterationsMax &&\r\n      iterationCount <= rangeMax &&\r\n      !brickFound) {\r\n      let element: [number, number, IEntity[]] = [startingX, startingY, []];\r\n\r\n      for (const { with: collidable } of collisions) {\r\n        if (collidable instanceof SolidTile && collidable.tilekey === 'brick') {\r\n          element[2].push(collidable);\r\n          brickFound = true;\r\n        }\r\n\r\n        if (collidable instanceof Player) {\r\n          element[2].push(collidable);\r\n        }\r\n      }\r\n\r\n      startingX += tilesize * scale * directionX;\r\n      startingY += tilesize * scale * directionY;\r\n\r\n      box = {\r\n        xPos: startingX + width / 4,\r\n        yPos: startingY + height / 4,\r\n        width: width / 2,\r\n        height: height / 2\r\n      };\r\n\r\n      collisions = ch.findCollisions(box);\r\n      isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n      brickFound = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'brick');\r\n\r\n      iterationCount++;\r\n      result.push(element);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private explosionLogic(\r\n    ch: CollisionManager,\r\n    em: EntityManager,\r\n    startingX: number,\r\n    startingY: number,\r\n    directionX: -1 | 0 | 1,\r\n    directionY: -1 | 0 | 1) {\r\n\r\n    const maxIteration = 10;\r\n    let iterationCount = 0;\r\n    let currentAnimDirection: ExplosionAnimation = 'center';\r\n    let explosion = new Explosion(this.image, this.scale, startingX, startingY, currentAnimDirection)\r\n    let collisions = ch.findCollisions(explosion);\r\n    let isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n    let brickFound = false;\r\n\r\n    while (!isCollisionWithUnbreakable &&\r\n      iterationCount <= maxIteration &&\r\n      iterationCount <= this.range &&\r\n      !brickFound) {\r\n\r\n      em.addEntity(explosion);\r\n\r\n      for (const { with: collidable } of collisions) {\r\n        if (collidable instanceof SolidTile && collidable.tilekey === 'brick') {\r\n          em.removeEntity(collidable);\r\n          brickFound = true;\r\n        }\r\n\r\n        if (collidable instanceof Player) {\r\n          em.removeEntity(collidable);\r\n        }\r\n      }\r\n\r\n      startingX += 16 * this.scale * directionX;\r\n      startingY += 16 * this.scale * directionY;\r\n\r\n      explosion = new Explosion(this.image, this.scale, startingX, startingY, currentAnimDirection)\r\n\r\n      collisions = ch.findCollisions(explosion);\r\n      isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n      let temp: boolean = brickFound;\r\n      brickFound = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'brick');\r\n      iterationCount++;\r\n\r\n      if (isCollisionWithUnbreakable || iterationCount >= maxIteration || iterationCount >= this.range || brickFound) {\r\n        if (directionX === 1) {\r\n          currentAnimDirection = 'right'\r\n        }\r\n\r\n        if (directionX === -1) {\r\n          currentAnimDirection = 'left'\r\n        }\r\n      } else {\r\n        if (directionX !== 0 && directionY === 0) {\r\n          currentAnimDirection = 'horizontal';\r\n        }\r\n\r\n        if (directionY !== 0 && directionX === 0) {\r\n          currentAnimDirection = 'vertical';\r\n        }\r\n      }\r\n      brickFound = temp;\r\n      explosion = new Explosion(this.image, this.scale, startingX, startingY, currentAnimDirection)\r\n    }\r\n  }\r\n\r\n\r\n  private notSolidUntilPlayerMovesOutside(ch: CollisionManager) {\r\n    if (this.solid) {\r\n      return;\r\n    }\r\n\r\n    const collisionWithPlayer =\r\n      ch.findCollisions(this)\r\n        .some(x => x.with instanceof Player);\r\n\r\n    if (!collisionWithPlayer) {\r\n      this._solid = true;\r\n    }\r\n  }\r\n\r\n  public render(context: CanvasRenderingContext2D): void {\r\n    drawSprite(context, this.image, this.scale, TILES[this._frames[this._currentFrame]], this._x, this._y)\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 1;\r\n  }\r\n\r\n}","import { Spritesheet } from \"./spritesheet\";\r\n\r\nexport class GameAnimation {\r\n  private currentFrameIndex: number = 0;\r\n  private msInCurrentFrame: number = 0;\r\n  private currentXIndex: number = 0;\r\n  private currentYIndex: number = 0;\r\n\r\n  constructor(\r\n    private spritesheet: Spritesheet,\r\n    private frameIndexes: [number, number][],\r\n    private msPerFrame: number\r\n  ){ }\r\n\r\n  public update(delta: number) {\r\n    this.msInCurrentFrame += delta * 1000;\r\n    if(this.msInCurrentFrame >= this.msPerFrame) {\r\n      this.msInCurrentFrame -= this.msPerFrame;\r\n      this.currentFrameIndex = (this.currentFrameIndex + 1) % this.frameIndexes.length;\r\n    }\r\n\r\n    const [xIndex, yIndex] = this.frameIndexes[this.currentFrameIndex];\r\n    this.currentXIndex = xIndex;\r\n    this.currentYIndex = yIndex;\r\n  }\r\n\r\n  public render(\r\n    context: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) {\r\n    this.spritesheet.render(\r\n      context,\r\n      this.currentXIndex,\r\n      this.currentYIndex,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}","export class Spritesheet {\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private spriteWidth: number,\r\n    private spriteHeight: number\r\n  ) { }\r\n\r\n  public render(\r\n    context: CanvasRenderingContext2D,\r\n    xIndex: number,\r\n    yIndex: number,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) {\r\n    context.drawImage(\r\n      this.image,\r\n      xIndex * this.spriteWidth,\r\n      yIndex * this.spriteHeight,\r\n      this.spriteWidth,\r\n      this.spriteHeight,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}","import { Bomb } from \"./bomb\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { GameAnimation } from \"./engine/game-animation\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\nimport { Spritesheet } from \"./engine/spritesheet\";\r\nimport { ControlMapping } from \"./player-controls\";\r\n\r\nenum Direction {\r\n  Up,\r\n  Right,\r\n  Down,\r\n  Left\r\n}\r\n\r\ntype PlayerAnimations = {\r\n  'idle-up': GameAnimation,\r\n  'idle-right': GameAnimation,\r\n  'idle-down': GameAnimation,\r\n  'idle-left': GameAnimation,\r\n  'walking-up': GameAnimation,\r\n  'walking-right': GameAnimation,\r\n  'walking-down': GameAnimation,\r\n  'walking-left': GameAnimation,\r\n}\r\n\r\nexport class Player implements IPositionable, ICollidable {\r\n  private maxAmountOfBombs: number = 1;\r\n  private placedBombs: Bomb[] = [];\r\n  private bombRange: number = 2;\r\n\r\n  private readonly spritesheet: Spritesheet;\r\n  private readonly playerAnimations: PlayerAnimations;\r\n  private velX = 0;\r\n  private velY = 0;\r\n  private width = 32;\r\n  private height = 32;\r\n  private speed = 200;\r\n  private currentAnimation: GameAnimation;\r\n  private currentDirection: Direction;\r\n\r\n  constructor(\r\n    private _x: number,\r\n    private _y: number,\r\n    playerSpritesheet: HTMLImageElement,\r\n    private bombSpritesheet: HTMLImageElement,\r\n    private scale: number,\r\n    private readonly controlMapping: ControlMapping) {\r\n    this.spritesheet = new Spritesheet(playerSpritesheet, 32, 32);\r\n    this.playerAnimations = {\r\n      'idle-up': new GameAnimation(this.spritesheet, [[0, 0]], 200),\r\n      'idle-right': new GameAnimation(this.spritesheet, [[0, 1]], 200),\r\n      'idle-down': new GameAnimation(this.spritesheet, [[0, 2]], 200),\r\n      'idle-left': new GameAnimation(this.spritesheet, [[0, 3]], 200),\r\n      'walking-up': new GameAnimation(this.spritesheet, [[0, 0], [1, 0], [2, 0]], 200),\r\n      'walking-right': new GameAnimation(this.spritesheet, [[0, 1], [1, 1], [2, 1]], 200),\r\n      'walking-down': new GameAnimation(this.spritesheet, [[0, 2], [1, 2], [2, 2]], 200),\r\n      'walking-left': new GameAnimation(this.spritesheet, [[0, 3], [1, 3], [2, 3]], 200),\r\n    };\r\n    this.currentAnimation = this.playerAnimations['walking-down'];\r\n    this.currentDirection = Direction.Down;\r\n  }\r\n\r\n  public get solid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  public getCollisionBox(): CollisionBox {\r\n    return {\r\n      xPos: this._x + 15,\r\n      yPos: this._y + 47,\r\n      width: this.width,\r\n      height: this.height - 10\r\n    };\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 10;\r\n  }\r\n\r\n  public update(\r\n    dt: number,\r\n    kl: KeyListener,\r\n    ch: CollisionManager,\r\n    em: EntityManager,\r\n    pm: PositionManager) {\r\n\r\n    this.velX = 0;\r\n    this.velY = 0;\r\n    this.placedBombs = this.placedBombs.filter(x => !x.exploded);\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.left)) {\r\n      this.velX = -this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.right)) {\r\n      this.velX = this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.up)) {\r\n      this.velY = -this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.down)) {\r\n      this.velY = this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.bomb) &&\r\n      this.placedBombs.length < this.maxAmountOfBombs) {\r\n      const collisionBox = this.getCollisionBox();\r\n      const gridX = Math.floor((collisionBox.xPos + collisionBox.width / 2) / (16 * this.scale)) * 16 * this.scale\r\n      const gridY = Math.floor((collisionBox.yPos) / (16 * this.scale)) * 16 * this.scale\r\n\r\n      if (!pm.getPositionablesAt(gridX, gridY).some(x => x instanceof Bomb)) {\r\n        const bomb = new Bomb(this.bombSpritesheet, this.scale, gridX, gridY, this.bombRange);\r\n        em.addEntity(bomb);\r\n        this.placedBombs.push(bomb);\r\n      }\r\n    }\r\n\r\n    if (this.velX !== 0 && this.velY !== 0) {\r\n      const lkp = kl.lastKeyPressed;\r\n      if (this.controlMapping.left.some(x => x === lkp) ||\r\n        this.controlMapping.right.some(x => x === lkp)) {\r\n        this.velY = 0;\r\n      }\r\n\r\n      if (this.controlMapping.up.some(x => x === lkp) ||\r\n        this.controlMapping.down.some(x => x === lkp)) {\r\n        this.velX = 0;\r\n      }\r\n    }\r\n\r\n    const [newVelX, newVelY] = Player.calculateCollision(ch, this, this.velX, this.velY);\r\n\r\n    this.velX = newVelX;\r\n    this.velY = newVelY;\r\n\r\n    this._x += this.velX;\r\n    this._y += this.velY;\r\n    this.currentDirection = Player.getDirection(this.currentDirection, this.velX, this.velY);\r\n    this.currentAnimation = Player.getCurrentAnimation(this.playerAnimations, this.currentDirection, this.velX, this.velY);\r\n    this.currentAnimation.update(dt);\r\n  }\r\n\r\n  public render(context: CanvasRenderingContext2D) {\r\n    this.currentAnimation.render(context, this._x, this._y, 32 * this.scale, 32 * this.scale);\r\n  }\r\n\r\n  private static calculateCollision(ch: CollisionManager, driver: ICollidable, velX: number, velY: number): [number, number] {\r\n    const collisionsX = ch.testMovement(driver, velX, 0);\r\n    let [newVelX, newVelY] = [velX, velY];\r\n\r\n    if (collisionsX.length > 0) {\r\n      newVelX = 0;\r\n    }\r\n\r\n    const collisionsY = ch.testMovement(driver, 0, velY);\r\n\r\n    if (collisionsY.length > 0) {\r\n      newVelY = 0;\r\n    }\r\n\r\n    return [newVelX, newVelY];\r\n  }\r\n\r\n  private static getDirection(currentDirection: Direction, velX: number, velY: number): Direction {\r\n    if (velX > 0) {\r\n      return Direction.Right;\r\n    } else if (velX < 0) {\r\n      return Direction.Left;\r\n    }\r\n\r\n    if (velY > 0) {\r\n      return Direction.Down;\r\n    } else if (velY < 0) {\r\n      return Direction.Up;\r\n    }\r\n\r\n    return currentDirection;\r\n  }\r\n\r\n  private static getCurrentAnimation(playerAnimations: PlayerAnimations, currentDirection: Direction, velX: number, velY: number): GameAnimation {\r\n    if (velX > 0) {\r\n      return playerAnimations['walking-right'];\r\n    } else if (velX < 0) {\r\n      return playerAnimations['walking-left'];\r\n    }\r\n\r\n    if (velY > 0) {\r\n      return playerAnimations['walking-down'];\r\n    } else if (velY < 0) {\r\n      return playerAnimations['walking-up'];\r\n    }\r\n\r\n    switch (currentDirection) {\r\n      case Direction.Right: return playerAnimations['idle-right'];\r\n      case Direction.Left: return playerAnimations['idle-left'];\r\n      case Direction.Down: return playerAnimations['idle-down'];\r\n      case Direction.Up: return playerAnimations['idle-up'];\r\n    };\r\n  }\r\n}","export type PlayerActions =\r\n  | 'up'\r\n  | 'down'\r\n  | 'left'\r\n  | 'right'\r\n  | 'bomb'\r\n\r\nexport type ControlMapping = { [ action in PlayerActions]: string[] };\r\n\r\nexport const CONTROLS: ControlMapping[] = [\r\n  {\r\n    'up': ['w', 'W'],\r\n    'down': ['s', 'S'],\r\n    'left': ['a', 'A'],\r\n    'right': ['d', 'D'],\r\n    'bomb': ['c', 'C']\r\n  },\r\n  {\r\n    'up': ['ArrowUp'],\r\n    'down': ['ArrowDown'],\r\n    'left': ['ArrowLeft'],\r\n    'right': ['ArrowRight'],\r\n    'bomb': ['Enter']\r\n  },\r\n]\r\n","import { CollisionManager } from \"./engine/collision-manager\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { Game } from \"./engine/game\";\r\nimport { IGameLoop } from \"./engine/game-loop\";\r\nimport { loadImageFromUrl } from \"./engine/image-utils\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { GameMap } from \"./game-map\";\r\nimport { Player } from \"./player\";\r\nimport { CONTROLS } from \"./player-controls\";\r\n\r\nexport class BombermanGame extends Game {\r\n  private readonly tilesize: number = 16;\r\n\r\n  constructor(\r\n    context: CanvasRenderingContext2D,\r\n    width: number,\r\n    height: number,\r\n    keyListener: KeyListener,\r\n    entityManager: EntityManager,\r\n    collisionHandler: CollisionManager,\r\n    positionManager: PositionManager,\r\n    gameLoop: IGameLoop\r\n  ) {\r\n    super(\r\n      width,\r\n      height,\r\n      context,\r\n      keyListener,\r\n      entityManager,\r\n      collisionHandler,\r\n      positionManager,\r\n      gameLoop\r\n    );\r\n  }\r\n\r\n  protected override async setup(): Promise<void> {\r\n    super.setup();\r\n    const tileset = await loadImageFromUrl('sprites/bomberman-tileset.png');\r\n    const map = new GameMap(tileset, this._scale, this.width, this.height);\r\n    const player = new Player(\r\n      this.tilesize * this._scale, \r\n      this.tilesize * this._scale * .5, \r\n      await loadImageFromUrl('sprites/bomberman-atlas.png'), \r\n      tileset, \r\n      this._scale,\r\n      CONTROLS[0]);\r\n      \r\n    const player2 = new Player(\r\n      this.tilesize * this._scale * ((this.width / (this.tilesize * this._scale)) - 2), \r\n      this.tilesize * this._scale * .5, \r\n      await loadImageFromUrl('sprites/bomberman-atlas.png'), \r\n      tileset, \r\n      this._scale,\r\n      CONTROLS[1]);\r\n\r\n    this.addEntity(map);\r\n    this.addEntity(player);\r\n    this.addEntity(player2);\r\n  }\r\n}","import { ICollidable } from \"./collidable\";\r\nimport { Collision } from \"./collision\";\r\nimport { CollisionBox } from \"./collision-box\";\r\nimport { IEntity } from \"./entity\";\r\n\r\nexport class CollisionManager {\r\n  private collidables: ICollidable[] = [];\r\n\r\n  public addCollidable(collidable: ICollidable) {\r\n    this.collidables.push(collidable);\r\n  }\r\n\r\n  public removeCollidable(collidable: ICollidable) {\r\n    const index = this.collidables.findIndex(x => x === collidable);\r\n    this.collidables.splice(index, 1);\r\n  }\r\n\r\n  public testMovement(driverCollidable: ICollidable, velX: number, velY: number): Collision[] {\r\n    return this.findCollisions(driverCollidable, velX, velY).filter(x => x.with.solid);\r\n  }\r\n\r\n  public findCollisions(driverCollidable: ICollidable | CollisionBox, xOffset: number = 0, yOffset: number = 0): Collision[] {\r\n    const result = [];\r\n\r\n    for (const collidable of this.collidables) {\r\n      const collision = this.findCollision(driverCollidable, collidable, xOffset, yOffset);\r\n      if (collision) {\r\n        result.push(collision);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private findCollision(\r\n    driverCollidableOrBox: ICollidable | CollisionBox,\r\n    otherCollidable: ICollidable,\r\n    xOffset: number = 0,\r\n    yOffset: number = 0): Collision | null {\r\n\r\n    let driverCollisionBox: CollisionBox;\r\n\r\n    if (this.isCollidable(driverCollidableOrBox)) {\r\n      if (driverCollidableOrBox === otherCollidable) {\r\n        return null;\r\n      } else {\r\n        driverCollisionBox = driverCollidableOrBox.getCollisionBox();\r\n      }\r\n    } else {\r\n      driverCollisionBox = driverCollidableOrBox;\r\n    }\r\n\r\n    driverCollisionBox.xPos += xOffset;\r\n    driverCollisionBox.yPos += yOffset;\r\n    const collidableCollisionBox = otherCollidable.getCollisionBox();\r\n\r\n    const rightCollision =\r\n      driverCollisionBox.xPos <= collidableCollisionBox.xPos &&\r\n      driverCollisionBox.xPos + driverCollisionBox.width >= collidableCollisionBox.xPos;\r\n\r\n    const leftCollision =\r\n      collidableCollisionBox.xPos <= driverCollisionBox.xPos &&\r\n      collidableCollisionBox.xPos + collidableCollisionBox.width >= driverCollisionBox.xPos;\r\n\r\n    const topCollision =\r\n      driverCollisionBox.yPos <= collidableCollisionBox.yPos &&\r\n      driverCollisionBox.yPos + driverCollisionBox.height >= collidableCollisionBox.yPos;\r\n\r\n    const bottomCollision =\r\n      collidableCollisionBox.yPos <= driverCollisionBox.yPos &&\r\n      collidableCollisionBox.yPos + collidableCollisionBox.height >= driverCollisionBox.yPos;\r\n\r\n    if ((rightCollision || leftCollision) && (topCollision || bottomCollision)) {\r\n      return {\r\n        with: otherCollidable,\r\n        bottom: bottomCollision,\r\n        left: leftCollision,\r\n        right: rightCollision,\r\n        top: topCollision\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  public render(context: CanvasRenderingContext2D) {\r\n    for (const collidable of this.collidables) {\r\n      const box = collidable.getCollisionBox();\r\n      context.strokeStyle = 'blue';\r\n      context.lineWidth = 3;\r\n      context.strokeRect(box.xPos, box.yPos, box.width, box.height);\r\n    }\r\n  }\r\n\r\n  public isCollidable(entity: IEntity | CollisionBox | ICollidable): entity is ICollidable {\r\n    return (entity as ICollidable).getCollisionBox !== undefined;\r\n  }\r\n}","import { CollisionManager } from \"./collision-manager\";\r\nimport { IEntity } from \"./entity\";\r\nimport { PositionManager } from \"./position-manager\";\r\n\r\nexport class EntityManager {\r\n  private readonly entities: IEntity[] = [];\r\n\r\n  constructor(\r\n    private readonly collisionManager: CollisionManager,\r\n    private readonly positionManager: PositionManager) {\r\n  }\r\n\r\n  public addEntity(entity: IEntity): void {\r\n    this.entities.push(entity);\r\n\r\n    if (this.collisionManager.isCollidable(entity)) {\r\n      this.collisionManager.addCollidable(entity);\r\n    }\r\n\r\n    if (this.positionManager.isPositionable(entity)) {\r\n      this.positionManager.addPositionable(entity);\r\n    }\r\n  }\r\n\r\n  public removeEntity(entity: IEntity): void {\r\n    const index = this.entities.findIndex(x => x === entity);\r\n    this.entities.splice(index, 1);\r\n\r\n    if(this.collisionManager.isCollidable(entity)) {\r\n      this.collisionManager.removeCollidable(entity);\r\n    }\r\n\r\n    if(this.positionManager.isPositionable(entity)) {\r\n      this.positionManager.removePositionable(entity);\r\n    }\r\n  }\r\n\r\n  public getEntities(): IEntity[] {\r\n    return this.entities;\r\n  }\r\n}","export function getTimestampMs(): number {\r\n  return (new Date).getTime();\r\n}","import { getTimestampMs } from \"./time-utils\";\r\n\r\ntype UpdateFunction = (dt: number) => void;\r\ntype RenderFunction = () => void;\r\n\r\nexport interface IGameLoop {\r\n  run: (updateFunction: UpdateFunction, renderFunction: RenderFunction) => void;\r\n}\r\n\r\nexport class WindowDomGameLoop implements IGameLoop {\r\n  private _sumDeltas: number = 0;\r\n  private _frames: number = 0;\r\n  private _lastTime: number = 0;\r\n  private updateFunction: UpdateFunction | undefined;\r\n  private renderFunction: RenderFunction | undefined;\r\n\r\n  constructor() { }\r\n\r\n  public run(updateFunction: UpdateFunction, renderFunction: RenderFunction) {\r\n    this._lastTime = getTimestampMs();\r\n    this.updateFunction = updateFunction;\r\n    this.renderFunction = renderFunction;\r\n\r\n    window.requestAnimationFrame(() => {\r\n      this.loop();\r\n    });\r\n  }\r\n\r\n  private loop() {\r\n    if (!this.updateFunction || !this.renderFunction) {\r\n      throw Error('Game loop was not initialized');\r\n    }\r\n    const currentTime = getTimestampMs();\r\n    const dt = (currentTime - this._lastTime) / 1000;\r\n    this._lastTime = currentTime;\r\n    this._sumDeltas += dt;\r\n    this._frames += 1;\r\n\r\n    if(this._sumDeltas >= 1) {\r\n      this._sumDeltas = 0;\r\n      this._frames = 0;\r\n    }\r\n\r\n    this.updateFunction(dt);\r\n    this.renderFunction();\r\n    window.requestAnimationFrame(() => this.loop());\r\n  }\r\n}","export class KeyListener {\r\n  private _keyStates: { [key: string]: boolean } = {};\r\n  private _lastKeyPressed: string | undefined;\r\n\r\n  constructor(private canvasEl: HTMLCanvasElement) { }\r\n\r\n  public async setup() {\r\n    this.canvasEl.addEventListener('keydown', e => {\r\n      e.preventDefault();\r\n      this._keyStates[e.key] = true;\r\n      this._lastKeyPressed = e.key;\r\n    })\r\n\r\n    this.canvasEl.addEventListener('keyup', e => {\r\n      e.preventDefault();\r\n      this._keyStates[e.key] = false;\r\n    });\r\n  }\r\n\r\n  public isKeyDown(key: string): boolean {\r\n    return this._keyStates[key] === true;\r\n  }\r\n\r\n  public isAnyKeyDown(keys: string[]): boolean {\r\n    return keys.some(key => this.isKeyDown(key));\r\n  }\r\n\r\n  public get lastKeyPressed(): string | undefined {\r\n    return this._lastKeyPressed;\r\n  }\r\n}","import { IEntity } from \"./entity\";\r\nimport { IPositionable } from \"./positionable\";\r\n\r\nexport class PositionManager {\r\n  private readonly positionables: IPositionable[] = [];\r\n\r\n  constructor(){ }\r\n\r\n  public addPositionable(positionable: IPositionable): void {\r\n    this.positionables.push(positionable);\r\n  }\r\n\r\n  public removePositionable(positionable: IPositionable) {\r\n    const index = this.positionables.findIndex(x => x === positionable);\r\n    this.positionables.splice(index, 1);\r\n  }\r\n\r\n  public getPositionables(): IPositionable[] {\r\n    return this.positionables;\r\n  }\r\n\r\n  public getPositionablesAt(x: number, y: number): IPositionable[] {\r\n    return this.positionables.filter(p => p.x === x && p.y === y);\r\n  }\r\n\r\n  public getPositionablesBetween(x0: number, y0: number, x1: number, y1: number): IPositionable[] {\r\n    return this.positionables.filter(p => \r\n      p.x >= x0 && p.y >= y0 &&\r\n      p.x <= x1 && p.y <= y1);\r\n  }\r\n\r\n  public isPositionable(entity: IEntity | IPositionable): entity is IPositionable {\r\n    const positionable = entity as IPositionable;\r\n    return positionable.x !== undefined && positionable.y !== undefined;\r\n  }\r\n}","import { BombermanGame } from \"./bomberman-game\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { WindowDomGameLoop } from \"./engine/game-loop\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\n\r\n\r\nasync function bootstrap() {\r\n  const canvasEl = document.getElementById('game-canvas') as HTMLCanvasElement | null;\r\n\r\n  if (!canvasEl) {\r\n    console.error('Couldn\\'t find the canvas element');\r\n    return;\r\n  }\r\n\r\n  const context = canvasEl.getContext('2d');\r\n  \r\n  if(!context) {\r\n    console.error('Couldn\\'t get the context');\r\n    return;\r\n  }\r\n\r\n  canvasEl.focus();\r\n  context.imageSmoothingEnabled = false;\r\n\r\n  const collisionManager = new CollisionManager();\r\n  const positionManager = new PositionManager();\r\n\r\n  const game = new BombermanGame(\r\n    context, \r\n    canvasEl.width, \r\n    canvasEl.height, \r\n    new KeyListener(canvasEl),\r\n    new EntityManager(collisionManager, positionManager),\r\n    collisionManager,\r\n    positionManager,\r\n    new WindowDomGameLoop());\r\n\r\n  await game.run();\r\n}\r\n\r\nbootstrap();"]}