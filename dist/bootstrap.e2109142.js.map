{"version":3,"sources":["engine/game.ts","engine/image-utils.ts","constants.ts","engine/draw-utils.ts","solid-tile.ts","game-map.ts","explosion.ts","bomb.ts","engine/game-animation.ts","engine/spritesheet.ts","player.ts","player-controls.ts","bomberman-game.ts","engine/collision-manager.ts","engine/entity-manager.ts","engine/time-utils.ts","engine/game-loop.ts","engine/key-listener.ts","engine/position-manager.ts","bootstrap.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAA,IAAA,GAAA,aAAA,YAAA;EAME,SAAA,IAAA,CACY,KAAa,EACb,MAAc,EAChB,OAAiC,EACjC,WAAwB,EACxB,aAA4B,EAC5B,gBAAkC,EAClC,eAAgC,EAChC,QAAmB,EAAA;IAR7B,IAAA,KAAA,GAAA,IAAA;IACY,IAAA,CAAA,KAAK,GAAL,KAAK;IACL,IAAA,CAAA,MAAM,GAAN,MAAM;IACR,IAAA,CAAA,OAAO,GAAP,OAAO;IACP,IAAA,CAAA,WAAW,GAAX,WAAW;IACX,IAAA,CAAA,aAAa,GAAb,aAAa;IACb,IAAA,CAAA,gBAAgB,GAAhB,gBAAgB;IAChB,IAAA,CAAA,eAAe,GAAf,eAAe;IACf,IAAA,CAAA,QAAQ,GAAR,QAAQ;IAbC,IAAA,CAAA,MAAM,GAAW,CAAC;IAE7B,IAAA,CAAA,kBAAkB,GAAY,KAAK;IAYvC,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAC/B,GAAG,EACH,YAAA;MAAM,OAAA,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC;IAAhC,CAAgC,EACtC,YAAA;MAAM,OAAA,KAAI,CAAC,kBAAkB,GAAG,CAAC,KAAI,CAAC,kBAAkB;IAAlD,CAAkD,CAAC;EAC7D;EAEW,IAAA,CAAA,SAAA,CAAA,GAAG,GAAhB,YAAA;;;;;;YACE,OAAA,CAAA,CAAA,CAAA,WAAM,IAAI,CAAC,KAAK,EAAE,CAAA;;YAAlB,EAAA,CAAA,IAAA,EAAkB;YAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CACf,UAAC,EAAE,EAAA;cAAK,OAAA,KAAI,CAAC,MAAM,CACjB,EAAE,EACF,KAAI,CAAC,WAAW,EAChB,KAAI,CAAC,gBAAgB,EACrB,KAAI,CAAC,aAAa,EAClB,KAAI,CAAC,eAAe,CAAC;YALf,CAKe,EACvB,YAAA;cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC;YAAzB,CAAyB,CAChC;;;;;GACF;;EAEe,IAAA,CAAA,SAAA,CAAA,KAAK,GAArB,YAAA;mCAAyB,OAAO,EAAA,YAAA;;;QACxB,QAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;;;;GACtB;;EAAA;EAES,IAAA,CAAA,SAAA,CAAA,SAAS,GAAnB,UAAoB,MAAe,EAAA;IACjC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC;EACtC,CAAC;EAEO,IAAA,CAAA,SAAA,CAAA,MAAM,GAAd,UACE,EAAU,EACV,EAAe,EACf,EAAoB,EACpB,EAAiB,EACjB,EAAmB,EAAA;IACnB,KAAqB,IAAA,EAAA,GAAA,CAAgC,EAAhC,EAAA,GAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAhC,EAAA,GAAA,EAAA,CAAA,MAAgC,EAAhC,EAAA,EAAgC,EAAE;MAAlD,IAAM,MAAM,GAAA,EAAA,CAAA,EAAA,CAAA;MACf,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;IAGnC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;EAC5B,CAAC;EAEO,IAAA,CAAA,SAAA,CAAA,MAAM,GAAd,UAAe,OAAiC,EAAA;IAC9C,KAAqB,IAAA,EAAA,GAAA,CAA0E,EAA1E,EAAA,GAAA,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,EAAA;QAAK,OAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAAT,CAAS,CAAC,EAA1E,EAAA,GAAA,EAAA,CAAA,MAA0E,EAA1E,EAAA,EAA0E,EAAE;MAA5F,IAAM,MAAM,GAAA,EAAA,CAAA,EAAA,CAAA;MACf,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;;IAGxB,IAAG,IAAI,CAAC,kBAAkB,EAAE;MAC1B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC;;EAEzC,CAAC;EACH,OAAA,IAAC;AAAD,CAjEA,EAAA;AAAsB,OAAA,CAAA,IAAA,GAAA,IAAA;AAmEtB,SAAS,QAAQ,CAAC,kBAA0B,EAAE,SAAwB,EAAE,MAAkB,EAAA;EACxF,IAAI,iBAAiB,GAAG,CAAC;EACzB,IAAI,QAAQ,GAAG,KAAK;EAEpB,OAAO,UAAC,EAAU,EAAA;IAChB,iBAAiB,IAAI,EAAE,GAAG,IAAI;IAE9B,IAAG,iBAAiB,IAAI,kBAAkB,EAAE;MAC1C,QAAQ,GAAG,KAAK;MAChB,iBAAiB,GAAG,CAAC;;IAGvB,IAAG,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE;MAC3B,MAAM,EAAE;MACR,QAAQ,GAAG,IAAI;MACf,iBAAiB,GAAG,CAAC;;EAEzB,CAAC;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA,SAAsB,gBAAgB,CAAC,GAAW,EAAA;iCAAG,OAAO,EAAA,YAAA;;MAC1D,OAAA,CAAA,CAAA,CAAA,YAAO,IAAI,OAAO,CAAC,UAAA,OAAO,EAAA;QACxB,IAAM,GAAG,GAAG,IAAI,KAAK,EAAE;QACvB,GAAG,CAAC,GAAG,GAAG,GAAG;QACb,GAAG,CAAC,MAAM,GAAG,YAAA;UACX,OAAO,CAAC,GAAG,CAAC;QACd,CAAC;MACH,CAAC,CAAC,CAAA;;;;AAPJ,OAAA,CAAA,gBAAA,GAAA,gBAAA;;;;;;;;ACAa,OAAA,CAAA,KAAK,GAAG;EACnB,OAAO,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAClD,mBAAmB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC9D,OAAO,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAClD,QAAQ,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACnD,QAAQ,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACnD,QAAQ,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACnD,oBAAoB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC/D,oBAAoB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC/D,oBAAoB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC/D,oBAAoB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC/D,oBAAoB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC/D,wBAAwB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACnE,wBAAwB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACnE,wBAAwB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACnE,wBAAwB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACnE,wBAAwB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACnE,sBAAsB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACjE,sBAAsB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACjE,sBAAsB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACjE,sBAAsB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACjE,sBAAsB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EACjE,kBAAkB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC7D,kBAAkB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC7D,kBAAkB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC7D,kBAAkB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC7D,kBAAkB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC7D,mBAAmB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC9D,mBAAmB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC9D,mBAAmB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC9D,mBAAmB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE,CAAE;EAC9D,mBAAmB,EAAE;IAAE,CAAC,EAAE,GAAG;IAAE,CAAC,EAAE,GAAG;IAAE,KAAK,EAAE,EAAE;IAAE,MAAM,EAAE;EAAE;CACpD;;;;;;;;AC9BV,SAAgB,UAAU,CACxB,OAAiC,EACjC,KAAuB,EACvB,KAAa,EACb,GAAW,EACX,CAAS,EACT,CAAS,EAAA;EACT,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,GAAG,KAAK,EAAE,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5G;AARA,OAAA,CAAA,UAAA,GAAA,UAAA;;;;;;;;ACFA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAGA,IAAA,YAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;AAIA,IAAA,SAAA,GAAA,aAAA,YAAA;EAGE,SAAA,SAAA,CACU,KAAuB,EACd,QAAe,EACxB,KAAa,EACb,EAAU,EACV,EAAU,EAAA;IAJV,IAAA,CAAA,KAAK,GAAL,KAAK;IACI,IAAA,CAAA,QAAQ,GAAR,QAAQ;IACjB,IAAA,CAAA,KAAK,GAAL,KAAK;IACL,IAAA,CAAA,EAAE,GAAF,EAAE;IACF,IAAA,CAAA,EAAE,GAAF,EAAE;IAEV,IAAI,CAAC,YAAY,GAAG;MAClB,MAAM,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK;MACvB,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK;MACtB,IAAI,EAAE,IAAI,CAAC,EAAE;MACb,IAAI,EAAE,IAAI,CAAC;KACZ;EACH;EAEA,MAAA,CAAA,cAAA,CAAW,SAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,EAAE;IAChB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,SAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,EAAE;IAChB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,SAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,CAAC;IACV,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,SAAA,CAAA,SAAA,EAAA,SAAO,EAAA;SAAlB,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,QAAQ;IACtB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,SAAA,CAAA,SAAA,EAAA,OAAK,EAAA;SAAhB,SAAA,IAAA,EAAA;MACE,OAAO,IAAI;IACb,CAAC;;;;EAED,SAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;IACE,OAAO,IAAI,CAAC,YAAY;EAC1B,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,GAAW,EAAE,GAAgB,EAAA,CAAU,CAAC;EAE/C,SAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,OAAiC,EAAA;IACtC,CAAA,CAAA,EAAA,YAAA,CAAA,UAAU,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAA,CAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;EACrF,CAAC;EACH,OAAA,SAAC;AAAD,CA/CA,EAAA;AAAa,OAAA,CAAA,SAAA,GAAA,SAAA;;;;;;;;ACPb,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;AAOA,IAAA,OAAA,GAAA,aAAA,YAAA;EASE,SAAA,OAAA,CACU,MAAwB,EACxB,KAAa,EACrB,WAAmB,EACnB,YAAoB,EAAA;IAHZ,IAAA,CAAA,MAAM,GAAN,MAAM;IACN,IAAA,CAAA,KAAK,GAAL,KAAK;IARE,IAAA,CAAA,UAAU,GAAG,WAAA,CAAA,KAAK,CAAC,OAAO,CAAC;IAIpC,IAAA,CAAA,kBAAkB,GAAY,KAAK;IAOvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAChF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAClF,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;EACrE;EAEF,MAAA,CAAA,cAAA,CAAW,OAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,CAAC;IACV,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,OAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,CAAC;IACV,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,OAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,CAAC;IACV,CAAC;;;;EAED,OAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,GAAW,EAAE,GAAgB,EAAE,GAAqB,EAAE,EAAiB,EAAE,GAAoB,EAAA;IAClG,IAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE;MAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;UACzC,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;YAC9B,EAAE,CAAC,SAAS,CAAC,IAAI,YAAA,CAAA,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;;UAGxG,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,mBAAmB,EAAE;YAC1C,EAAE,CAAC,SAAS,CAAC,IAAI,YAAA,CAAA,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,mBAAmB,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;;;;MAKzH,IAAI,CAAC,kBAAkB,GAAG,IAAI;;EAElC,CAAC;EAEM,OAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,OAAiC,EAAA;IAC7C,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC;EACtC,CAAC;EAEO,OAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,UACE,OAAiC,EACjC,KAAuB,EAAA;IAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;MACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;QACzC,CAAA,CAAA,EAAA,YAAA,CAAA,UAAU,EAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAA,CAAA,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;;;EAG7I,CAAC;EAEc,OAAA,CAAA,gBAAgB,GAA/B,UAAgC,IAAY,EAAE,OAAe,EAAA;IAC3D,IAAM,GAAG,GAAc,IAAI,KAAK,CAAC,IAAI,CAAC;IAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACnC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC;;IAG7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;MAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;QAChC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;;;IAIvB,OAAO,GAAG;EACZ,CAAC;EAEc,OAAA,CAAA,+BAA+B,GAA9C,UAA+C,IAAY,EAAE,OAAe,EAAA;IAC1E,IAAM,QAAQ,GAAG,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC;IAExD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;MAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;QAEhC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,OAAO,GAAG,CAAC,EAAE;UAC7D,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,mBAAmB;;QAGtC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;UAC9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,mBAAmB;;;;IAK1C,OAAO,QAAQ;EACjB,CAAC;EAEc,OAAA,CAAA,WAAW,GAA1B,UAA2B,IAAY,EAAE,OAAe,EAAA;IACtD,IAAM,YAAY,GAAG,OAAO,CAAC,+BAA+B,CAAC,IAAI,EAAE,OAAO,CAAC;IAE3E,IAAM,YAAY,GAAG;IACnB;IACA,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC;IAEN;IACA,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC,EAChB,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC,EAChB,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;IAEhB;IACA,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,EACb,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,EACb,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;IAEb;IACA,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,EACvB,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,EACvB,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CACxB;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;MAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;QAChC,IAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG;QAE5C,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;UAClC;;QAGF,IAAI,gBAAgB,EAAE;UACpB,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;;;;IAKlC,KAAqB,IAAA,EAAA,GAAA,CAAY,EAAZ,cAAA,GAAA,YAAY,EAAZ,EAAA,GAAA,cAAA,CAAA,MAAY,EAAZ,EAAA,EAAY,EAAE;MAAxB,IAAA,EAAA,GAAA,cAAA,CAAA,EAAA,CAAM;QAAL,CAAC,GAAA,EAAA,CAAA,CAAA,CAAA;QAAE,CAAC,GAAA,EAAA,CAAA,CAAA,CAAA;MACd,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO;;IAG9B,OAAO,YAAY;EACrB,CAAC;EACH,OAAA,OAAC;AAAD,CAhJA,EAAA;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA;;;;;;;;ACVb,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAIA,IAAA,YAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;AAeA,IAAA,SAAA,GAAA,aAAA,YAAA;EAgDE,SAAA,SAAA,CACU,KAAuB,EACd,KAAa,EACtB,EAAU,EACV,EAAU,EACD,aAAiC,EAAA;IAJ1C,IAAA,CAAA,KAAK,GAAL,KAAK;IACI,IAAA,CAAA,KAAK,GAAL,KAAK;IACd,IAAA,CAAA,EAAE,GAAF,EAAE;IACF,IAAA,CAAA,EAAE,GAAF,EAAE;IACO,IAAA,CAAA,aAAa,GAAb,aAAa;IApDf,IAAA,CAAA,OAAO,GAA8C;MACpE,MAAM,EAAE,CACN,oBAAoB,EACpB,oBAAoB,EACpB,oBAAoB,EACpB,oBAAoB,EACpB,oBAAoB,CACrB;MACD,UAAU,EAAE,CACV,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,CACzB;MACD,QAAQ,EAAE,CACR,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,CACvB;MACD,IAAI,EAAE,CACJ,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,CACnB;MACD,KAAK,EAAE,CACL,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,CACpB;MACD,GAAG,EAAE,EAAE;MACP,MAAM,EAAE;KACT;IAEO,IAAA,CAAA,gBAAgB,GAAW,CAAC;IAC5B,IAAA,CAAA,UAAU,GAAW,EAAE;IACvB,IAAA,CAAA,WAAW,GAAW,CAAC;IAEvB,IAAA,CAAA,SAAS,GAAW,CAAC;IACZ,IAAA,CAAA,cAAc,GAAW,GAAG;EAU7C;EAEA,MAAA,CAAA,cAAA,CAAW,SAAA,CAAA,SAAA,EAAA,OAAK,EAAA;SAAhB,SAAA,IAAA,EAAA;MACE,OAAO,KAAK;IACd,CAAC;;;;EAEM,SAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,YAAA;IACE,OAAO;MACL,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK;MACtB,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK;MACrB,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK;MAC7B,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;KACzB;EACH,CAAC;EAED,MAAA,CAAA,cAAA,CAAW,SAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,EAAE;IAChB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,SAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,EAAE;IAChB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,SAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,CAAC;IACV,CAAC;;;;EAGD,SAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,EAAU,EAAE,EAAe,EAAE,EAAoB,EAAE,EAAiB,EAAE,EAAmB,EAAA;IAC9F,IAAI,CAAC,SAAS,IAAI,EAAE,GAAG,IAAI;IAC3B,IAAI,CAAC,gBAAgB,IAAI,EAAE,GAAG,IAAI;IAElC,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE;MAC5C,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU;MACxC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM;;IAGrF,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,EAAE;MACzC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC;;EAEzB,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,OAAiC,EAAA;IACtC,CAAA,CAAA,EAAA,YAAA,CAAA,UAAU,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAA,CAAA,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACxH,CAAC;EACH,OAAA,SAAC;AAAD,CArGA,EAAA;AAAa,OAAA,CAAA,SAAA,GAAA,SAAA;;;;;;;;ACnBb,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAIA,IAAA,YAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;AAMA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA,IAAA,IAAA,GAAA,aAAA,YAAA;EAcE,SAAA,IAAA,CACU,KAAuB,EACvB,KAAa,EACb,EAAU,EACV,EAAU,EACD,KAAa,EAAA;IAJtB,IAAA,CAAA,KAAK,GAAL,KAAK;IACL,IAAA,CAAA,KAAK,GAAL,KAAK;IACL,IAAA,CAAA,EAAE,GAAF,EAAE;IACF,IAAA,CAAA,EAAE,GAAF,EAAE;IACO,IAAA,CAAA,KAAK,GAAL,KAAK;IAlBP,IAAA,CAAA,OAAO,GAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAC1D,IAAA,CAAA,aAAa,GAAW,CAAC;IACzB,IAAA,CAAA,MAAM,GAAY,KAAK;IACvB,IAAA,CAAA,SAAS,GAAY,KAAK;IAE1B,IAAA,CAAA,gBAAgB,GAAW,CAAC;IAC5B,IAAA,CAAA,UAAU,GAAW,GAAG;IAExB,IAAA,CAAA,wBAAwB,GAAW,CAAC;IAC3B,IAAA,CAAA,iBAAiB,GAAW,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;IAE9E,IAAA,CAAA,aAAa,GAAY,IAAI;EAQjC;EAEJ,MAAA,CAAA,cAAA,CAAW,IAAA,CAAA,SAAA,EAAA,OAAK,EAAA;SAAhB,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,MAAM;IACpB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,IAAA,CAAA,SAAA,EAAA,UAAQ,EAAA;SAAnB,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,SAAS;IACvB,CAAC;;;;EAEM,IAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,YAAA;IACE,IAAM,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK;IAC7B,IAAM,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK;IAC9B,OAAO;MACL,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC;MACxB,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC;MACzB,KAAK,EAAE,KAAK,GAAG,CAAC;MAChB,MAAM,EAAE,MAAM,GAAG;KAClB;EACH,CAAC;EAEM,IAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,EAAU,EAAE,GAAgB,EAAE,EAAoB,EAAE,EAAiB,EAAE,GAAoB,EAAA;IACvG,IAAI,CAAC,+BAA+B,CAAC,EAAE,CAAC;IAExC,IAAI,CAAC,gBAAgB,IAAI,EAAE,GAAG,IAAI;IAClC,IAAI,CAAC,wBAAwB,IAAI,EAAE,GAAG,IAAI;IAE1C,IAAI,IAAI,CAAC,wBAAwB,IAAI,IAAI,CAAC,iBAAiB,EAAE;MAC3D,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC;MACrB,IAAI,CAAC,SAAS,GAAG,IAAI;MAErB,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;MACpC,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;MACpC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;MACvD,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACxD,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;MACvD,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAG1D,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE;MAC5C,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU;MAExC,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QAClD,IAAI,CAAC,aAAa,GAAG,KAAK;;MAG5B,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;QAC5B,IAAI,CAAC,aAAa,GAAG,IAAI;;MAG3B,IAAI,IAAI,CAAC,aAAa,EAAE;QACtB,IAAI,CAAC,aAAa,IAAI,CAAC;OACxB,MAAM;QACL,IAAI,CAAC,aAAa,IAAI,CAAC;;;EAG7B,CAAC;EAEc,IAAA,CAAA,uBAAuB,GAAtC,UAAuC,EAAoB,EACzD,SAAiB,EACjB,SAAiB,EACjB,QAAgB,EAChB,KAAa,EACb,QAAgB,EAChB,aAAqB,EACrB,UAAkB,EAClB,UAAkB,EAAA;IAClB,IAAM,MAAM,GAAkC,EAAE;IAChD,IAAM,KAAK,GAAG,QAAQ,GAAG,KAAK;IAC9B,IAAM,MAAM,GAAG,QAAQ,GAAG,KAAK;IAE/B,IAAI,GAAG,GAAiB;MACtB,IAAI,EAAE,SAAS,GAAG,KAAK,GAAG,CAAC;MAC3B,IAAI,EAAE,SAAS,GAAG,MAAM,GAAG,CAAC;MAC5B,KAAK,EAAE,KAAK,GAAG,CAAC;MAChB,MAAM,EAAE,MAAM,GAAG;KAClB;IACD,IAAI,UAAU,GAAG,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC;IACvC,IAAI,cAAc,GAAG,CAAC;IACtB,IAAI,0BAA0B,GAAG,UAAU,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,IAAI,YAAY,YAAA,CAAA,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,mBAAmB;IAArE,CAAqE,CAAC;IAC5H,IAAI,UAAU,GAAG,KAAK;IAEtB,OACE,CAAC,0BAA0B,IAC3B,cAAc,IAAI,aAAa,IAC/B,cAAc,IAAI,QAAQ,IAC1B,CAAC,UAAU,EAAE;MACb,IAAI,OAAO,GAAgC,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC;MAErE,KAAmC,IAAA,EAAA,GAAA,CAAU,EAAV,YAAA,GAAA,UAAU,EAAV,EAAA,GAAA,YAAA,CAAA,MAAU,EAAV,EAAA,EAAU,EAAE;QAAlC,IAAM,UAAU,GAAA,YAAA,CAAA,EAAA,CAAA,CAAA,IAAA;QAC3B,IAAI,UAAU,YAAY,YAAA,CAAA,SAAS,IAAI,UAAU,CAAC,OAAO,KAAK,OAAO,EAAE;UACrE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;UAC3B,UAAU,GAAG,IAAI;;QAGnB,IAAI,UAAU,YAAY,QAAA,CAAA,MAAM,EAAE;UAChC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;;;MAI/B,SAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,UAAU;MAC1C,SAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,UAAU;MAE1C,GAAG,GAAG;QACJ,IAAI,EAAE,SAAS,GAAG,KAAK,GAAG,CAAC;QAC3B,IAAI,EAAE,SAAS,GAAG,MAAM,GAAG,CAAC;QAC5B,KAAK,EAAE,KAAK,GAAG,CAAC;QAChB,MAAM,EAAE,MAAM,GAAG;OAClB;MAED,UAAU,GAAG,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC;MACnC,0BAA0B,GAAG,UAAU,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,CAAC,IAAI,YAAY,YAAA,CAAA,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,mBAAmB;MAArE,CAAqE,CAAC;MACxH,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,CAAC,IAAI,YAAY,YAAA,CAAA,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO;MAAzD,CAAyD,CAAC;MAE5F,cAAc,EAAE;MAChB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;;IAGtB,OAAO,MAAM;EACf,CAAC;EAEO,IAAA,CAAA,SAAA,CAAA,cAAc,GAAtB,UACE,EAAoB,EACpB,EAAiB,EACjB,SAAiB,EACjB,SAAiB,EACjB,UAAsB,EACtB,UAAsB,EAAA;IAEtB,IAAM,YAAY,GAAG,EAAE;IACvB,IAAI,cAAc,GAAG,CAAC;IACtB,IAAI,oBAAoB,GAAuB,QAAQ;IACvD,IAAI,SAAS,GAAG,IAAI,WAAA,CAAA,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,oBAAoB,CAAC;IACjG,IAAI,UAAU,GAAG,EAAE,CAAC,cAAc,CAAC,SAAS,CAAC;IAC7C,IAAI,0BAA0B,GAAG,UAAU,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,IAAI,YAAY,YAAA,CAAA,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,mBAAmB;IAArE,CAAqE,CAAC;IAC5H,IAAI,UAAU,GAAG,KAAK;IAEtB,OAAO,CAAC,0BAA0B,IAChC,cAAc,IAAI,YAAY,IAC9B,cAAc,IAAI,IAAI,CAAC,KAAK,IAC5B,CAAC,UAAU,EAAE;MAEb,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC;MAEvB,KAAmC,IAAA,EAAA,GAAA,CAAU,EAAV,YAAA,GAAA,UAAU,EAAV,EAAA,GAAA,YAAA,CAAA,MAAU,EAAV,EAAA,EAAU,EAAE;QAAlC,IAAM,UAAU,GAAA,YAAA,CAAA,EAAA,CAAA,CAAA,IAAA;QAC3B,IAAI,UAAU,YAAY,YAAA,CAAA,SAAS,IAAI,UAAU,CAAC,OAAO,KAAK,OAAO,EAAE;UACrE,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC;UAC3B,UAAU,GAAG,IAAI;;QAGnB,IAAI,UAAU,YAAY,QAAA,CAAA,MAAM,EAAE;UAChC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC;;;MAI/B,SAAS,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU;MACzC,SAAS,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU;MAEzC,SAAS,GAAG,IAAI,WAAA,CAAA,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,oBAAoB,CAAC;MAE7F,UAAU,GAAG,EAAE,CAAC,cAAc,CAAC,SAAS,CAAC;MACzC,0BAA0B,GAAG,UAAU,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,CAAC,IAAI,YAAY,YAAA,CAAA,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,mBAAmB;MAArE,CAAqE,CAAC;MACxH,IAAI,IAAI,GAAY,UAAU;MAC9B,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,CAAC,IAAI,YAAY,YAAA,CAAA,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO;MAAzD,CAAyD,CAAC;MAC5F,cAAc,EAAE;MAEhB,IAAI,0BAA0B,IAAI,cAAc,IAAI,YAAY,IAAI,cAAc,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU,EAAE;QAC9G,IAAI,UAAU,KAAK,CAAC,EAAE;UACpB,oBAAoB,GAAG,OAAO;;QAGhC,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;UACrB,oBAAoB,GAAG,MAAM;;OAEhC,MAAM;QACL,IAAI,UAAU,KAAK,CAAC,IAAI,UAAU,KAAK,CAAC,EAAE;UACxC,oBAAoB,GAAG,YAAY;;QAGrC,IAAI,UAAU,KAAK,CAAC,IAAI,UAAU,KAAK,CAAC,EAAE;UACxC,oBAAoB,GAAG,UAAU;;;MAGrC,UAAU,GAAG,IAAI;MACjB,SAAS,GAAG,IAAI,WAAA,CAAA,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,oBAAoB,CAAC;;EAEjG,CAAC;EAGO,IAAA,CAAA,SAAA,CAAA,+BAA+B,GAAvC,UAAwC,EAAoB,EAAA;IAC1D,IAAI,IAAI,CAAC,KAAK,EAAE;MACd;;IAGF,IAAM,mBAAmB,GACvB,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CACpB,IAAI,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,IAAI,YAAY,QAAA,CAAA,MAAM;IAAxB,CAAwB,CAAC;IAExC,IAAI,CAAC,mBAAmB,EAAE;MACxB,IAAI,CAAC,MAAM,GAAG,IAAI;;EAEtB,CAAC;EAEM,IAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,OAAiC,EAAA;IAC7C,CAAA,CAAA,EAAA,YAAA,CAAA,UAAU,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,WAAA,CAAA,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;EACxG,CAAC;EAED,MAAA,CAAA,cAAA,CAAW,IAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,EAAE;IAChB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,IAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,EAAE;IAChB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,IAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,CAAC;IACV,CAAC;;;;EAEH,OAAA,IAAC;AAAD,CA/OA,EAAA;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA;;;;;;;;ACZb,IAAA,aAAA,GAAA,aAAA,YAAA;EAME,SAAA,aAAA,CACU,WAAwB,EACxB,YAAgC,EAChC,UAAkB,EAAA;IAFlB,IAAA,CAAA,WAAW,GAAX,WAAW;IACX,IAAA,CAAA,YAAY,GAAZ,YAAY;IACZ,IAAA,CAAA,UAAU,GAAV,UAAU;IARZ,IAAA,CAAA,iBAAiB,GAAW,CAAC;IAC7B,IAAA,CAAA,gBAAgB,GAAW,CAAC;IAC5B,IAAA,CAAA,aAAa,GAAW,CAAC;IACzB,IAAA,CAAA,aAAa,GAAW,CAAC;EAM9B;EAEI,aAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,KAAa,EAAA;IACzB,IAAI,CAAC,gBAAgB,IAAI,KAAK,GAAG,IAAI;IACrC,IAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE;MAC3C,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU;MACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM;;IAG5E,IAAA,EAAA,GAAmB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC;MAA3D,MAAM,GAAA,EAAA,CAAA,CAAA,CAAA;MAAE,MAAM,GAAA,EAAA,CAAA,CAAA,CAA6C;IAClE,IAAI,CAAC,aAAa,GAAG,MAAM;IAC3B,IAAI,CAAC,aAAa,GAAG,MAAM;EAC7B,CAAC;EAEM,aAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UACE,OAAiC,EACjC,CAAS,EACT,CAAS,EACT,KAAa,EACb,MAAc,EAAA;IAEd,IAAI,CAAC,WAAW,CAAC,MAAM,CACrB,OAAO,EACP,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,aAAa,EAClB,CAAC,EACD,CAAC,EACD,KAAK,EACL,MAAM,CACP;EACH,CAAC;EACH,OAAA,aAAC;AAAD,CAzCA,EAAA;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA;;;;;;;;ACFb,IAAA,WAAA,GAAA,aAAA,YAAA;EAEE,SAAA,WAAA,CACU,KAAuB,EACvB,WAAmB,EACnB,YAAoB,EAAA;IAFpB,IAAA,CAAA,KAAK,GAAL,KAAK;IACL,IAAA,CAAA,WAAW,GAAX,WAAW;IACX,IAAA,CAAA,YAAY,GAAZ,YAAY;EAClB;EAEG,WAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UACE,OAAiC,EACjC,MAAc,EACd,MAAc,EACd,CAAS,EACT,CAAS,EACT,KAAa,EACb,MAAc,EAAA;IAEd,OAAO,CAAC,SAAS,CACf,IAAI,CAAC,KAAK,EACV,MAAM,GAAG,IAAI,CAAC,WAAW,EACzB,MAAM,GAAG,IAAI,CAAC,YAAY,EAC1B,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,CAAC,EACD,CAAC,EACD,KAAK,EACL,MAAM,CACP;EACH,CAAC;EACH,OAAA,WAAC;AAAD,CA7BA,EAAA;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA;;;;;;;;ACAb,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AAKA,IAAA,gBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;AAIA,IAAA,aAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AAGA,IAAK,SAKJ;AALD,CAAA,UAAK,SAAS,EAAA;EACZ,SAAA,CAAA,SAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAE;EACF,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAK;EACL,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI;EACJ,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI;AACN,CAAC,EALI,SAAS,KAAT,SAAS,GAAA,CAAA,CAAA,CAAA,CAAA;AAkBd,IAAA,MAAA,GAAA,aAAA,YAAA;EAeE,SAAA,MAAA,CACU,EAAU,EACV,EAAU,EAClB,iBAAmC,EAC3B,eAAiC,EACjC,KAAa,EACJ,cAA8B,EAAA;IALvC,IAAA,CAAA,EAAE,GAAF,EAAE;IACF,IAAA,CAAA,EAAE,GAAF,EAAE;IAEF,IAAA,CAAA,eAAe,GAAf,eAAe;IACf,IAAA,CAAA,KAAK,GAAL,KAAK;IACI,IAAA,CAAA,cAAc,GAAd,cAAc;IApBzB,IAAA,CAAA,gBAAgB,GAAW,CAAC;IAC5B,IAAA,CAAA,WAAW,GAAW,EAAE;IACxB,IAAA,CAAA,SAAS,GAAW,CAAC;IAIrB,IAAA,CAAA,IAAI,GAAG,CAAC;IACR,IAAA,CAAA,IAAI,GAAG,CAAC;IACR,IAAA,CAAA,KAAK,GAAG,EAAE;IACV,IAAA,CAAA,MAAM,GAAG,EAAE;IACX,IAAA,CAAA,KAAK,GAAG,GAAG;IAWjB,IAAI,CAAC,WAAW,GAAG,IAAI,aAAA,CAAA,WAAW,CAAC,iBAAiB,EAAE,EAAE,EAAE,EAAE,CAAC;IAC7D,IAAI,CAAC,gBAAgB,GAAG;MACtB,SAAS,EAAE,IAAI,gBAAA,CAAA,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;MAC7D,YAAY,EAAE,IAAI,gBAAA,CAAA,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;MAChE,WAAW,EAAE,IAAI,gBAAA,CAAA,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;MAC/D,WAAW,EAAE,IAAI,gBAAA,CAAA,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;MAC/D,YAAY,EAAE,IAAI,gBAAA,CAAA,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;MAChF,eAAe,EAAE,IAAI,gBAAA,CAAA,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;MACnF,cAAc,EAAE,IAAI,gBAAA,CAAA,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;MAClF,cAAc,EAAE,IAAI,gBAAA,CAAA,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG;KAClF;IACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;IAC7D,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC,IAAI;EACxC;EAEA,MAAA,CAAA,cAAA,CAAW,MAAA,CAAA,SAAA,EAAA,OAAK,EAAA;SAAhB,SAAA,IAAA,EAAA;MACE,OAAO,IAAI;IACb,CAAC;;;;EAEM,MAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,YAAA;IACE,OAAO;MACL,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE;MAClB,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE;MAClB,KAAK,EAAE,IAAI,CAAC,KAAK;MACjB,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG;KACvB;EACH,CAAC;EAED,MAAA,CAAA,cAAA,CAAW,MAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,EAAE;IAChB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,MAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,EAAE;IAChB,CAAC;;;;EAED,MAAA,CAAA,cAAA,CAAW,MAAA,CAAA,SAAA,EAAA,GAAC,EAAA;SAAZ,SAAA,IAAA,EAAA;MACE,OAAO,EAAE;IACX,CAAC;;;;EAEM,MAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UACE,EAAU,EACV,EAAe,EACf,EAAoB,EACpB,EAAiB,EACjB,EAAmB,EAAA;IAEnB,IAAI,CAAC,IAAI,GAAG,CAAC;IACb,IAAI,CAAC,IAAI,GAAG,CAAC;IACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,CAAC,QAAQ;IAAX,CAAW,CAAC;IAE5D,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;MAC7C,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;;IAG9B,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;MAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;;IAG7B,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;MAC3C,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;;IAG9B,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;MAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;;IAG7B,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAC3C,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE;MACjD,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE;MAC3C,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,IAAI,GAAG,YAAY,CAAC,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK;MAC5G,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,IAAI,IAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK;MAEnF,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,YAAY,MAAA,CAAA,IAAI;MAAjB,CAAiB,CAAC,EAAE;QACrE,IAAM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC;QACrF,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;;;IAI/B,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;MACtC,IAAM,KAAG,GAAG,EAAE,CAAC,cAAc;MAC7B,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,KAAK,KAAG;MAAT,CAAS,CAAC,IAC/C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,KAAK,KAAG;MAAT,CAAS,CAAC,EAAE;QAChD,IAAI,CAAC,IAAI,GAAG,CAAC;;MAGf,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,KAAK,KAAG;MAAT,CAAS,CAAC,IAC7C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA;QAAI,OAAA,CAAC,KAAK,KAAG;MAAT,CAAS,CAAC,EAAE;QAC/C,IAAI,CAAC,IAAI,GAAG,CAAC;;;IAIX,IAAA,EAAA,GAAqB,MAAM,CAAC,kBAAkB,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;MAA7E,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA;MAAE,OAAO,GAAA,EAAA,CAAA,CAAA,CAA6D;IAEpF,IAAI,CAAC,IAAI,GAAG,OAAO;IACnB,IAAI,CAAC,IAAI,GAAG,OAAO;IAEnB,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI;IACpB,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI;IACpB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;IACxF,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;IACtH,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;EAClC,CAAC;EAEM,MAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,OAAiC,EAAA;IAC7C,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;EAC3F,CAAC;EAEc,MAAA,CAAA,kBAAkB,GAAjC,UAAkC,EAAoB,EAAE,MAAmB,EAAE,IAAY,EAAE,IAAY,EAAA;IACrG,IAAM,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IAChD,IAAA,EAAA,GAAqB,CAAC,IAAI,EAAE,IAAI,CAAC;MAAhC,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA;MAAE,OAAO,GAAA,EAAA,CAAA,CAAA,CAAgB;IAErC,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;MAC1B,OAAO,GAAG,CAAC;;IAGb,IAAM,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC;IAEpD,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;MAC1B,OAAO,GAAG,CAAC;;IAGb,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;EAC3B,CAAC;EAEc,MAAA,CAAA,YAAY,GAA3B,UAA4B,gBAA2B,EAAE,IAAY,EAAE,IAAY,EAAA;IACjF,IAAI,IAAI,GAAG,CAAC,EAAE;MACZ,OAAO,SAAS,CAAC,KAAK;KACvB,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE;MACnB,OAAO,SAAS,CAAC,IAAI;;IAGvB,IAAI,IAAI,GAAG,CAAC,EAAE;MACZ,OAAO,SAAS,CAAC,IAAI;KACtB,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE;MACnB,OAAO,SAAS,CAAC,EAAE;;IAGrB,OAAO,gBAAgB;EACzB,CAAC;EAEc,MAAA,CAAA,mBAAmB,GAAlC,UAAmC,gBAAkC,EAAE,gBAA2B,EAAE,IAAY,EAAE,IAAY,EAAA;IAC5H,IAAI,IAAI,GAAG,CAAC,EAAE;MACZ,OAAO,gBAAgB,CAAC,eAAe,CAAC;KACzC,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE;MACnB,OAAO,gBAAgB,CAAC,cAAc,CAAC;;IAGzC,IAAI,IAAI,GAAG,CAAC,EAAE;MACZ,OAAO,gBAAgB,CAAC,cAAc,CAAC;KACxC,MAAM,IAAI,IAAI,GAAG,CAAC,EAAE;MACnB,OAAO,gBAAgB,CAAC,YAAY,CAAC;;IAGvC,QAAQ,gBAAgB;MACtB,KAAK,SAAS,CAAC,KAAK;QAAE,OAAO,gBAAgB,CAAC,YAAY,CAAC;MAC3D,KAAK,SAAS,CAAC,IAAI;QAAE,OAAO,gBAAgB,CAAC,WAAW,CAAC;MACzD,KAAK,SAAS,CAAC,IAAI;QAAE,OAAO,gBAAgB,CAAC,WAAW,CAAC;MACzD,KAAK,SAAS,CAAC,EAAE;QAAE,OAAO,gBAAgB,CAAC,SAAS,CAAC;IAAC;IACvD;EACH,CAAC;EACH,OAAA,MAAC;AAAD,CAxLA,EAAA;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA;;;;;;;;ACrBA,OAAA,CAAA,QAAQ,GAAqB,CACxC;EACE,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EAChB,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EAClB,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EAClB,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACnB,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG;CAClB,EACD;EACE,IAAI,EAAE,CAAC,SAAS,CAAC;EACjB,MAAM,EAAE,CAAC,WAAW,CAAC;EACrB,MAAM,EAAE,CAAC,WAAW,CAAC;EACrB,OAAO,EAAE,CAAC,YAAY,CAAC;EACvB,MAAM,EAAE,CAAC,OAAO;CACjB,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBD,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AAGA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;AAEA,IAAA,aAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAmC,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;EAGjC,SAAA,aAAA,CACE,OAAiC,EACjC,KAAa,EACb,MAAc,EACd,WAAwB,EACxB,aAA4B,EAC5B,gBAAkC,EAClC,eAAgC,EAChC,QAAmB,EAAA;IARrB,IAAA,KAAA,GAUE,MAAA,CAAA,IAAA,CAAA,IAAA,EACE,KAAK,EACL,MAAM,EACN,OAAO,EACP,WAAW,EACX,aAAa,EACb,gBAAgB,EAChB,eAAe,EACf,QAAQ,CACT,IAAA,IAAA;IArBc,KAAA,CAAA,QAAQ,GAAW,EAAE;;EAsBtC;EAEyB,aAAA,CAAA,SAAA,CAAA,KAAK,GAA9B,YAAA;mCAAkC,OAAO,EAAA,YAAA;;;;;YACvC,MAAA,CAAA,SAAA,CAAM,KAAK,CAAA,IAAA,CAAA,IAAA,CAAE;YACG,OAAA,CAAA,CAAA,CAAA,WAAM,CAAA,CAAA,EAAA,aAAA,CAAA,gBAAgB,EAAC,+BAA+B,CAAC,CAAA;;YAAjE,OAAO,GAAG,EAAA,CAAA,IAAA,EAAuD;YACjE,GAAG,GAAG,IAAI,UAAA,CAAA,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;iBACnD,QAAA,CAAA,MAAM,CAAA,IAAA;0BACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAA;YAChC,OAAA,CAAA,CAAA,CAAA,WAAM,CAAA,CAAA,EAAA,aAAA,CAAA,gBAAgB,EAAC,6BAA6B,CAAC,CAAA;;YAHjD,MAAM,GAAG,KAAA,EAAA,CAAA,KAAA,CAAI,QAAA,CAAA,MAAM,EAAA,EAAA,CAAA,MAAA,CAAA,CAGvB,EAAA,CAAA,IAAA,EAAqD,EACrD,OAAO,EACP,IAAI,CAAC,MAAM,EACX,iBAAA,CAAA,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,CAAA,GAAC;iBAEM,QAAA,CAAA,MAAM,CAAA,IAAA;0BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,IAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAI,CAAC,CAAC,EAChF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAA;YAChC,OAAA,CAAA,CAAA,CAAA,WAAM,CAAA,CAAA,EAAA,aAAA,CAAA,gBAAgB,EAAC,6BAA6B,CAAC,CAAA;;YAHjD,OAAO,GAAG,KAAA,EAAA,CAAA,KAAA,CAAI,QAAA,CAAA,MAAM,EAAA,EAAA,CAAA,MAAA,CAAA,CAGxB,EAAA,CAAA,IAAA,EAAqD,EACrD,OAAO,EACP,IAAI,CAAC,MAAM,EACX,iBAAA,CAAA,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,CAAA,GAAC;YAEd,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;;;;;GACxB;;EACH,OAAA,aAAC;AAAD,CAjDA,CAAmC,MAAA,CAAA,IAAI,CAAA;AAA1B,OAAA,CAAA,aAAA,GAAA,aAAA;;;;;;;;ACNb,IAAA,gBAAA,GAAA,aAAA,YAAA;EAAA,SAAA,gBAAA,CAAA,EAAA;IACU,IAAA,CAAA,WAAW,GAAkB,EAAE;EA4FzC;EA1FS,gBAAA,CAAA,SAAA,CAAA,aAAa,GAApB,UAAqB,UAAuB,EAAA;IAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC;EACnC,CAAC;EAEM,gBAAA,CAAA,SAAA,CAAA,gBAAgB,GAAvB,UAAwB,UAAuB,EAAA;IAC7C,IAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,KAAK,UAAU;IAAhB,CAAgB,CAAC;IAC/D,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EACnC,CAAC;EAEM,gBAAA,CAAA,SAAA,CAAA,YAAY,GAAnB,UAAoB,gBAA6B,EAAE,IAAY,EAAE,IAAY,EAAA;IAC3E,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,IAAI,CAAC,KAAK;IAAZ,CAAY,CAAC;EACpF,CAAC;EAEM,gBAAA,CAAA,SAAA,CAAA,cAAc,GAArB,UAAsB,gBAA4C,EAAE,OAAmB,EAAE,OAAmB,EAAA;IAAxC,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;MAAA,OAAA,GAAA,CAAmB;IAAA;IAAE,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;MAAA,OAAA,GAAA,CAAmB;IAAA;IAC1G,IAAM,MAAM,GAAG,EAAE;IAEjB,KAAyB,IAAA,EAAA,GAAA,CAAgB,EAAhB,EAAA,GAAA,IAAI,CAAC,WAAW,EAAhB,EAAA,GAAA,EAAA,CAAA,MAAgB,EAAhB,EAAA,EAAgB,EAAE;MAAtC,IAAM,UAAU,GAAA,EAAA,CAAA,EAAA,CAAA;MACnB,IAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;MACpF,IAAI,SAAS,EAAE;QACb,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;;;IAI1B,OAAO,MAAM;EACf,CAAC;EAEO,gBAAA,CAAA,SAAA,CAAA,aAAa,GAArB,UACE,qBAAiD,EACjD,eAA4B,EAC5B,OAAmB,EACnB,OAAmB,EAAA;IADnB,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;MAAA,OAAA,GAAA,CAAmB;IAAA;IACnB,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;MAAA,OAAA,GAAA,CAAmB;IAAA;IAEnB,IAAI,kBAAgC;IAEpC,IAAI,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,EAAE;MAC5C,IAAI,qBAAqB,KAAK,eAAe,EAAE;QAC7C,OAAO,IAAI;OACZ,MAAM;QACL,kBAAkB,GAAG,qBAAqB,CAAC,eAAe,EAAE;;KAE/D,MAAM;MACL,kBAAkB,GAAG,qBAAqB;;IAG5C,kBAAkB,CAAC,IAAI,IAAI,OAAO;IAClC,kBAAkB,CAAC,IAAI,IAAI,OAAO;IAClC,IAAM,sBAAsB,GAAG,eAAe,CAAC,eAAe,EAAE;IAEhE,IAAM,cAAc,GAClB,kBAAkB,CAAC,IAAI,IAAI,sBAAsB,CAAC,IAAI,IACtD,kBAAkB,CAAC,IAAI,GAAG,kBAAkB,CAAC,KAAK,IAAI,sBAAsB,CAAC,IAAI;IAEnF,IAAM,aAAa,GACjB,sBAAsB,CAAC,IAAI,IAAI,kBAAkB,CAAC,IAAI,IACtD,sBAAsB,CAAC,IAAI,GAAG,sBAAsB,CAAC,KAAK,IAAI,kBAAkB,CAAC,IAAI;IAEvF,IAAM,YAAY,GAChB,kBAAkB,CAAC,IAAI,IAAI,sBAAsB,CAAC,IAAI,IACtD,kBAAkB,CAAC,IAAI,GAAG,kBAAkB,CAAC,MAAM,IAAI,sBAAsB,CAAC,IAAI;IAEpF,IAAM,eAAe,GACnB,sBAAsB,CAAC,IAAI,IAAI,kBAAkB,CAAC,IAAI,IACtD,sBAAsB,CAAC,IAAI,GAAG,sBAAsB,CAAC,MAAM,IAAI,kBAAkB,CAAC,IAAI;IAExF,IAAI,CAAC,cAAc,IAAI,aAAa,MAAM,YAAY,IAAI,eAAe,CAAC,EAAE;MAC1E,OAAO;QACL,IAAI,EAAE,eAAe;QACrB,MAAM,EAAE,eAAe;QACvB,IAAI,EAAE,aAAa;QACnB,KAAK,EAAE,cAAc;QACrB,GAAG,EAAE;OACN;;IAGH,OAAO,IAAI;EACb,CAAC;EAGM,gBAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,OAAiC,EAAA;IAC7C,KAAyB,IAAA,EAAA,GAAA,CAAgB,EAAhB,EAAA,GAAA,IAAI,CAAC,WAAW,EAAhB,EAAA,GAAA,EAAA,CAAA,MAAgB,EAAhB,EAAA,EAAgB,EAAE;MAAtC,IAAM,UAAU,GAAA,EAAA,CAAA,EAAA,CAAA;MACnB,IAAM,GAAG,GAAG,UAAU,CAAC,eAAe,EAAE;MACxC,OAAO,CAAC,WAAW,GAAG,MAAM;MAC5B,OAAO,CAAC,SAAS,GAAG,CAAC;MACrB,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC;;EAEjE,CAAC;EAEM,gBAAA,CAAA,SAAA,CAAA,YAAY,GAAnB,UAAoB,MAA4C,EAAA;IAC9D,OAAQ,MAAsB,CAAC,eAAe,KAAK,SAAS;EAC9D,CAAC;EACH,OAAA,gBAAC;AAAD,CA7FA,EAAA;AAAa,OAAA,CAAA,gBAAA,GAAA,gBAAA;;;;;;;;ACDb,IAAA,aAAA,GAAA,aAAA,YAAA;EAGE,SAAA,aAAA,CACmB,gBAAkC,EAClC,eAAgC,EAAA;IADhC,IAAA,CAAA,gBAAgB,GAAhB,gBAAgB;IAChB,IAAA,CAAA,eAAe,GAAf,eAAe;IAJjB,IAAA,CAAA,QAAQ,GAAc,EAAE;EAKzC;EAEO,aAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,UAAiB,MAAe,EAAA;IAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;IAE1B,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;MAC9C,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC;;IAG7C,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;MAC/C,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC;;EAEhD,CAAC;EAEM,aAAA,CAAA,SAAA,CAAA,YAAY,GAAnB,UAAoB,MAAe,EAAA;IACjC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,KAAK,MAAM;IAAZ,CAAY,CAAC;IACxD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;IAE9B,IAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;MAC7C,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,CAAC;;IAGhD,IAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;MAC9C,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,CAAC;;EAEnD,CAAC;EAEM,aAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,YAAA;IACE,OAAO,IAAI,CAAC,QAAQ;EACtB,CAAC;EACH,OAAA,aAAC;AAAD,CApCA,EAAA;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA;;;;;;;;ACJb,SAAgB,cAAc,CAAA,EAAA;EAC5B,OAAQ,IAAI,IAAI,GAAE,OAAO,EAAE;AAC7B;AAFA,OAAA,CAAA,cAAA,GAAA,cAAA;;;;;;;;ACAA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AASA,IAAA,iBAAA,GAAA,aAAA,YAAA;EAOE,SAAA,iBAAA,CAAA,EAAA;IANQ,IAAA,CAAA,UAAU,GAAW,CAAC;IACtB,IAAA,CAAA,OAAO,GAAW,CAAC;IACnB,IAAA,CAAA,SAAS,GAAW,CAAC;EAIb;EAET,iBAAA,CAAA,SAAA,CAAA,GAAG,GAAV,UAAW,cAA8B,EAAE,cAA8B,EAAA;IAAzE,IAAA,KAAA,GAAA,IAAA;IACE,IAAI,CAAC,SAAS,GAAG,CAAA,CAAA,EAAA,YAAA,CAAA,cAAc,GAAE;IACjC,IAAI,CAAC,cAAc,GAAG,cAAc;IACpC,IAAI,CAAC,cAAc,GAAG,cAAc;IAEpC,MAAM,CAAC,qBAAqB,CAAC,YAAA;MAC3B,KAAI,CAAC,IAAI,EAAE;IACb,CAAC,CAAC;EACJ,CAAC;EAEO,iBAAA,CAAA,SAAA,CAAA,IAAI,GAAZ,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IACE,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;MAChD,MAAM,KAAK,CAAC,+BAA+B,CAAC;;IAE9C,IAAM,WAAW,GAAG,CAAA,CAAA,EAAA,YAAA,CAAA,cAAc,GAAE;IACpC,IAAM,EAAE,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI;IAChD,IAAI,CAAC,SAAS,GAAG,WAAW;IAC5B,IAAI,CAAC,UAAU,IAAI,EAAE;IACrB,IAAI,CAAC,OAAO,IAAI,CAAC;IAEjB,IAAG,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;MACvB,IAAI,CAAC,UAAU,GAAG,CAAC;MACnB,IAAI,CAAC,OAAO,GAAG,CAAC;;IAGlB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;IACvB,IAAI,CAAC,cAAc,EAAE;IACrB,MAAM,CAAC,qBAAqB,CAAC,YAAA;MAAM,OAAA,KAAI,CAAC,IAAI,EAAE;IAAX,CAAW,CAAC;EACjD,CAAC;EACH,OAAA,iBAAC;AAAD,CAtCA,EAAA;AAAa,OAAA,CAAA,iBAAA,GAAA,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,IAAA,WAAA,GAAA,aAAA,YAAA;EAIE,SAAA,WAAA,CAAoB,QAA2B,EAAA;IAA3B,IAAA,CAAA,QAAQ,GAAR,QAAQ;IAHpB,IAAA,CAAA,UAAU,GAA+B,CAAA,CAAE;EAGA;EAEtC,WAAA,CAAA,SAAA,CAAA,KAAK,GAAlB,YAAA;;;;QACE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAA,CAAC,EAAA;UACzC,CAAC,CAAC,cAAc,EAAE;UAClB,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI;UAC7B,KAAI,CAAC,eAAe,GAAG,CAAC,CAAC,GAAG;QAC9B,CAAC,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAA,CAAC,EAAA;UACvC,CAAC,CAAC,cAAc,EAAE;UAClB,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK;QAChC,CAAC,CAAC;;;;GACH;;EAEM,WAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,UAAiB,GAAW,EAAA;IAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,IAAI;EACtC,CAAC;EAEM,WAAA,CAAA,SAAA,CAAA,YAAY,GAAnB,UAAoB,IAAc,EAAA;IAAlC,IAAA,KAAA,GAAA,IAAA;IACE,OAAO,IAAI,CAAC,IAAI,CAAC,UAAA,GAAG,EAAA;MAAI,OAAA,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC;IAAnB,CAAmB,CAAC;EAC9C,CAAC;EAED,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAA,EAAA,gBAAc,EAAA;SAAzB,SAAA,IAAA,EAAA;MACE,OAAO,IAAI,CAAC,eAAe;IAC7B,CAAC;;;;EACH,OAAA,WAAC;AAAD,CA9BA,EAAA;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA;;;;;;;;ACGb,IAAA,eAAA,GAAA,aAAA,YAAA;EAGE,SAAA,eAAA,CAAA,EAAA;IAFiB,IAAA,CAAA,aAAa,GAAoB,EAAE;EAErC;EAER,eAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,UAAuB,YAA2B,EAAA;IAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC;EACvC,CAAC;EAEM,eAAA,CAAA,SAAA,CAAA,kBAAkB,GAAzB,UAA0B,YAA2B,EAAA;IACnD,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,KAAK,YAAY;IAAlB,CAAkB,CAAC;IACnE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EACrC,CAAC;EAEM,eAAA,CAAA,SAAA,CAAA,gBAAgB,GAAvB,YAAA;IACE,OAAO,IAAI,CAAC,aAAa;EAC3B,CAAC;EAEM,eAAA,CAAA,SAAA,CAAA,kBAAkB,GAAzB,UAA0B,CAAS,EAAE,CAAS,EAAA;IAC5C,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAA,CAAC,EAAA;MAAI,OAAA,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAAtB,CAAsB,CAAC;EAC/D,CAAC;EAEM,eAAA,CAAA,SAAA,CAAA,uBAAuB,GAA9B,UAA+B,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAA;IAC3E,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAA,CAAC,EAAA;MAChC,OAAA,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IACtB,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;IADtB,CACsB,CAAC;EAC3B,CAAC;EAEM,eAAA,CAAA,SAAA,CAAA,cAAc,GAArB,UAAsB,MAA+B,EAAA;IACnD,IAAM,YAAY,GAAG,MAAuB;IAC5C,OAAO,YAAY,CAAC,CAAC,KAAK,SAAS,IAAI,YAAY,CAAC,CAAC,KAAK,SAAS;EACrE,CAAC;EACH,OAAA,eAAC;AAAD,CAhCA,EAAA;AAAa,OAAA,CAAA,eAAA,GAAA,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;AAGA,SAAe,SAAS,CAAA,EAAA;;;;;;UAChB,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAA6B;UAEnF,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC;YAClD,OAAA,CAAA,CAAA,CAAA,WAAA;;;UAGI,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC;UAEzC,IAAG,CAAC,OAAO,EAAE;YACX,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC;YAC1C,OAAA,CAAA,CAAA,CAAA,WAAA;;;UAGF,QAAQ,CAAC,KAAK,EAAE;UAChB,OAAO,CAAC,qBAAqB,GAAG,KAAK;UAE/B,gBAAgB,GAAG,IAAI,mBAAA,CAAA,gBAAgB,EAAE;UACzC,eAAe,GAAG,IAAI,kBAAA,CAAA,eAAe,EAAE;UAEvC,IAAI,GAAG,IAAI,gBAAA,CAAA,aAAa,CAC5B,OAAO,EACP,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,MAAM,EACf,IAAI,cAAA,CAAA,WAAW,CAAC,QAAQ,CAAC,EACzB,IAAI,gBAAA,CAAA,aAAa,CAAC,gBAAgB,EAAE,eAAe,CAAC,EACpD,gBAAgB,EAChB,eAAe,EACf,IAAI,WAAA,CAAA,iBAAiB,EAAE,CAAC;UAE1B,OAAA,CAAA,CAAA,CAAA,WAAM,IAAI,CAAC,GAAG,EAAE,CAAA;;UAAhB,EAAA,CAAA,IAAA,EAAgB;;;;;;;AAGlB,SAAS,EAAE;;;AC1CX,IAAIA,UAAU,GAAG,4BAA4B;AAE7C,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACC,MAAM;AAEpC,SAASA,MAAMA,CAACC,UAAU,EAAE;EAC1BJ,SAAS,CAACK,IAAI,CAAC,IAAI,EAAED,UAAU,CAAC;EAChC,IAAI,CAACE,GAAG,GAAG;IACTC,IAAI,EAAEN,MAAM,CAACC,MAAM,CAACM,OAAO;IAC3BC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,SAAAA,CAAUC,EAAE,EAAE;MACpB,IAAI,CAACH,gBAAgB,CAACI,IAAI,CAACD,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;IAClD,CAAC;IACDE,OAAO,EAAE,SAAAA,CAAUF,EAAE,EAAE;MACrB,IAAI,CAACF,iBAAiB,CAACG,IAAI,CAACD,EAAE,CAAC;IACjC;EACF,CAAC;EAEDX,MAAM,CAACC,MAAM,CAACM,OAAO,GAAG,IAAI;AAC9B;AAEAP,MAAM,CAACC,MAAM,CAACC,MAAM,GAAGA,MAAM;AAC7B,IAAIY,aAAa,EAAEC,cAAc;AAEjC,IAAIC,MAAM,GAAGhB,MAAM,CAACC,MAAM,CAACe,MAAM;AACjC,IAAI,CAAC,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,EAAE;EAC5E,IAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAAQ;EAC5D,IAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EAC5D,IAAIC,EAAE,GAAG,IAAIJ,SAAS,CAACG,QAAQ,GAAG,KAAK,GAAGF,QAAQ,GAAG,GAAG,UAAuB,GAAG,GAAG,CAAC;EACtFG,EAAE,CAACC,SAAS,GAAG,UAASC,KAAK,EAAE;IAC7BV,aAAa,GAAG,CAAC,CAAC;IAClBC,cAAc,GAAG,EAAE;IAEnB,IAAIT,IAAI,GAAGmB,IAAI,CAACC,KAAK,CAACF,KAAK,CAAClB,IAAI,CAAC;IAEjC,IAAIA,IAAI,CAACqB,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAIC,OAAO,GAAG,KAAK;MACnBtB,IAAI,CAACuB,MAAM,CAACC,OAAO,CAAC,UAASC,KAAK,EAAE;QAClC,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAChB,IAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAa,EAAEL,KAAK,CAACM,EAAE,CAAC;UAC9D,IAAIJ,SAAS,EAAE;YACbL,OAAO,GAAG,IAAI;UAChB;QACF;MACF,CAAC,CAAC;;MAEF;MACAA,OAAO,GAAGA,OAAO,IAAItB,IAAI,CAACuB,MAAM,CAACS,KAAK,CAAC,UAASP,KAAK,EAAE;QACrD,OAAOA,KAAK,CAACJ,IAAI,KAAK,KAAK,IAAII,KAAK,CAACQ,SAAS,CAACC,EAAE;MACnD,CAAC,CAAC;MAEF,IAAIZ,OAAO,EAAE;QACXa,OAAO,CAACC,KAAK,EAAE;QAEfpC,IAAI,CAACuB,MAAM,CAACC,OAAO,CAAC,UAAUC,KAAK,EAAE;UACnCY,QAAQ,CAACR,MAAM,CAACC,aAAa,EAAEL,KAAK,CAAC;QACvC,CAAC,CAAC;QAEFhB,cAAc,CAACe,OAAO,CAAC,UAAUc,CAAC,EAAE;UAClCC,YAAY,CAACD,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIxB,QAAQ,CAAC0B,MAAM,EAAE;QAAE;QAC5B1B,QAAQ,CAAC0B,MAAM,EAAE;MACnB;IACF;IAEA,IAAIxC,IAAI,CAACqB,IAAI,KAAK,QAAQ,EAAE;MAC1BL,EAAE,CAACyB,KAAK,EAAE;MACVzB,EAAE,CAAC0B,OAAO,GAAG,YAAY;QACvB5B,QAAQ,CAAC0B,MAAM,EAAE;MACnB,CAAC;IACH;IAEA,IAAIxC,IAAI,CAACqB,IAAI,KAAK,gBAAgB,EAAE;MAClCc,OAAO,CAACQ,GAAG,CAAC,2BAA2B,CAAC;MAExCC,kBAAkB,EAAE;IACtB;IAEA,IAAI5C,IAAI,CAACqB,IAAI,KAAK,OAAO,EAAE;MACzBc,OAAO,CAACU,KAAK,CAAC,eAAe,GAAG7C,IAAI,CAAC6C,KAAK,CAACC,OAAO,GAAG,IAAI,GAAG9C,IAAI,CAAC6C,KAAK,CAACE,KAAK,CAAC;MAE7EH,kBAAkB,EAAE;MAEpB,IAAII,OAAO,GAAGC,kBAAkB,CAACjD,IAAI,CAAC;MACtCkD,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACJ,OAAO,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASJ,kBAAkBA,CAAA,EAAG;EAC5B,IAAII,OAAO,GAAGE,QAAQ,CAACG,cAAc,CAAC7D,UAAU,CAAC;EACjD,IAAIwD,OAAO,EAAE;IACXA,OAAO,CAACM,MAAM,EAAE;EAClB;AACF;AAEA,SAASL,kBAAkBA,CAACjD,IAAI,EAAE;EAChC,IAAIgD,OAAO,GAAGE,QAAQ,CAACK,aAAa,CAAC,KAAK,CAAC;EAC3CP,OAAO,CAACjB,EAAE,GAAGvC,UAAU;;EAEvB;EACA,IAAIsD,OAAO,GAAGI,QAAQ,CAACK,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAa,CAAC,KAAK,CAAC;EAC9CT,OAAO,CAACW,SAAS,GAAGzD,IAAI,CAAC6C,KAAK,CAACC,OAAO;EACtCU,UAAU,CAACC,SAAS,GAAGzD,IAAI,CAAC6C,KAAK,CAACE,KAAK;EAEvCC,OAAO,CAACU,SAAS,GACf,wNAAwN,GACtN,mFAAmF,GACnF,yEAAyE,GACzE,qEAAqE,GAAGZ,OAAO,CAACY,SAAS,GAAG,QAAQ,GACpG,OAAO,GAAGF,UAAU,CAACE,SAAS,GAAG,QAAQ,GAC3C,QACD;EAED,OAAOV,OAAO;AAEhB;AAEA,SAASW,UAAUA,CAAChE,MAAM,EAAEoC,EAAE,EAAE;EAC9B,IAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,CAAC,EAAEC,CAAC,EAAEC,GAAG;EAEb,KAAKF,CAAC,IAAIF,OAAO,EAAE;IACjB,KAAKG,CAAC,IAAIH,OAAO,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvBE,GAAG,GAAGJ,OAAO,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,CAAC,CAAC;MACtB,IAAIC,GAAG,KAAKjC,EAAE,IAAKkC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,IAAIA,GAAG,CAACA,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC,KAAKpC,EAAG,EAAE;QACpE8B,OAAO,CAACvD,IAAI,CAACwD,CAAC,CAAC;MACjB;IACF;EACF;EAEA,IAAInE,MAAM,CAACe,MAAM,EAAE;IACjBmD,OAAO,GAAGA,OAAO,CAACO,MAAM,CAACT,UAAU,CAAChE,MAAM,CAACe,MAAM,EAAEqB,EAAE,CAAC,CAAC;EACzD;EAEA,OAAO8B,OAAO;AAChB;AAEA,SAASxB,QAAQA,CAAC1C,MAAM,EAAE8B,KAAK,EAAE;EAC/B,IAAImC,OAAO,GAAGjE,MAAM,CAACiE,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAIA,OAAO,CAACnC,KAAK,CAACM,EAAE,CAAC,IAAI,CAACpC,MAAM,CAACe,MAAM,EAAE;IACvC,IAAIL,EAAE,GAAG,IAAIgE,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE5C,KAAK,CAACQ,SAAS,CAACC,EAAE,CAAC;IACzET,KAAK,CAACC,KAAK,GAAG,CAACkC,OAAO,CAACnC,KAAK,CAACM,EAAE,CAAC;IAChC6B,OAAO,CAACnC,KAAK,CAACM,EAAE,CAAC,GAAG,CAAC1B,EAAE,EAAEoB,KAAK,CAAC6C,IAAI,CAAC;EACtC,CAAC,MAAM,IAAI3E,MAAM,CAACe,MAAM,EAAE;IACxB2B,QAAQ,CAAC1C,MAAM,CAACe,MAAM,EAAEe,KAAK,CAAC;EAChC;AACF;AAEA,SAASG,cAAcA,CAACjC,MAAM,EAAEoC,EAAE,EAAE;EAClC,IAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,OAAO,CAAC7B,EAAE,CAAC,IAAIpC,MAAM,CAACe,MAAM,EAAE;IACjC,OAAOkB,cAAc,CAACjC,MAAM,CAACe,MAAM,EAAEqB,EAAE,CAAC;EAC1C;EAEA,IAAIvB,aAAa,CAACuB,EAAE,CAAC,EAAE;IACrB;EACF;EACAvB,aAAa,CAACuB,EAAE,CAAC,GAAG,IAAI;EAExB,IAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAK,CAACzC,EAAE,CAAC;EAE7BtB,cAAc,CAACH,IAAI,CAAC,CAACX,MAAM,EAAEoC,EAAE,CAAC,CAAC;EAEjC,IAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAG,IAAIwE,MAAM,CAACxE,GAAG,CAACG,gBAAgB,CAACiE,MAAM,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,OAAOR,UAAU,CAAC9B,MAAM,CAACC,aAAa,EAAEC,EAAE,CAAC,CAAC0C,IAAI,CAAC,UAAU1C,EAAE,EAAE;IAC7D,OAAOH,cAAc,CAACC,MAAM,CAACC,aAAa,EAAEC,EAAE,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAASQ,YAAYA,CAAC5C,MAAM,EAAEoC,EAAE,EAAE;EAChC,IAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAK,CAACzC,EAAE,CAAC;EAC7BpC,MAAM,CAACM,OAAO,GAAG,CAAC,CAAC;EACnB,IAAIsE,MAAM,EAAE;IACVA,MAAM,CAACxE,GAAG,CAACC,IAAI,GAAGL,MAAM,CAACM,OAAO;EAClC;EAEA,IAAIsE,MAAM,IAAIA,MAAM,CAACxE,GAAG,IAAIwE,MAAM,CAACxE,GAAG,CAACI,iBAAiB,CAACgE,MAAM,EAAE;IAC/DI,MAAM,CAACxE,GAAG,CAACI,iBAAiB,CAACqB,OAAO,CAAC,UAAUkD,EAAE,EAAE;MACjDA,EAAE,CAAC/E,MAAM,CAACM,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,OAAON,MAAM,CAAC6E,KAAK,CAACzC,EAAE,CAAC;EACvBpC,MAAM,CAACoC,EAAE,CAAC;EAEVwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAK,CAACzC,EAAE,CAAC;EACzB,IAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAG,IAAIwE,MAAM,CAACxE,GAAG,CAACG,gBAAgB,CAACiE,MAAM,EAAE;IAC9DI,MAAM,CAACxE,GAAG,CAACG,gBAAgB,CAACsB,OAAO,CAAC,UAAUkD,EAAE,EAAE;MAChDA,EAAE,EAAE;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF","file":"bootstrap.e2109142.js","sourceRoot":"..","sourcesContent":["import { CollisionManager } from \"./collision-manager\";\r\nimport { IEntity } from \"./entity\";\r\nimport { IGameLoop } from \"./game-loop\";\r\nimport { KeyListener } from \"./key-listener\";\r\nimport { EntityManager } from \"./entity-manager\";\r\nimport { PositionManager } from \"./position-manager\";\r\n\r\nexport abstract class Game {\r\n  protected readonly _scale: number = 3;\r\n\r\n  private showCollisionBoxes: boolean = false;\r\n  private activateDebugMode: (dt: number) => void;\r\n\r\n  constructor(\r\n    protected width: number,\r\n    protected height: number,\r\n    private context: CanvasRenderingContext2D,\r\n    private keyListener: KeyListener,\r\n    private entityManager: EntityManager,\r\n    private collisionManager: CollisionManager,\r\n    private positionManager: PositionManager,\r\n    private gameLoop: IGameLoop) { \r\n      this.activateDebugMode = debounce(\r\n        200,\r\n        () => this.keyListener.isKeyDown('F1'),\r\n        () => this.showCollisionBoxes = !this.showCollisionBoxes);\r\n    }\r\n\r\n  public async run() {\r\n    await this.setup();\r\n    this.gameLoop.run(\r\n      (dt) => this.update(\r\n        dt, \r\n        this.keyListener, \r\n        this.collisionManager, \r\n        this.entityManager, \r\n        this.positionManager),\r\n      () => this.render(this.context)\r\n    );\r\n  }\r\n\r\n  protected async setup(): Promise<void> {\r\n    const promises = [this.keyListener.setup()];\r\n    Promise.all(promises);\r\n  };\r\n\r\n  protected addEntity(entity: IEntity) {\r\n    this.entityManager.addEntity(entity);\r\n  }\r\n\r\n  private update(\r\n    dt: number, \r\n    kl: KeyListener, \r\n    cl: CollisionManager, \r\n    em: EntityManager, \r\n    pm: PositionManager) {\r\n    for (const entity of this.entityManager.getEntities()) {\r\n      entity.update(dt, kl, cl, em, pm);\r\n    }\r\n\r\n    this.activateDebugMode(dt);\r\n  }\r\n\r\n  private render(context: CanvasRenderingContext2D) {\r\n    for (const entity of this.positionManager.getPositionables().slice(0).sort((a, b) => a.z - b.z)) {\r\n      entity.render(context);\r\n    }\r\n\r\n    if(this.showCollisionBoxes) {\r\n      this.collisionManager.render(context);\r\n    }\r\n  }\r\n}\r\n\r\nfunction debounce(debounceKeyInputMs: number, condition: () => boolean, action: () => void) {\r\n  let currentDebounceMs = 0;\r\n  let debounce = false;\r\n\r\n  return (dt: number) => {\r\n    currentDebounceMs += dt * 1000;\r\n\r\n    if(currentDebounceMs >= debounceKeyInputMs) {\r\n      debounce = false;\r\n      currentDebounceMs = 0;\r\n    }\r\n\r\n    if(condition() && !debounce) {\r\n      action();\r\n      debounce = true;\r\n      currentDebounceMs = 0;\r\n    }\r\n  }\r\n}","export async function loadImageFromUrl(url: string): Promise<HTMLImageElement> {\r\n  return new Promise(resolve => {\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.onload = () => {\r\n      resolve(img);\r\n    }\r\n  })\r\n}","export const TILES = {\r\n  'floor': { x: 328, y: 461, width: 16, height: 16 },\r\n  'unbreakable-brick': { x: 294, y: 461, width: 16, height: 16 },\r\n  'brick': { x: 311, y: 461, width: 16, height: 16 },\r\n  's-bomb': { x: 379, y: 563, width: 16, height: 16 },\r\n  'm-bomb': { x: 396, y: 563, width: 16, height: 16 },\r\n  'l-bomb': { x: 413, y: 563, width: 16, height: 16 },\r\n  'explosion-center-1': { x: 345, y: 512, width: 16, height: 16 },\r\n  'explosion-center-2': { x: 362, y: 512, width: 16, height: 16 },\r\n  'explosion-center-3': { x: 379, y: 512, width: 16, height: 16 },\r\n  'explosion-center-4': { x: 396, y: 512, width: 16, height: 16 },\r\n  'explosion-center-5': { x: 345, y: 529, width: 16, height: 16 },\r\n  'explosion-horizontal-1': { x: 277, y: 512, width: 16, height: 16 },\r\n  'explosion-horizontal-2': { x: 277, y: 529, width: 16, height: 16 },\r\n  'explosion-horizontal-3': { x: 277, y: 546, width: 16, height: 16 },\r\n  'explosion-horizontal-4': { x: 311, y: 512, width: 16, height: 16 },\r\n  'explosion-horizontal-5': { x: 311, y: 529, width: 16, height: 16 },\r\n  'explosion-vertical-1': { x: 362, y: 529, width: 16, height: 16 },\r\n  'explosion-vertical-2': { x: 379, y: 529, width: 16, height: 16 },\r\n  'explosion-vertical-3': { x: 396, y: 546, width: 16, height: 16 },\r\n  'explosion-vertical-4': { x: 311, y: 546, width: 16, height: 16 },\r\n  'explosion-vertical-5': { x: 328, y: 546, width: 16, height: 16 },\r\n  'explosion-left-1': { x: 345, y: 478, width: 16, height: 16 },\r\n  'explosion-left-2': { x: 328, y: 478, width: 16, height: 16 },\r\n  'explosion-left-3': { x: 311, y: 478, width: 16, height: 16 },\r\n  'explosion-left-4': { x: 294, y: 478, width: 16, height: 16 },\r\n  'explosion-left-5': { x: 277, y: 478, width: 16, height: 16 },\r\n  'explosion-right-1': { x: 294, y: 512, width: 16, height: 16 },\r\n  'explosion-right-2': { x: 294, y: 529, width: 16, height: 16 },\r\n  'explosion-right-3': { x: 294, y: 546, width: 16, height: 16 },\r\n  'explosion-right-4': { x: 328, y: 512, width: 16, height: 16 },\r\n  'explosion-right-5': { x: 328, y: 529, width: 16, height: 16 },\r\n} as const;\r\n\r\nexport type Tiles = keyof typeof TILES;","import { Sprite } from \"./sprite\";\r\n\r\nexport function drawSprite(\r\n  context: CanvasRenderingContext2D, \r\n  image: HTMLImageElement,\r\n  scale: number,\r\n  spr: Sprite, \r\n  x: number, \r\n  y: number) {\r\n  context.drawImage(image, spr.x, spr.y, spr.width, spr.height, x, y, spr.width * scale, spr.height * scale);\r\n}","import { Tiles, TILES } from \"./constants\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\n\r\nexport class SolidTile implements ICollidable, IPositionable {\r\n  private collisionBox: CollisionBox;\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private readonly _tilekey: Tiles,\r\n    private scale: number,\r\n    private _x: number,\r\n    private _y: number) {\r\n\r\n    this.collisionBox = {\r\n      height: 16 * this.scale,\r\n      width: 16 * this.scale,\r\n      xPos: this._x,\r\n      yPos: this._y\r\n    };\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y\r\n  }\r\n\r\n  public get z(): number {\r\n    return 1;\r\n  }\r\n\r\n  public get tilekey(): Tiles {\r\n    return this._tilekey;\r\n  }\r\n\r\n  public get solid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getCollisionBox(): CollisionBox {\r\n    return this.collisionBox;\r\n  }\r\n\r\n  update(_dt: number, _kl: KeyListener): void { }\r\n\r\n  render(context: CanvasRenderingContext2D): void {\r\n    drawSprite(context, this.image, this.scale, TILES[this._tilekey], this._x, this._y)\r\n  }\r\n}","import { SolidTile } from \"./solid-tile\";\r\nimport { Tiles, TILES } from \"./constants\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { IEntity } from \"./engine/entity\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\n\r\nexport class GameMap implements IEntity, IPositionable {\r\n\r\n  private readonly _map;\r\n  private readonly _floorTile = TILES['floor'];\r\n  private readonly _tileCountX: number;\r\n  private readonly _tileCountY: number;\r\n\r\n  private hasBeenInitialized: boolean = false;\r\n\r\n  constructor(\r\n    private sprite: HTMLImageElement, \r\n    private scale: number, \r\n    screenWidth: number, \r\n    screenHeight: number) { \r\n      this._tileCountX = Math.ceil(screenWidth / (this._floorTile.width * this.scale));\r\n      this._tileCountY = Math.ceil(screenHeight / (this._floorTile.height * this.scale));\r\n      this._map = GameMap.generateMap(this._tileCountY, this._tileCountX);\r\n    } \r\n\r\n  public get x(): number {\r\n    return 0;\r\n  }\r\n\r\n  public get y(): number {\r\n    return 0;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 0;\r\n  }\r\n\r\n  update(_dt: number, _kl: KeyListener, _ch: CollisionManager, em: EntityManager, _pm: PositionManager): void {\r\n    if(!this.hasBeenInitialized) {\r\n      for (let y = 0; y < this._tileCountY; y++) {\r\n        for (let x = 0; x < this._tileCountX; x++) {\r\n          if(this._map[y][x] === 'brick') {\r\n            em.addEntity(new SolidTile(this.sprite, 'brick',this.scale, x * this.scale * 16, y * this.scale * 16));\r\n          }\r\n\r\n          if(this._map[y][x] === 'unbreakable-brick') {\r\n            em.addEntity(new SolidTile(this.sprite, 'unbreakable-brick', this.scale, x * this.scale * 16, y * this.scale * 16));\r\n          }\r\n        }\r\n      }\r\n\r\n      this.hasBeenInitialized = true;\r\n    }\r\n  }\r\n\r\n  public render(context: CanvasRenderingContext2D) {\r\n    this.drawFloor(context, this.sprite);\r\n  }\r\n\r\n  private drawFloor(\r\n    context: CanvasRenderingContext2D, \r\n    image: HTMLImageElement) {\r\n\r\n    for (let y = 0; y < this._tileCountY; y++) {\r\n      for (let x = 0; x < this._tileCountX; x++) {\r\n        drawSprite(context, image, this.scale, TILES['floor'], x * this._floorTile.width * this.scale, y * this._floorTile.height * this.scale);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static generateEmptyMap(rows: number, columns: number): Tiles[][] {\r\n    const map: Tiles[][] = new Array(rows);\r\n  \r\n    for (let i = 0; i < map.length; i++) {\r\n      map[i] = new Array(columns);\r\n    }\r\n  \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n        map[y][x] = 'floor';\r\n      }\r\n    }\r\n  \r\n    return map;\r\n  }\r\n  \r\n  private static generateMapWithUnbreakableWalls(rows: number, columns: number): Tiles[][] {\r\n    const emptyMap = GameMap.generateEmptyMap(rows, columns);\r\n  \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n  \r\n        if (x === 0 || y === 0 || y === rows - 1 || x === columns - 1) {\r\n          emptyMap[y][x] = 'unbreakable-brick';\r\n        }\r\n  \r\n        if (x % 2 === 0 && y % 2 === 0) {\r\n          emptyMap[y][x] = 'unbreakable-brick';\r\n        }\r\n      }\r\n    }\r\n  \r\n    return emptyMap;\r\n  }\r\n  \r\n  private static generateMap(rows: number, columns: number): Tiles[][] {\r\n    const mapWithWalls = GameMap.generateMapWithUnbreakableWalls(rows, columns);\r\n  \r\n    const omittedTiles = [\r\n      // Top Left\r\n      [1, 1],\r\n      [2, 1],\r\n      [1, 2],\r\n  \r\n      // Top Right\r\n      [columns - 2, 1],\r\n      [columns - 3, 1],\r\n      [columns - 2, 2],\r\n  \r\n      // Bottom Left\r\n      [1, rows - 2],\r\n      [2, rows - 2],\r\n      [1, rows - 3],\r\n  \r\n      // Bottom Right\r\n      [columns - 2, rows - 2],\r\n      [columns - 3, rows - 2],\r\n      [columns - 2, rows - 3]\r\n    ];\r\n  \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n        const putBreakableWall = Math.random() > 0.2;\r\n  \r\n        if (mapWithWalls[y][x] !== 'floor') {\r\n          continue;\r\n        }\r\n  \r\n        if (putBreakableWall) {\r\n          mapWithWalls[y][x] = 'brick'\r\n        }\r\n      }\r\n    }\r\n  \r\n    for (const [x, y] of omittedTiles) {\r\n      mapWithWalls[y][x] = 'floor';\r\n    }\r\n  \r\n    return mapWithWalls;\r\n  }\r\n}\r\n\r\n","import { Tiles, TILES } from \"./constants\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\n\r\nexport type ExplosionAnimation =\r\n  | 'center'\r\n  | 'horizontal'\r\n  | 'vertical'\r\n  | 'left'\r\n  | 'right'\r\n  | 'top'\r\n  | 'bottom'\r\n\r\nexport class Explosion implements IPositionable, ICollidable {\r\n  private readonly _frames: { [anim in ExplosionAnimation]: Tiles[] } = {\r\n    center: [\r\n      'explosion-center-1',\r\n      'explosion-center-2',\r\n      'explosion-center-3',\r\n      'explosion-center-4',\r\n      'explosion-center-5'\r\n    ],\r\n    horizontal: [\r\n      'explosion-horizontal-1',\r\n      'explosion-horizontal-2',\r\n      'explosion-horizontal-3',\r\n      'explosion-horizontal-4',\r\n      'explosion-horizontal-5',\r\n    ],\r\n    vertical: [\r\n      'explosion-vertical-1',\r\n      'explosion-vertical-2',\r\n      'explosion-vertical-3',\r\n      'explosion-vertical-4',\r\n      'explosion-vertical-5',\r\n    ],\r\n    left: [\r\n      'explosion-left-1',\r\n      'explosion-left-2',\r\n      'explosion-left-3',\r\n      'explosion-left-4',\r\n      'explosion-left-5',\r\n    ],\r\n    right: [\r\n      'explosion-right-1',\r\n      'explosion-right-2',\r\n      'explosion-right-3',\r\n      'explosion-right-4',\r\n      'explosion-right-5',\r\n    ],\r\n    top: [],\r\n    bottom: [],\r\n  };\r\n\r\n  private msInCurrentFrame: number = 0;\r\n  private msPerFrame: number = 50;\r\n  private _frameIndex: number = 0;\r\n\r\n  private currentMs: number = 0;\r\n  private readonly keepAliveForMs: number = 250;\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private readonly scale: number,\r\n    private _x: number,\r\n    private _y: number,\r\n    private readonly animDirection: ExplosionAnimation\r\n  ) {\r\n\r\n  }\r\n\r\n  public get solid(): boolean {\r\n    return false;\r\n  }\r\n\r\n  public getCollisionBox(): CollisionBox {\r\n    return {\r\n      height: 8 * this.scale,\r\n      width: 8 * this.scale,\r\n      xPos: this.x + 4 * this.scale,\r\n      yPos: this.y + 4 * this.scale\r\n    }\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 5;\r\n  }\r\n\r\n\r\n  update(dt: number, kl: KeyListener, ch: CollisionManager, em: EntityManager, pm: PositionManager): void {\r\n    this.currentMs += dt * 1000;\r\n    this.msInCurrentFrame += dt * 1000;\r\n\r\n    if (this.msInCurrentFrame >= this.msPerFrame) {\r\n      this.msInCurrentFrame -= this.msPerFrame;\r\n      this._frameIndex = (this._frameIndex + 1) % this._frames[this.animDirection].length;\r\n    }\r\n\r\n    if (this.currentMs >= this.keepAliveForMs) {\r\n      em.removeEntity(this);\r\n    }\r\n  }\r\n\r\n  render(context: CanvasRenderingContext2D): void {\r\n    drawSprite(context, this.image, this.scale, TILES[this._frames[this.animDirection][this._frameIndex]], this.x, this.y);\r\n  }\r\n}","import { SolidTile } from \"./solid-tile\";\r\nimport { Tiles, TILES } from \"./constants\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { IEntity } from \"./engine/entity\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\nimport { Explosion, ExplosionAnimation } from \"./explosion\";\r\nimport { Player } from \"./player\";\r\n\r\nexport class Bomb implements IEntity, IPositionable, ICollidable {\r\n  private readonly _frames: Tiles[] = ['s-bomb', 'm-bomb', 'l-bomb'];\r\n  private _currentFrame: number = 0;\r\n  private _solid: boolean = false;\r\n  private _exploded: boolean = false;\r\n\r\n  private msInCurrentFrame: number = 0;\r\n  private msPerFrame: number = 300;\r\n\r\n  private currentExplosionTimeInMs: number = 0;\r\n  private readonly explosionTimeInMs: number = this.msPerFrame * this._frames.length * 2;\r\n\r\n  private _incrementing: boolean = true;\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private scale: number,\r\n    private _x: number,\r\n    private _y: number,\r\n    private readonly range: number\r\n  ) { }\r\n\r\n  public get solid(): boolean {\r\n    return this._solid;\r\n  }\r\n\r\n  public get exploded(): boolean {\r\n    return this._exploded;\r\n  }\r\n\r\n  public getCollisionBox(): CollisionBox {\r\n    const width = 16 * this.scale;\r\n    const height = 16 * this.scale;\r\n    return {\r\n      xPos: this.x + width / 4,\r\n      yPos: this.y + height / 4,\r\n      width: width / 2,\r\n      height: height / 2\r\n    }\r\n  }\r\n\r\n  public update(dt: number, _kl: KeyListener, ch: CollisionManager, em: EntityManager, _pm: PositionManager): void {\r\n    this.notSolidUntilPlayerMovesOutside(ch);\r\n\r\n    this.msInCurrentFrame += dt * 1000;\r\n    this.currentExplosionTimeInMs += dt * 1000;\r\n\r\n    if (this.currentExplosionTimeInMs >= this.explosionTimeInMs) {\r\n      em.removeEntity(this);\r\n      this._exploded = true;\r\n\r\n      const startingX = Math.floor(this.x);\r\n      const startingY = Math.floor(this.y);\r\n      this.explosionLogic(ch, em, startingX, startingY, 1, 0);\r\n      this.explosionLogic(ch, em, startingX, startingY, -1, 0);\r\n      this.explosionLogic(ch, em, startingX, startingY, 0, 1);\r\n      this.explosionLogic(ch, em, startingX, startingY, 0, -1);\r\n    }\r\n\r\n    if (this.msInCurrentFrame >= this.msPerFrame) {\r\n      this.msInCurrentFrame -= this.msPerFrame;\r\n\r\n      if (this._currentFrame === this._frames.length - 1) {\r\n        this._incrementing = false;\r\n      }\r\n\r\n      if (this._currentFrame === 0) {\r\n        this._incrementing = true;\r\n      }\r\n\r\n      if (this._incrementing) {\r\n        this._currentFrame += 1;\r\n      } else {\r\n        this._currentFrame -= 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  private static getCellsToPutExplosions(ch: CollisionManager,\r\n    startingX: number,\r\n    startingY: number,\r\n    tilesize: number,\r\n    scale: number,\r\n    rangeMax: number,\r\n    iterationsMax: number,\r\n    directionX: number,\r\n    directionY: number): [number, number, IEntity[]][] {\r\n    const result: [number, number, IEntity[]][] = [];\r\n    const width = tilesize * scale;\r\n    const height = tilesize * scale;\r\n\r\n    let box: CollisionBox = {\r\n      xPos: startingX + width / 4,\r\n      yPos: startingY + height / 4,\r\n      width: width / 2,\r\n      height: height / 2\r\n    };\r\n    let collisions = ch.findCollisions(box);\r\n    let iterationCount = 0;\r\n    let isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n    let brickFound = false;\r\n\r\n    while (\r\n      !isCollisionWithUnbreakable &&\r\n      iterationCount <= iterationsMax &&\r\n      iterationCount <= rangeMax &&\r\n      !brickFound) {\r\n      let element: [number, number, IEntity[]] = [startingX, startingY, []];\r\n\r\n      for (const { with: collidable } of collisions) {\r\n        if (collidable instanceof SolidTile && collidable.tilekey === 'brick') {\r\n          element[2].push(collidable);\r\n          brickFound = true;\r\n        }\r\n\r\n        if (collidable instanceof Player) {\r\n          element[2].push(collidable);\r\n        }\r\n      }\r\n\r\n      startingX += tilesize * scale * directionX;\r\n      startingY += tilesize * scale * directionY;\r\n\r\n      box = {\r\n        xPos: startingX + width / 4,\r\n        yPos: startingY + height / 4,\r\n        width: width / 2,\r\n        height: height / 2\r\n      };\r\n\r\n      collisions = ch.findCollisions(box);\r\n      isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n      brickFound = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'brick');\r\n\r\n      iterationCount++;\r\n      result.push(element);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private explosionLogic(\r\n    ch: CollisionManager,\r\n    em: EntityManager,\r\n    startingX: number,\r\n    startingY: number,\r\n    directionX: -1 | 0 | 1,\r\n    directionY: -1 | 0 | 1) {\r\n\r\n    const maxIteration = 10;\r\n    let iterationCount = 0;\r\n    let currentAnimDirection: ExplosionAnimation = 'center';\r\n    let explosion = new Explosion(this.image, this.scale, startingX, startingY, currentAnimDirection)\r\n    let collisions = ch.findCollisions(explosion);\r\n    let isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n    let brickFound = false;\r\n\r\n    while (!isCollisionWithUnbreakable &&\r\n      iterationCount <= maxIteration &&\r\n      iterationCount <= this.range &&\r\n      !brickFound) {\r\n\r\n      em.addEntity(explosion);\r\n\r\n      for (const { with: collidable } of collisions) {\r\n        if (collidable instanceof SolidTile && collidable.tilekey === 'brick') {\r\n          em.removeEntity(collidable);\r\n          brickFound = true;\r\n        }\r\n\r\n        if (collidable instanceof Player) {\r\n          em.removeEntity(collidable);\r\n        }\r\n      }\r\n\r\n      startingX += 16 * this.scale * directionX;\r\n      startingY += 16 * this.scale * directionY;\r\n\r\n      explosion = new Explosion(this.image, this.scale, startingX, startingY, currentAnimDirection)\r\n\r\n      collisions = ch.findCollisions(explosion);\r\n      isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n      let temp: boolean = brickFound;\r\n      brickFound = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'brick');\r\n      iterationCount++;\r\n\r\n      if (isCollisionWithUnbreakable || iterationCount >= maxIteration || iterationCount >= this.range || brickFound) {\r\n        if (directionX === 1) {\r\n          currentAnimDirection = 'right'\r\n        }\r\n\r\n        if (directionX === -1) {\r\n          currentAnimDirection = 'left'\r\n        }\r\n      } else {\r\n        if (directionX !== 0 && directionY === 0) {\r\n          currentAnimDirection = 'horizontal';\r\n        }\r\n\r\n        if (directionY !== 0 && directionX === 0) {\r\n          currentAnimDirection = 'vertical';\r\n        }\r\n      }\r\n      brickFound = temp;\r\n      explosion = new Explosion(this.image, this.scale, startingX, startingY, currentAnimDirection)\r\n    }\r\n  }\r\n\r\n\r\n  private notSolidUntilPlayerMovesOutside(ch: CollisionManager) {\r\n    if (this.solid) {\r\n      return;\r\n    }\r\n\r\n    const collisionWithPlayer =\r\n      ch.findCollisions(this)\r\n        .some(x => x.with instanceof Player);\r\n\r\n    if (!collisionWithPlayer) {\r\n      this._solid = true;\r\n    }\r\n  }\r\n\r\n  public render(context: CanvasRenderingContext2D): void {\r\n    drawSprite(context, this.image, this.scale, TILES[this._frames[this._currentFrame]], this._x, this._y)\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 1;\r\n  }\r\n\r\n}","import { Spritesheet } from \"./spritesheet\";\r\n\r\nexport class GameAnimation {\r\n  private currentFrameIndex: number = 0;\r\n  private msInCurrentFrame: number = 0;\r\n  private currentXIndex: number = 0;\r\n  private currentYIndex: number = 0;\r\n\r\n  constructor(\r\n    private spritesheet: Spritesheet,\r\n    private frameIndexes: [number, number][],\r\n    private msPerFrame: number\r\n  ){ }\r\n\r\n  public update(delta: number) {\r\n    this.msInCurrentFrame += delta * 1000;\r\n    if(this.msInCurrentFrame >= this.msPerFrame) {\r\n      this.msInCurrentFrame -= this.msPerFrame;\r\n      this.currentFrameIndex = (this.currentFrameIndex + 1) % this.frameIndexes.length;\r\n    }\r\n\r\n    const [xIndex, yIndex] = this.frameIndexes[this.currentFrameIndex];\r\n    this.currentXIndex = xIndex;\r\n    this.currentYIndex = yIndex;\r\n  }\r\n\r\n  public render(\r\n    context: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) {\r\n    this.spritesheet.render(\r\n      context,\r\n      this.currentXIndex,\r\n      this.currentYIndex,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}","export class Spritesheet {\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private spriteWidth: number,\r\n    private spriteHeight: number\r\n  ) { }\r\n\r\n  public render(\r\n    context: CanvasRenderingContext2D,\r\n    xIndex: number,\r\n    yIndex: number,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) {\r\n    context.drawImage(\r\n      this.image,\r\n      xIndex * this.spriteWidth,\r\n      yIndex * this.spriteHeight,\r\n      this.spriteWidth,\r\n      this.spriteHeight,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}","import { Bomb } from \"./bomb\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { GameAnimation } from \"./engine/game-animation\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\nimport { Spritesheet } from \"./engine/spritesheet\";\r\nimport { ControlMapping } from \"./player-controls\";\r\n\r\nenum Direction {\r\n  Up,\r\n  Right,\r\n  Down,\r\n  Left\r\n}\r\n\r\ntype PlayerAnimations = {\r\n  'idle-up': GameAnimation,\r\n  'idle-right': GameAnimation,\r\n  'idle-down': GameAnimation,\r\n  'idle-left': GameAnimation,\r\n  'walking-up': GameAnimation,\r\n  'walking-right': GameAnimation,\r\n  'walking-down': GameAnimation,\r\n  'walking-left': GameAnimation,\r\n}\r\n\r\nexport class Player implements IPositionable, ICollidable {\r\n  private maxAmountOfBombs: number = 1;\r\n  private placedBombs: Bomb[] = [];\r\n  private bombRange: number = 2;\r\n\r\n  private readonly spritesheet: Spritesheet;\r\n  private readonly playerAnimations: PlayerAnimations;\r\n  private velX = 0;\r\n  private velY = 0;\r\n  private width = 32;\r\n  private height = 32;\r\n  private speed = 200;\r\n  private currentAnimation: GameAnimation;\r\n  private currentDirection: Direction;\r\n\r\n  constructor(\r\n    private _x: number,\r\n    private _y: number,\r\n    playerSpritesheet: HTMLImageElement,\r\n    private bombSpritesheet: HTMLImageElement,\r\n    private scale: number,\r\n    private readonly controlMapping: ControlMapping) {\r\n    this.spritesheet = new Spritesheet(playerSpritesheet, 32, 32);\r\n    this.playerAnimations = {\r\n      'idle-up': new GameAnimation(this.spritesheet, [[0, 0]], 200),\r\n      'idle-right': new GameAnimation(this.spritesheet, [[0, 1]], 200),\r\n      'idle-down': new GameAnimation(this.spritesheet, [[0, 2]], 200),\r\n      'idle-left': new GameAnimation(this.spritesheet, [[0, 3]], 200),\r\n      'walking-up': new GameAnimation(this.spritesheet, [[0, 0], [1, 0], [2, 0]], 200),\r\n      'walking-right': new GameAnimation(this.spritesheet, [[0, 1], [1, 1], [2, 1]], 200),\r\n      'walking-down': new GameAnimation(this.spritesheet, [[0, 2], [1, 2], [2, 2]], 200),\r\n      'walking-left': new GameAnimation(this.spritesheet, [[0, 3], [1, 3], [2, 3]], 200),\r\n    };\r\n    this.currentAnimation = this.playerAnimations['walking-down'];\r\n    this.currentDirection = Direction.Down;\r\n  }\r\n\r\n  public get solid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  public getCollisionBox(): CollisionBox {\r\n    return {\r\n      xPos: this._x + 15,\r\n      yPos: this._y + 47,\r\n      width: this.width,\r\n      height: this.height - 10\r\n    };\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 10;\r\n  }\r\n\r\n  public update(\r\n    dt: number,\r\n    kl: KeyListener,\r\n    ch: CollisionManager,\r\n    em: EntityManager,\r\n    pm: PositionManager) {\r\n\r\n    this.velX = 0;\r\n    this.velY = 0;\r\n    this.placedBombs = this.placedBombs.filter(x => !x.exploded);\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.left)) {\r\n      this.velX = -this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.right)) {\r\n      this.velX = this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.up)) {\r\n      this.velY = -this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.down)) {\r\n      this.velY = this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.bomb) &&\r\n      this.placedBombs.length < this.maxAmountOfBombs) {\r\n      const collisionBox = this.getCollisionBox();\r\n      const gridX = Math.floor((collisionBox.xPos + collisionBox.width / 2) / (16 * this.scale)) * 16 * this.scale\r\n      const gridY = Math.floor((collisionBox.yPos) / (16 * this.scale)) * 16 * this.scale\r\n\r\n      if (!pm.getPositionablesAt(gridX, gridY).some(x => x instanceof Bomb)) {\r\n        const bomb = new Bomb(this.bombSpritesheet, this.scale, gridX, gridY, this.bombRange);\r\n        em.addEntity(bomb);\r\n        this.placedBombs.push(bomb);\r\n      }\r\n    }\r\n\r\n    if (this.velX !== 0 && this.velY !== 0) {\r\n      const lkp = kl.lastKeyPressed;\r\n      if (this.controlMapping.left.some(x => x === lkp) ||\r\n        this.controlMapping.right.some(x => x === lkp)) {\r\n        this.velY = 0;\r\n      }\r\n\r\n      if (this.controlMapping.up.some(x => x === lkp) ||\r\n        this.controlMapping.down.some(x => x === lkp)) {\r\n        this.velX = 0;\r\n      }\r\n    }\r\n\r\n    const [newVelX, newVelY] = Player.calculateCollision(ch, this, this.velX, this.velY);\r\n\r\n    this.velX = newVelX;\r\n    this.velY = newVelY;\r\n\r\n    this._x += this.velX;\r\n    this._y += this.velY;\r\n    this.currentDirection = Player.getDirection(this.currentDirection, this.velX, this.velY);\r\n    this.currentAnimation = Player.getCurrentAnimation(this.playerAnimations, this.currentDirection, this.velX, this.velY);\r\n    this.currentAnimation.update(dt);\r\n  }\r\n\r\n  public render(context: CanvasRenderingContext2D) {\r\n    this.currentAnimation.render(context, this._x, this._y, 32 * this.scale, 32 * this.scale);\r\n  }\r\n\r\n  private static calculateCollision(ch: CollisionManager, driver: ICollidable, velX: number, velY: number): [number, number] {\r\n    const collisionsX = ch.testMovement(driver, velX, 0);\r\n    let [newVelX, newVelY] = [velX, velY];\r\n\r\n    if (collisionsX.length > 0) {\r\n      newVelX = 0;\r\n    }\r\n\r\n    const collisionsY = ch.testMovement(driver, 0, velY);\r\n\r\n    if (collisionsY.length > 0) {\r\n      newVelY = 0;\r\n    }\r\n\r\n    return [newVelX, newVelY];\r\n  }\r\n\r\n  private static getDirection(currentDirection: Direction, velX: number, velY: number): Direction {\r\n    if (velX > 0) {\r\n      return Direction.Right;\r\n    } else if (velX < 0) {\r\n      return Direction.Left;\r\n    }\r\n\r\n    if (velY > 0) {\r\n      return Direction.Down;\r\n    } else if (velY < 0) {\r\n      return Direction.Up;\r\n    }\r\n\r\n    return currentDirection;\r\n  }\r\n\r\n  private static getCurrentAnimation(playerAnimations: PlayerAnimations, currentDirection: Direction, velX: number, velY: number): GameAnimation {\r\n    if (velX > 0) {\r\n      return playerAnimations['walking-right'];\r\n    } else if (velX < 0) {\r\n      return playerAnimations['walking-left'];\r\n    }\r\n\r\n    if (velY > 0) {\r\n      return playerAnimations['walking-down'];\r\n    } else if (velY < 0) {\r\n      return playerAnimations['walking-up'];\r\n    }\r\n\r\n    switch (currentDirection) {\r\n      case Direction.Right: return playerAnimations['idle-right'];\r\n      case Direction.Left: return playerAnimations['idle-left'];\r\n      case Direction.Down: return playerAnimations['idle-down'];\r\n      case Direction.Up: return playerAnimations['idle-up'];\r\n    };\r\n  }\r\n}","export type PlayerActions =\r\n  | 'up'\r\n  | 'down'\r\n  | 'left'\r\n  | 'right'\r\n  | 'bomb'\r\n\r\nexport type ControlMapping = { [ action in PlayerActions]: string[] };\r\n\r\nexport const CONTROLS: ControlMapping[] = [\r\n  {\r\n    'up': ['w', 'W'],\r\n    'down': ['s', 'S'],\r\n    'left': ['a', 'A'],\r\n    'right': ['d', 'D'],\r\n    'bomb': ['c', 'C']\r\n  },\r\n  {\r\n    'up': ['ArrowUp'],\r\n    'down': ['ArrowDown'],\r\n    'left': ['ArrowLeft'],\r\n    'right': ['ArrowRight'],\r\n    'bomb': ['Enter']\r\n  },\r\n]\r\n","import { CollisionManager } from \"./engine/collision-manager\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { Game } from \"./engine/game\";\r\nimport { IGameLoop } from \"./engine/game-loop\";\r\nimport { loadImageFromUrl } from \"./engine/image-utils\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { GameMap } from \"./game-map\";\r\nimport { Player } from \"./player\";\r\nimport { CONTROLS } from \"./player-controls\";\r\n\r\nexport class BombermanGame extends Game {\r\n  private readonly tilesize: number = 16;\r\n\r\n  constructor(\r\n    context: CanvasRenderingContext2D,\r\n    width: number,\r\n    height: number,\r\n    keyListener: KeyListener,\r\n    entityManager: EntityManager,\r\n    collisionHandler: CollisionManager,\r\n    positionManager: PositionManager,\r\n    gameLoop: IGameLoop\r\n  ) {\r\n    super(\r\n      width,\r\n      height,\r\n      context,\r\n      keyListener,\r\n      entityManager,\r\n      collisionHandler,\r\n      positionManager,\r\n      gameLoop\r\n    );\r\n  }\r\n\r\n  protected override async setup(): Promise<void> {\r\n    super.setup();\r\n    const tileset = await loadImageFromUrl('sprites/bomberman-tileset.png');\r\n    const map = new GameMap(tileset, this._scale, this.width, this.height);\r\n    const player = new Player(\r\n      this.tilesize * this._scale, \r\n      this.tilesize * this._scale * .5, \r\n      await loadImageFromUrl('sprites/bomberman-atlas.png'), \r\n      tileset, \r\n      this._scale,\r\n      CONTROLS[0]);\r\n      \r\n    const player2 = new Player(\r\n      this.tilesize * this._scale * ((this.width / (this.tilesize * this._scale)) - 2), \r\n      this.tilesize * this._scale * .5, \r\n      await loadImageFromUrl('sprites/bomberman-atlas.png'), \r\n      tileset, \r\n      this._scale,\r\n      CONTROLS[1]);\r\n\r\n    this.addEntity(map);\r\n    this.addEntity(player);\r\n    this.addEntity(player2);\r\n  }\r\n}","import { ICollidable } from \"./collidable\";\r\nimport { Collision } from \"./collision\";\r\nimport { CollisionBox } from \"./collision-box\";\r\nimport { IEntity } from \"./entity\";\r\n\r\nexport class CollisionManager {\r\n  private collidables: ICollidable[] = [];\r\n\r\n  public addCollidable(collidable: ICollidable) {\r\n    this.collidables.push(collidable);\r\n  }\r\n\r\n  public removeCollidable(collidable: ICollidable) {\r\n    const index = this.collidables.findIndex(x => x === collidable);\r\n    this.collidables.splice(index, 1);\r\n  }\r\n\r\n  public testMovement(driverCollidable: ICollidable, velX: number, velY: number): Collision[] {\r\n    return this.findCollisions(driverCollidable, velX, velY).filter(x => x.with.solid);\r\n  }\r\n\r\n  public findCollisions(driverCollidable: ICollidable | CollisionBox, xOffset: number = 0, yOffset: number = 0): Collision[] {\r\n    const result = [];\r\n\r\n    for (const collidable of this.collidables) {\r\n      const collision = this.findCollision(driverCollidable, collidable, xOffset, yOffset);\r\n      if (collision) {\r\n        result.push(collision);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private findCollision(\r\n    driverCollidableOrBox: ICollidable | CollisionBox,\r\n    otherCollidable: ICollidable,\r\n    xOffset: number = 0,\r\n    yOffset: number = 0): Collision | null {\r\n\r\n    let driverCollisionBox: CollisionBox;\r\n\r\n    if (this.isCollidable(driverCollidableOrBox)) {\r\n      if (driverCollidableOrBox === otherCollidable) {\r\n        return null;\r\n      } else {\r\n        driverCollisionBox = driverCollidableOrBox.getCollisionBox();\r\n      }\r\n    } else {\r\n      driverCollisionBox = driverCollidableOrBox;\r\n    }\r\n\r\n    driverCollisionBox.xPos += xOffset;\r\n    driverCollisionBox.yPos += yOffset;\r\n    const collidableCollisionBox = otherCollidable.getCollisionBox();\r\n\r\n    const rightCollision =\r\n      driverCollisionBox.xPos <= collidableCollisionBox.xPos &&\r\n      driverCollisionBox.xPos + driverCollisionBox.width >= collidableCollisionBox.xPos;\r\n\r\n    const leftCollision =\r\n      collidableCollisionBox.xPos <= driverCollisionBox.xPos &&\r\n      collidableCollisionBox.xPos + collidableCollisionBox.width >= driverCollisionBox.xPos;\r\n\r\n    const topCollision =\r\n      driverCollisionBox.yPos <= collidableCollisionBox.yPos &&\r\n      driverCollisionBox.yPos + driverCollisionBox.height >= collidableCollisionBox.yPos;\r\n\r\n    const bottomCollision =\r\n      collidableCollisionBox.yPos <= driverCollisionBox.yPos &&\r\n      collidableCollisionBox.yPos + collidableCollisionBox.height >= driverCollisionBox.yPos;\r\n\r\n    if ((rightCollision || leftCollision) && (topCollision || bottomCollision)) {\r\n      return {\r\n        with: otherCollidable,\r\n        bottom: bottomCollision,\r\n        left: leftCollision,\r\n        right: rightCollision,\r\n        top: topCollision\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  public render(context: CanvasRenderingContext2D) {\r\n    for (const collidable of this.collidables) {\r\n      const box = collidable.getCollisionBox();\r\n      context.strokeStyle = 'blue';\r\n      context.lineWidth = 3;\r\n      context.strokeRect(box.xPos, box.yPos, box.width, box.height);\r\n    }\r\n  }\r\n\r\n  public isCollidable(entity: IEntity | CollisionBox | ICollidable): entity is ICollidable {\r\n    return (entity as ICollidable).getCollisionBox !== undefined;\r\n  }\r\n}","import { CollisionManager } from \"./collision-manager\";\r\nimport { IEntity } from \"./entity\";\r\nimport { PositionManager } from \"./position-manager\";\r\n\r\nexport class EntityManager {\r\n  private readonly entities: IEntity[] = [];\r\n\r\n  constructor(\r\n    private readonly collisionManager: CollisionManager,\r\n    private readonly positionManager: PositionManager) {\r\n  }\r\n\r\n  public addEntity(entity: IEntity): void {\r\n    this.entities.push(entity);\r\n\r\n    if (this.collisionManager.isCollidable(entity)) {\r\n      this.collisionManager.addCollidable(entity);\r\n    }\r\n\r\n    if (this.positionManager.isPositionable(entity)) {\r\n      this.positionManager.addPositionable(entity);\r\n    }\r\n  }\r\n\r\n  public removeEntity(entity: IEntity): void {\r\n    const index = this.entities.findIndex(x => x === entity);\r\n    this.entities.splice(index, 1);\r\n\r\n    if(this.collisionManager.isCollidable(entity)) {\r\n      this.collisionManager.removeCollidable(entity);\r\n    }\r\n\r\n    if(this.positionManager.isPositionable(entity)) {\r\n      this.positionManager.removePositionable(entity);\r\n    }\r\n  }\r\n\r\n  public getEntities(): IEntity[] {\r\n    return this.entities;\r\n  }\r\n}","export function getTimestampMs(): number {\r\n  return (new Date).getTime();\r\n}","import { getTimestampMs } from \"./time-utils\";\r\n\r\ntype UpdateFunction = (dt: number) => void;\r\ntype RenderFunction = () => void;\r\n\r\nexport interface IGameLoop {\r\n  run: (updateFunction: UpdateFunction, renderFunction: RenderFunction) => void;\r\n}\r\n\r\nexport class WindowDomGameLoop implements IGameLoop {\r\n  private _sumDeltas: number = 0;\r\n  private _frames: number = 0;\r\n  private _lastTime: number = 0;\r\n  private updateFunction: UpdateFunction | undefined;\r\n  private renderFunction: RenderFunction | undefined;\r\n\r\n  constructor() { }\r\n\r\n  public run(updateFunction: UpdateFunction, renderFunction: RenderFunction) {\r\n    this._lastTime = getTimestampMs();\r\n    this.updateFunction = updateFunction;\r\n    this.renderFunction = renderFunction;\r\n\r\n    window.requestAnimationFrame(() => {\r\n      this.loop();\r\n    });\r\n  }\r\n\r\n  private loop() {\r\n    if (!this.updateFunction || !this.renderFunction) {\r\n      throw Error('Game loop was not initialized');\r\n    }\r\n    const currentTime = getTimestampMs();\r\n    const dt = (currentTime - this._lastTime) / 1000;\r\n    this._lastTime = currentTime;\r\n    this._sumDeltas += dt;\r\n    this._frames += 1;\r\n\r\n    if(this._sumDeltas >= 1) {\r\n      this._sumDeltas = 0;\r\n      this._frames = 0;\r\n    }\r\n\r\n    this.updateFunction(dt);\r\n    this.renderFunction();\r\n    window.requestAnimationFrame(() => this.loop());\r\n  }\r\n}","export class KeyListener {\r\n  private _keyStates: { [key: string]: boolean } = {};\r\n  private _lastKeyPressed: string | undefined;\r\n\r\n  constructor(private canvasEl: HTMLCanvasElement) { }\r\n\r\n  public async setup() {\r\n    this.canvasEl.addEventListener('keydown', e => {\r\n      e.preventDefault();\r\n      this._keyStates[e.key] = true;\r\n      this._lastKeyPressed = e.key;\r\n    })\r\n\r\n    this.canvasEl.addEventListener('keyup', e => {\r\n      e.preventDefault();\r\n      this._keyStates[e.key] = false;\r\n    });\r\n  }\r\n\r\n  public isKeyDown(key: string): boolean {\r\n    return this._keyStates[key] === true;\r\n  }\r\n\r\n  public isAnyKeyDown(keys: string[]): boolean {\r\n    return keys.some(key => this.isKeyDown(key));\r\n  }\r\n\r\n  public get lastKeyPressed(): string | undefined {\r\n    return this._lastKeyPressed;\r\n  }\r\n}","import { IEntity } from \"./entity\";\r\nimport { IPositionable } from \"./positionable\";\r\n\r\nexport class PositionManager {\r\n  private readonly positionables: IPositionable[] = [];\r\n\r\n  constructor(){ }\r\n\r\n  public addPositionable(positionable: IPositionable): void {\r\n    this.positionables.push(positionable);\r\n  }\r\n\r\n  public removePositionable(positionable: IPositionable) {\r\n    const index = this.positionables.findIndex(x => x === positionable);\r\n    this.positionables.splice(index, 1);\r\n  }\r\n\r\n  public getPositionables(): IPositionable[] {\r\n    return this.positionables;\r\n  }\r\n\r\n  public getPositionablesAt(x: number, y: number): IPositionable[] {\r\n    return this.positionables.filter(p => p.x === x && p.y === y);\r\n  }\r\n\r\n  public getPositionablesBetween(x0: number, y0: number, x1: number, y1: number): IPositionable[] {\r\n    return this.positionables.filter(p => \r\n      p.x >= x0 && p.y >= y0 &&\r\n      p.x <= x1 && p.y <= y1);\r\n  }\r\n\r\n  public isPositionable(entity: IEntity | IPositionable): entity is IPositionable {\r\n    const positionable = entity as IPositionable;\r\n    return positionable.x !== undefined && positionable.y !== undefined;\r\n  }\r\n}","import { BombermanGame } from \"./bomberman-game\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { WindowDomGameLoop } from \"./engine/game-loop\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\n\r\n\r\nasync function bootstrap() {\r\n  const canvasEl = document.getElementById('game-canvas') as HTMLCanvasElement | null;\r\n\r\n  if (!canvasEl) {\r\n    console.error('Couldn\\'t find the canvas element');\r\n    return;\r\n  }\r\n\r\n  const context = canvasEl.getContext('2d');\r\n  \r\n  if(!context) {\r\n    console.error('Couldn\\'t get the context');\r\n    return;\r\n  }\r\n\r\n  canvasEl.focus();\r\n  context.imageSmoothingEnabled = false;\r\n\r\n  const collisionManager = new CollisionManager();\r\n  const positionManager = new PositionManager();\r\n\r\n  const game = new BombermanGame(\r\n    context, \r\n    canvasEl.width, \r\n    canvasEl.height, \r\n    new KeyListener(canvasEl),\r\n    new EntityManager(collisionManager, positionManager),\r\n    collisionManager,\r\n    positionManager,\r\n    new WindowDomGameLoop());\r\n\r\n  await game.run();\r\n}\r\n\r\nbootstrap();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}