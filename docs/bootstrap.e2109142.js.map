{"version":3,"sources":["engine/game.ts","engine/image-utils.ts","constants.ts","engine/draw-utils.ts","solid-tile.ts","game-map.ts","explosion.ts","bomb.ts","engine/game-animation.ts","engine/spritesheet.ts","player.ts","player-controls.ts","bomberman-game.ts","engine/collision-manager.ts","engine/entity-manager.ts","engine/time-utils.ts","engine/game-loop.ts","engine/key-listener.ts","engine/position-manager.ts","bootstrap.ts","../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"bootstrap.e2109142.js","sourceRoot":"..","sourcesContent":["import { CollisionManager } from \"./collision-manager\";\r\nimport { IEntity } from \"./entity\";\r\nimport { IGameLoop } from \"./game-loop\";\r\nimport { KeyListener } from \"./key-listener\";\r\nimport { EntityManager } from \"./entity-manager\";\r\nimport { PositionManager } from \"./position-manager\";\r\n\r\nexport abstract class Game {\r\n  protected readonly _scale: number = 3;\r\n\r\n  private showCollisionBoxes: boolean = false;\r\n  private activateDebugMode: (dt: number) => void;\r\n\r\n  constructor(\r\n    protected width: number,\r\n    protected height: number,\r\n    private context: CanvasRenderingContext2D,\r\n    private keyListener: KeyListener,\r\n    private entityManager: EntityManager,\r\n    private collisionManager: CollisionManager,\r\n    private positionManager: PositionManager,\r\n    private gameLoop: IGameLoop) { \r\n      this.activateDebugMode = debounce(\r\n        200,\r\n        () => this.keyListener.isKeyDown('F1'),\r\n        () => this.showCollisionBoxes = !this.showCollisionBoxes);\r\n    }\r\n\r\n  public async run() {\r\n    await this.setup();\r\n    this.gameLoop.run(\r\n      (dt) => this.update(\r\n        dt, \r\n        this.keyListener, \r\n        this.collisionManager, \r\n        this.entityManager, \r\n        this.positionManager),\r\n      () => this.render(this.context)\r\n    );\r\n  }\r\n\r\n  protected async setup(): Promise<void> {\r\n    const promises = [this.keyListener.setup()];\r\n    Promise.all(promises);\r\n  };\r\n\r\n  protected addEntity(entity: IEntity) {\r\n    this.entityManager.addEntity(entity);\r\n  }\r\n\r\n  private update(\r\n    dt: number, \r\n    kl: KeyListener, \r\n    cl: CollisionManager, \r\n    em: EntityManager, \r\n    pm: PositionManager) {\r\n    for (const entity of this.entityManager.getEntities()) {\r\n      entity.update(dt, kl, cl, em, pm);\r\n    }\r\n\r\n    this.activateDebugMode(dt);\r\n  }\r\n\r\n  private render(context: CanvasRenderingContext2D) {\r\n    for (const entity of this.positionManager.getPositionables().slice(0).sort((a, b) => a.z - b.z)) {\r\n      entity.render(context);\r\n    }\r\n\r\n    if(this.showCollisionBoxes) {\r\n      this.collisionManager.render(context);\r\n    }\r\n  }\r\n}\r\n\r\nfunction debounce(debounceKeyInputMs: number, condition: () => boolean, action: () => void) {\r\n  let currentDebounceMs = 0;\r\n  let debounce = false;\r\n\r\n  return (dt: number) => {\r\n    currentDebounceMs += dt * 1000;\r\n\r\n    if(currentDebounceMs >= debounceKeyInputMs) {\r\n      debounce = false;\r\n      currentDebounceMs = 0;\r\n    }\r\n\r\n    if(condition() && !debounce) {\r\n      action();\r\n      debounce = true;\r\n      currentDebounceMs = 0;\r\n    }\r\n  }\r\n}","export async function loadImageFromUrl(url: string): Promise<HTMLImageElement> {\r\n  return new Promise(resolve => {\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.onload = () => {\r\n      resolve(img);\r\n    }\r\n  })\r\n}","export const TILES = {\r\n  'floor': { x: 328, y: 461, width: 16, height: 16 },\r\n  'unbreakable-brick': { x: 294, y: 461, width: 16, height: 16 },\r\n  'brick': { x: 311, y: 461, width: 16, height: 16 },\r\n  's-bomb': { x: 379, y: 563, width: 16, height: 16 },\r\n  'm-bomb': { x: 396, y: 563, width: 16, height: 16 },\r\n  'l-bomb': { x: 413, y: 563, width: 16, height: 16 },\r\n  'explosion-center-1': { x: 345, y: 512, width: 16, height: 16 },\r\n  'explosion-center-2': { x: 362, y: 512, width: 16, height: 16 },\r\n  'explosion-center-3': { x: 379, y: 512, width: 16, height: 16 },\r\n  'explosion-center-4': { x: 396, y: 512, width: 16, height: 16 },\r\n  'explosion-center-5': { x: 345, y: 529, width: 16, height: 16 },\r\n  'explosion-horizontal-1': { x: 277, y: 512, width: 16, height: 16 },\r\n  'explosion-horizontal-2': { x: 277, y: 529, width: 16, height: 16 },\r\n  'explosion-horizontal-3': { x: 277, y: 546, width: 16, height: 16 },\r\n  'explosion-horizontal-4': { x: 311, y: 512, width: 16, height: 16 },\r\n  'explosion-horizontal-5': { x: 311, y: 529, width: 16, height: 16 },\r\n  'explosion-vertical-1': { x: 362, y: 529, width: 16, height: 16 },\r\n  'explosion-vertical-2': { x: 379, y: 529, width: 16, height: 16 },\r\n  'explosion-vertical-3': { x: 396, y: 546, width: 16, height: 16 },\r\n  'explosion-vertical-4': { x: 311, y: 546, width: 16, height: 16 },\r\n  'explosion-vertical-5': { x: 328, y: 546, width: 16, height: 16 },\r\n  'explosion-left-1': { x: 345, y: 478, width: 16, height: 16 },\r\n  'explosion-left-2': { x: 328, y: 478, width: 16, height: 16 },\r\n  'explosion-left-3': { x: 311, y: 478, width: 16, height: 16 },\r\n  'explosion-left-4': { x: 294, y: 478, width: 16, height: 16 },\r\n  'explosion-left-5': { x: 277, y: 478, width: 16, height: 16 },\r\n  'explosion-right-1': { x: 294, y: 512, width: 16, height: 16 },\r\n  'explosion-right-2': { x: 294, y: 529, width: 16, height: 16 },\r\n  'explosion-right-3': { x: 294, y: 546, width: 16, height: 16 },\r\n  'explosion-right-4': { x: 328, y: 512, width: 16, height: 16 },\r\n  'explosion-right-5': { x: 328, y: 529, width: 16, height: 16 },\r\n} as const;\r\n\r\nexport type Tiles = keyof typeof TILES;","import { Sprite } from \"./sprite\";\r\n\r\nexport function drawSprite(\r\n  context: CanvasRenderingContext2D, \r\n  image: HTMLImageElement,\r\n  scale: number,\r\n  spr: Sprite, \r\n  x: number, \r\n  y: number) {\r\n  context.drawImage(image, spr.x, spr.y, spr.width, spr.height, x, y, spr.width * scale, spr.height * scale);\r\n}","import { Tiles, TILES } from \"./constants\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\n\r\nexport class SolidTile implements ICollidable, IPositionable {\r\n  private collisionBox: CollisionBox;\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private readonly _tilekey: Tiles,\r\n    private scale: number,\r\n    private _x: number,\r\n    private _y: number) {\r\n\r\n    this.collisionBox = {\r\n      height: 16 * this.scale,\r\n      width: 16 * this.scale,\r\n      xPos: this._x,\r\n      yPos: this._y\r\n    };\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y\r\n  }\r\n\r\n  public get z(): number {\r\n    return 1;\r\n  }\r\n\r\n  public get tilekey(): Tiles {\r\n    return this._tilekey;\r\n  }\r\n\r\n  public get solid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getCollisionBox(): CollisionBox {\r\n    return this.collisionBox;\r\n  }\r\n\r\n  update(_dt: number, _kl: KeyListener): void { }\r\n\r\n  render(context: CanvasRenderingContext2D): void {\r\n    drawSprite(context, this.image, this.scale, TILES[this._tilekey], this._x, this._y)\r\n  }\r\n}","import { SolidTile } from \"./solid-tile\";\r\nimport { Tiles, TILES } from \"./constants\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { IEntity } from \"./engine/entity\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\n\r\nexport class GameMap implements IEntity, IPositionable {\r\n\r\n  private readonly _map;\r\n  private readonly _floorTile = TILES['floor'];\r\n  private readonly _tileCountX: number;\r\n  private readonly _tileCountY: number;\r\n\r\n  private hasBeenInitialized: boolean = false;\r\n\r\n  constructor(\r\n    private sprite: HTMLImageElement, \r\n    private scale: number, \r\n    screenWidth: number, \r\n    screenHeight: number) { \r\n      this._tileCountX = Math.ceil(screenWidth / (this._floorTile.width * this.scale));\r\n      this._tileCountY = Math.ceil(screenHeight / (this._floorTile.height * this.scale));\r\n      this._map = GameMap.generateMap(this._tileCountY, this._tileCountX);\r\n    } \r\n\r\n  public get x(): number {\r\n    return 0;\r\n  }\r\n\r\n  public get y(): number {\r\n    return 0;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 0;\r\n  }\r\n\r\n  update(_dt: number, _kl: KeyListener, _ch: CollisionManager, em: EntityManager, _pm: PositionManager): void {\r\n    if(!this.hasBeenInitialized) {\r\n      for (let y = 0; y < this._tileCountY; y++) {\r\n        for (let x = 0; x < this._tileCountX; x++) {\r\n          if(this._map[y][x] === 'brick') {\r\n            em.addEntity(new SolidTile(this.sprite, 'brick',this.scale, x * this.scale * 16, y * this.scale * 16));\r\n          }\r\n\r\n          if(this._map[y][x] === 'unbreakable-brick') {\r\n            em.addEntity(new SolidTile(this.sprite, 'unbreakable-brick', this.scale, x * this.scale * 16, y * this.scale * 16));\r\n          }\r\n        }\r\n      }\r\n\r\n      this.hasBeenInitialized = true;\r\n    }\r\n  }\r\n\r\n  public render(context: CanvasRenderingContext2D) {\r\n    this.drawFloor(context, this.sprite);\r\n  }\r\n\r\n  private drawFloor(\r\n    context: CanvasRenderingContext2D, \r\n    image: HTMLImageElement) {\r\n\r\n    for (let y = 0; y < this._tileCountY; y++) {\r\n      for (let x = 0; x < this._tileCountX; x++) {\r\n        drawSprite(context, image, this.scale, TILES['floor'], x * this._floorTile.width * this.scale, y * this._floorTile.height * this.scale);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static generateEmptyMap(rows: number, columns: number): Tiles[][] {\r\n    const map: Tiles[][] = new Array(rows);\r\n  \r\n    for (let i = 0; i < map.length; i++) {\r\n      map[i] = new Array(columns);\r\n    }\r\n  \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n        map[y][x] = 'floor';\r\n      }\r\n    }\r\n  \r\n    return map;\r\n  }\r\n  \r\n  private static generateMapWithUnbreakableWalls(rows: number, columns: number): Tiles[][] {\r\n    const emptyMap = GameMap.generateEmptyMap(rows, columns);\r\n  \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n  \r\n        if (x === 0 || y === 0 || y === rows - 1 || x === columns - 1) {\r\n          emptyMap[y][x] = 'unbreakable-brick';\r\n        }\r\n  \r\n        if (x % 2 === 0 && y % 2 === 0) {\r\n          emptyMap[y][x] = 'unbreakable-brick';\r\n        }\r\n      }\r\n    }\r\n  \r\n    return emptyMap;\r\n  }\r\n  \r\n  private static generateMap(rows: number, columns: number): Tiles[][] {\r\n    const mapWithWalls = GameMap.generateMapWithUnbreakableWalls(rows, columns);\r\n  \r\n    const omittedTiles = [\r\n      // Top Left\r\n      [1, 1],\r\n      [2, 1],\r\n      [1, 2],\r\n  \r\n      // Top Right\r\n      [columns - 2, 1],\r\n      [columns - 3, 1],\r\n      [columns - 2, 2],\r\n  \r\n      // Bottom Left\r\n      [1, rows - 2],\r\n      [2, rows - 2],\r\n      [1, rows - 3],\r\n  \r\n      // Bottom Right\r\n      [columns - 2, rows - 2],\r\n      [columns - 3, rows - 2],\r\n      [columns - 2, rows - 3]\r\n    ];\r\n  \r\n    for (let y = 0; y < rows; y++) {\r\n      for (let x = 0; x < columns; x++) {\r\n        const putBreakableWall = Math.random() > 0.2;\r\n  \r\n        if (mapWithWalls[y][x] !== 'floor') {\r\n          continue;\r\n        }\r\n  \r\n        if (putBreakableWall) {\r\n          mapWithWalls[y][x] = 'brick'\r\n        }\r\n      }\r\n    }\r\n  \r\n    for (const [x, y] of omittedTiles) {\r\n      mapWithWalls[y][x] = 'floor';\r\n    }\r\n  \r\n    return mapWithWalls;\r\n  }\r\n}\r\n\r\n","import { Tiles, TILES } from \"./constants\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\n\r\nexport type ExplosionAnimation =\r\n  | 'center'\r\n  | 'horizontal'\r\n  | 'vertical'\r\n  | 'left'\r\n  | 'right'\r\n  | 'top'\r\n  | 'bottom'\r\n\r\nexport class Explosion implements IPositionable, ICollidable {\r\n  private readonly _frames: { [anim in ExplosionAnimation]: Tiles[] } = {\r\n    center: [\r\n      'explosion-center-1',\r\n      'explosion-center-2',\r\n      'explosion-center-3',\r\n      'explosion-center-4',\r\n      'explosion-center-5'\r\n    ],\r\n    horizontal: [\r\n      'explosion-horizontal-1',\r\n      'explosion-horizontal-2',\r\n      'explosion-horizontal-3',\r\n      'explosion-horizontal-4',\r\n      'explosion-horizontal-5',\r\n    ],\r\n    vertical: [\r\n      'explosion-vertical-1',\r\n      'explosion-vertical-2',\r\n      'explosion-vertical-3',\r\n      'explosion-vertical-4',\r\n      'explosion-vertical-5',\r\n    ],\r\n    left: [\r\n      'explosion-left-1',\r\n      'explosion-left-2',\r\n      'explosion-left-3',\r\n      'explosion-left-4',\r\n      'explosion-left-5',\r\n    ],\r\n    right: [\r\n      'explosion-right-1',\r\n      'explosion-right-2',\r\n      'explosion-right-3',\r\n      'explosion-right-4',\r\n      'explosion-right-5',\r\n    ],\r\n    top: [],\r\n    bottom: [],\r\n  };\r\n\r\n  private msInCurrentFrame: number = 0;\r\n  private msPerFrame: number = 50;\r\n  private _frameIndex: number = 0;\r\n\r\n  private currentMs: number = 0;\r\n  private readonly keepAliveForMs: number = 250;\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private readonly scale: number,\r\n    private _x: number,\r\n    private _y: number,\r\n    private readonly animDirection: ExplosionAnimation\r\n  ) {\r\n\r\n  }\r\n\r\n  public get solid(): boolean {\r\n    return false;\r\n  }\r\n\r\n  public getCollisionBox(): CollisionBox {\r\n    return {\r\n      height: 8 * this.scale,\r\n      width: 8 * this.scale,\r\n      xPos: this.x + 4 * this.scale,\r\n      yPos: this.y + 4 * this.scale\r\n    }\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 5;\r\n  }\r\n\r\n\r\n  update(dt: number, kl: KeyListener, ch: CollisionManager, em: EntityManager, pm: PositionManager): void {\r\n    this.currentMs += dt * 1000;\r\n    this.msInCurrentFrame += dt * 1000;\r\n\r\n    if (this.msInCurrentFrame >= this.msPerFrame) {\r\n      this.msInCurrentFrame -= this.msPerFrame;\r\n      this._frameIndex = (this._frameIndex + 1) % this._frames[this.animDirection].length;\r\n    }\r\n\r\n    if (this.currentMs >= this.keepAliveForMs) {\r\n      em.removeEntity(this);\r\n    }\r\n  }\r\n\r\n  render(context: CanvasRenderingContext2D): void {\r\n    drawSprite(context, this.image, this.scale, TILES[this._frames[this.animDirection][this._frameIndex]], this.x, this.y);\r\n  }\r\n}","import { SolidTile } from \"./solid-tile\";\r\nimport { Tiles, TILES } from \"./constants\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { drawSprite } from \"./engine/draw-utils\";\r\nimport { IEntity } from \"./engine/entity\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\nimport { Explosion, ExplosionAnimation } from \"./explosion\";\r\nimport { Player } from \"./player\";\r\n\r\nexport class Bomb implements IEntity, IPositionable, ICollidable {\r\n  private readonly _frames: Tiles[] = ['s-bomb', 'm-bomb', 'l-bomb'];\r\n  private _currentFrame: number = 0;\r\n  private _solid: boolean = false;\r\n  private _exploded: boolean = false;\r\n\r\n  private msInCurrentFrame: number = 0;\r\n  private msPerFrame: number = 300;\r\n\r\n  private currentExplosionTimeInMs: number = 0;\r\n  private readonly explosionTimeInMs: number = this.msPerFrame * this._frames.length * 2;\r\n\r\n  private _incrementing: boolean = true;\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private scale: number,\r\n    private _x: number,\r\n    private _y: number,\r\n    private readonly range: number\r\n  ) { }\r\n\r\n  public get solid(): boolean {\r\n    return this._solid;\r\n  }\r\n\r\n  public get exploded(): boolean {\r\n    return this._exploded;\r\n  }\r\n\r\n  public getCollisionBox(): CollisionBox {\r\n    const width = 16 * this.scale;\r\n    const height = 16 * this.scale;\r\n    return {\r\n      xPos: this.x + width / 4,\r\n      yPos: this.y + height / 4,\r\n      width: width / 2,\r\n      height: height / 2\r\n    }\r\n  }\r\n\r\n  public update(dt: number, _kl: KeyListener, ch: CollisionManager, em: EntityManager, _pm: PositionManager): void {\r\n    this.notSolidUntilPlayerMovesOutside(ch);\r\n\r\n    this.msInCurrentFrame += dt * 1000;\r\n    this.currentExplosionTimeInMs += dt * 1000;\r\n\r\n    if (this.currentExplosionTimeInMs >= this.explosionTimeInMs) {\r\n      em.removeEntity(this);\r\n      this._exploded = true;\r\n\r\n      const startingX = Math.floor(this.x);\r\n      const startingY = Math.floor(this.y);\r\n      this.explosionLogic(ch, em, startingX, startingY, 1, 0);\r\n      this.explosionLogic(ch, em, startingX, startingY, -1, 0);\r\n      this.explosionLogic(ch, em, startingX, startingY, 0, 1);\r\n      this.explosionLogic(ch, em, startingX, startingY, 0, -1);\r\n    }\r\n\r\n    if (this.msInCurrentFrame >= this.msPerFrame) {\r\n      this.msInCurrentFrame -= this.msPerFrame;\r\n\r\n      if (this._currentFrame === this._frames.length - 1) {\r\n        this._incrementing = false;\r\n      }\r\n\r\n      if (this._currentFrame === 0) {\r\n        this._incrementing = true;\r\n      }\r\n\r\n      if (this._incrementing) {\r\n        this._currentFrame += 1;\r\n      } else {\r\n        this._currentFrame -= 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  private static getCellsToPutExplosions(ch: CollisionManager,\r\n    startingX: number,\r\n    startingY: number,\r\n    tilesize: number,\r\n    scale: number,\r\n    rangeMax: number,\r\n    iterationsMax: number,\r\n    directionX: number,\r\n    directionY: number): [number, number, IEntity[]][] {\r\n    const result: [number, number, IEntity[]][] = [];\r\n    const width = tilesize * scale;\r\n    const height = tilesize * scale;\r\n\r\n    let box: CollisionBox = {\r\n      xPos: startingX + width / 4,\r\n      yPos: startingY + height / 4,\r\n      width: width / 2,\r\n      height: height / 2\r\n    };\r\n    let collisions = ch.findCollisions(box);\r\n    let iterationCount = 0;\r\n    let isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n    let brickFound = false;\r\n\r\n    while (\r\n      !isCollisionWithUnbreakable &&\r\n      iterationCount <= iterationsMax &&\r\n      iterationCount <= rangeMax &&\r\n      !brickFound) {\r\n      let element: [number, number, IEntity[]] = [startingX, startingY, []];\r\n\r\n      for (const { with: collidable } of collisions) {\r\n        if (collidable instanceof SolidTile && collidable.tilekey === 'brick') {\r\n          element[2].push(collidable);\r\n          brickFound = true;\r\n        }\r\n\r\n        if (collidable instanceof Player) {\r\n          element[2].push(collidable);\r\n        }\r\n      }\r\n\r\n      startingX += tilesize * scale * directionX;\r\n      startingY += tilesize * scale * directionY;\r\n\r\n      box = {\r\n        xPos: startingX + width / 4,\r\n        yPos: startingY + height / 4,\r\n        width: width / 2,\r\n        height: height / 2\r\n      };\r\n\r\n      collisions = ch.findCollisions(box);\r\n      isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n      brickFound = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'brick');\r\n\r\n      iterationCount++;\r\n      result.push(element);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private explosionLogic(\r\n    ch: CollisionManager,\r\n    em: EntityManager,\r\n    startingX: number,\r\n    startingY: number,\r\n    directionX: -1 | 0 | 1,\r\n    directionY: -1 | 0 | 1) {\r\n\r\n    const maxIteration = 10;\r\n    let iterationCount = 0;\r\n    let currentAnimDirection: ExplosionAnimation = 'center';\r\n    let explosion = new Explosion(this.image, this.scale, startingX, startingY, currentAnimDirection)\r\n    let collisions = ch.findCollisions(explosion);\r\n    let isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n    let brickFound = false;\r\n\r\n    while (!isCollisionWithUnbreakable &&\r\n      iterationCount <= maxIteration &&\r\n      iterationCount <= this.range &&\r\n      !brickFound) {\r\n\r\n      em.addEntity(explosion);\r\n\r\n      for (const { with: collidable } of collisions) {\r\n        if (collidable instanceof SolidTile && collidable.tilekey === 'brick') {\r\n          em.removeEntity(collidable);\r\n          brickFound = true;\r\n        }\r\n\r\n        if (collidable instanceof Player) {\r\n          em.removeEntity(collidable);\r\n        }\r\n      }\r\n\r\n      startingX += 16 * this.scale * directionX;\r\n      startingY += 16 * this.scale * directionY;\r\n\r\n      explosion = new Explosion(this.image, this.scale, startingX, startingY, currentAnimDirection)\r\n\r\n      collisions = ch.findCollisions(explosion);\r\n      isCollisionWithUnbreakable = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'unbreakable-brick');\r\n      let temp: boolean = brickFound;\r\n      brickFound = collisions.some(x => x.with instanceof SolidTile && x.with.tilekey === 'brick');\r\n      iterationCount++;\r\n\r\n      if (isCollisionWithUnbreakable || iterationCount >= maxIteration || iterationCount >= this.range || brickFound) {\r\n        if (directionX === 1) {\r\n          currentAnimDirection = 'right'\r\n        }\r\n\r\n        if (directionX === -1) {\r\n          currentAnimDirection = 'left'\r\n        }\r\n      } else {\r\n        if (directionX !== 0 && directionY === 0) {\r\n          currentAnimDirection = 'horizontal';\r\n        }\r\n\r\n        if (directionY !== 0 && directionX === 0) {\r\n          currentAnimDirection = 'vertical';\r\n        }\r\n      }\r\n      brickFound = temp;\r\n      explosion = new Explosion(this.image, this.scale, startingX, startingY, currentAnimDirection)\r\n    }\r\n  }\r\n\r\n\r\n  private notSolidUntilPlayerMovesOutside(ch: CollisionManager) {\r\n    if (this.solid) {\r\n      return;\r\n    }\r\n\r\n    const collisionWithPlayer =\r\n      ch.findCollisions(this)\r\n        .some(x => x.with instanceof Player);\r\n\r\n    if (!collisionWithPlayer) {\r\n      this._solid = true;\r\n    }\r\n  }\r\n\r\n  public render(context: CanvasRenderingContext2D): void {\r\n    drawSprite(context, this.image, this.scale, TILES[this._frames[this._currentFrame]], this._x, this._y)\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 1;\r\n  }\r\n\r\n}","import { Spritesheet } from \"./spritesheet\";\r\n\r\nexport class GameAnimation {\r\n  private currentFrameIndex: number = 0;\r\n  private msInCurrentFrame: number = 0;\r\n  private currentXIndex: number = 0;\r\n  private currentYIndex: number = 0;\r\n\r\n  constructor(\r\n    private spritesheet: Spritesheet,\r\n    private frameIndexes: [number, number][],\r\n    private msPerFrame: number\r\n  ){ }\r\n\r\n  public update(delta: number) {\r\n    this.msInCurrentFrame += delta * 1000;\r\n    if(this.msInCurrentFrame >= this.msPerFrame) {\r\n      this.msInCurrentFrame -= this.msPerFrame;\r\n      this.currentFrameIndex = (this.currentFrameIndex + 1) % this.frameIndexes.length;\r\n    }\r\n\r\n    const [xIndex, yIndex] = this.frameIndexes[this.currentFrameIndex];\r\n    this.currentXIndex = xIndex;\r\n    this.currentYIndex = yIndex;\r\n  }\r\n\r\n  public render(\r\n    context: CanvasRenderingContext2D,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) {\r\n    this.spritesheet.render(\r\n      context,\r\n      this.currentXIndex,\r\n      this.currentYIndex,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}","export class Spritesheet {\r\n\r\n  constructor(\r\n    private image: HTMLImageElement,\r\n    private spriteWidth: number,\r\n    private spriteHeight: number\r\n  ) { }\r\n\r\n  public render(\r\n    context: CanvasRenderingContext2D,\r\n    xIndex: number,\r\n    yIndex: number,\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number\r\n  ) {\r\n    context.drawImage(\r\n      this.image,\r\n      xIndex * this.spriteWidth,\r\n      yIndex * this.spriteHeight,\r\n      this.spriteWidth,\r\n      this.spriteHeight,\r\n      x,\r\n      y,\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}","import { Bomb } from \"./bomb\";\r\nimport { ICollidable } from \"./engine/collidable\";\r\nimport { CollisionBox } from \"./engine/collision-box\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { GameAnimation } from \"./engine/game-animation\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { IPositionable } from \"./engine/positionable\";\r\nimport { Spritesheet } from \"./engine/spritesheet\";\r\nimport { ControlMapping } from \"./player-controls\";\r\n\r\nenum Direction {\r\n  Up,\r\n  Right,\r\n  Down,\r\n  Left\r\n}\r\n\r\ntype PlayerAnimations = {\r\n  'idle-up': GameAnimation,\r\n  'idle-right': GameAnimation,\r\n  'idle-down': GameAnimation,\r\n  'idle-left': GameAnimation,\r\n  'walking-up': GameAnimation,\r\n  'walking-right': GameAnimation,\r\n  'walking-down': GameAnimation,\r\n  'walking-left': GameAnimation,\r\n}\r\n\r\nexport class Player implements IPositionable, ICollidable {\r\n  private maxAmountOfBombs: number = 1;\r\n  private placedBombs: Bomb[] = [];\r\n  private bombRange: number = 2;\r\n\r\n  private readonly spritesheet: Spritesheet;\r\n  private readonly playerAnimations: PlayerAnimations;\r\n  private velX = 0;\r\n  private velY = 0;\r\n  private width = 32;\r\n  private height = 32;\r\n  private speed = 200;\r\n  private currentAnimation: GameAnimation;\r\n  private currentDirection: Direction;\r\n\r\n  constructor(\r\n    private _x: number,\r\n    private _y: number,\r\n    playerSpritesheet: HTMLImageElement,\r\n    private bombSpritesheet: HTMLImageElement,\r\n    private scale: number,\r\n    private readonly controlMapping: ControlMapping) {\r\n    this.spritesheet = new Spritesheet(playerSpritesheet, 32, 32);\r\n    this.playerAnimations = {\r\n      'idle-up': new GameAnimation(this.spritesheet, [[0, 0]], 200),\r\n      'idle-right': new GameAnimation(this.spritesheet, [[0, 1]], 200),\r\n      'idle-down': new GameAnimation(this.spritesheet, [[0, 2]], 200),\r\n      'idle-left': new GameAnimation(this.spritesheet, [[0, 3]], 200),\r\n      'walking-up': new GameAnimation(this.spritesheet, [[0, 0], [1, 0], [2, 0]], 200),\r\n      'walking-right': new GameAnimation(this.spritesheet, [[0, 1], [1, 1], [2, 1]], 200),\r\n      'walking-down': new GameAnimation(this.spritesheet, [[0, 2], [1, 2], [2, 2]], 200),\r\n      'walking-left': new GameAnimation(this.spritesheet, [[0, 3], [1, 3], [2, 3]], 200),\r\n    };\r\n    this.currentAnimation = this.playerAnimations['walking-down'];\r\n    this.currentDirection = Direction.Down;\r\n  }\r\n\r\n  public get solid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  public getCollisionBox(): CollisionBox {\r\n    return {\r\n      xPos: this._x + 15,\r\n      yPos: this._y + 47,\r\n      width: this.width,\r\n      height: this.height - 10\r\n    };\r\n  }\r\n\r\n  public get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  public get y(): number {\r\n    return this._y;\r\n  }\r\n\r\n  public get z(): number {\r\n    return 10;\r\n  }\r\n\r\n  public update(\r\n    dt: number,\r\n    kl: KeyListener,\r\n    ch: CollisionManager,\r\n    em: EntityManager,\r\n    pm: PositionManager) {\r\n\r\n    this.velX = 0;\r\n    this.velY = 0;\r\n    this.placedBombs = this.placedBombs.filter(x => !x.exploded);\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.left)) {\r\n      this.velX = -this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.right)) {\r\n      this.velX = this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.up)) {\r\n      this.velY = -this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.down)) {\r\n      this.velY = this.speed * dt;\r\n    }\r\n\r\n    if (kl.isAnyKeyDown(this.controlMapping.bomb) &&\r\n      this.placedBombs.length < this.maxAmountOfBombs) {\r\n      const collisionBox = this.getCollisionBox();\r\n      const gridX = Math.floor((collisionBox.xPos + collisionBox.width / 2) / (16 * this.scale)) * 16 * this.scale\r\n      const gridY = Math.floor((collisionBox.yPos) / (16 * this.scale)) * 16 * this.scale\r\n\r\n      if (!pm.getPositionablesAt(gridX, gridY).some(x => x instanceof Bomb)) {\r\n        const bomb = new Bomb(this.bombSpritesheet, this.scale, gridX, gridY, this.bombRange);\r\n        em.addEntity(bomb);\r\n        this.placedBombs.push(bomb);\r\n      }\r\n    }\r\n\r\n    if (this.velX !== 0 && this.velY !== 0) {\r\n      const lkp = kl.lastKeyPressed;\r\n      if (this.controlMapping.left.some(x => x === lkp) ||\r\n        this.controlMapping.right.some(x => x === lkp)) {\r\n        this.velY = 0;\r\n      }\r\n\r\n      if (this.controlMapping.up.some(x => x === lkp) ||\r\n        this.controlMapping.down.some(x => x === lkp)) {\r\n        this.velX = 0;\r\n      }\r\n    }\r\n\r\n    const [newVelX, newVelY] = Player.calculateCollision(ch, this, this.velX, this.velY);\r\n\r\n    this.velX = newVelX;\r\n    this.velY = newVelY;\r\n\r\n    this._x += this.velX;\r\n    this._y += this.velY;\r\n    this.currentDirection = Player.getDirection(this.currentDirection, this.velX, this.velY);\r\n    this.currentAnimation = Player.getCurrentAnimation(this.playerAnimations, this.currentDirection, this.velX, this.velY);\r\n    this.currentAnimation.update(dt);\r\n  }\r\n\r\n  public render(context: CanvasRenderingContext2D) {\r\n    this.currentAnimation.render(context, this._x, this._y, 32 * this.scale, 32 * this.scale);\r\n  }\r\n\r\n  private static calculateCollision(ch: CollisionManager, driver: ICollidable, velX: number, velY: number): [number, number] {\r\n    const collisionsX = ch.testMovement(driver, velX, 0);\r\n    let [newVelX, newVelY] = [velX, velY];\r\n\r\n    if (collisionsX.length > 0) {\r\n      newVelX = 0;\r\n    }\r\n\r\n    const collisionsY = ch.testMovement(driver, 0, velY);\r\n\r\n    if (collisionsY.length > 0) {\r\n      newVelY = 0;\r\n    }\r\n\r\n    return [newVelX, newVelY];\r\n  }\r\n\r\n  private static getDirection(currentDirection: Direction, velX: number, velY: number): Direction {\r\n    if (velX > 0) {\r\n      return Direction.Right;\r\n    } else if (velX < 0) {\r\n      return Direction.Left;\r\n    }\r\n\r\n    if (velY > 0) {\r\n      return Direction.Down;\r\n    } else if (velY < 0) {\r\n      return Direction.Up;\r\n    }\r\n\r\n    return currentDirection;\r\n  }\r\n\r\n  private static getCurrentAnimation(playerAnimations: PlayerAnimations, currentDirection: Direction, velX: number, velY: number): GameAnimation {\r\n    if (velX > 0) {\r\n      return playerAnimations['walking-right'];\r\n    } else if (velX < 0) {\r\n      return playerAnimations['walking-left'];\r\n    }\r\n\r\n    if (velY > 0) {\r\n      return playerAnimations['walking-down'];\r\n    } else if (velY < 0) {\r\n      return playerAnimations['walking-up'];\r\n    }\r\n\r\n    switch (currentDirection) {\r\n      case Direction.Right: return playerAnimations['idle-right'];\r\n      case Direction.Left: return playerAnimations['idle-left'];\r\n      case Direction.Down: return playerAnimations['idle-down'];\r\n      case Direction.Up: return playerAnimations['idle-up'];\r\n    };\r\n  }\r\n}","export type PlayerActions =\r\n  | 'up'\r\n  | 'down'\r\n  | 'left'\r\n  | 'right'\r\n  | 'bomb'\r\n\r\nexport type ControlMapping = { [ action in PlayerActions]: string[] };\r\n\r\nexport const CONTROLS: ControlMapping[] = [\r\n  {\r\n    'up': ['w', 'W'],\r\n    'down': ['s', 'S'],\r\n    'left': ['a', 'A'],\r\n    'right': ['d', 'D'],\r\n    'bomb': ['c', 'C']\r\n  },\r\n  {\r\n    'up': ['ArrowUp'],\r\n    'down': ['ArrowDown'],\r\n    'left': ['ArrowLeft'],\r\n    'right': ['ArrowRight'],\r\n    'bomb': ['Enter']\r\n  },\r\n]\r\n","import { CollisionManager } from \"./engine/collision-manager\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { Game } from \"./engine/game\";\r\nimport { IGameLoop } from \"./engine/game-loop\";\r\nimport { loadImageFromUrl } from \"./engine/image-utils\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\nimport { GameMap } from \"./game-map\";\r\nimport { Player } from \"./player\";\r\nimport { CONTROLS } from \"./player-controls\";\r\n\r\nexport class BombermanGame extends Game {\r\n  private readonly tilesize: number = 16;\r\n\r\n  constructor(\r\n    context: CanvasRenderingContext2D,\r\n    width: number,\r\n    height: number,\r\n    keyListener: KeyListener,\r\n    entityManager: EntityManager,\r\n    collisionHandler: CollisionManager,\r\n    positionManager: PositionManager,\r\n    gameLoop: IGameLoop\r\n  ) {\r\n    super(\r\n      width,\r\n      height,\r\n      context,\r\n      keyListener,\r\n      entityManager,\r\n      collisionHandler,\r\n      positionManager,\r\n      gameLoop\r\n    );\r\n  }\r\n\r\n  protected override async setup(): Promise<void> {\r\n    super.setup();\r\n    const tileset = await loadImageFromUrl('sprites/bomberman-tileset.png');\r\n    const map = new GameMap(tileset, this._scale, this.width, this.height);\r\n    const player = new Player(\r\n      this.tilesize * this._scale, \r\n      this.tilesize * this._scale * .5, \r\n      await loadImageFromUrl('sprites/bomberman-atlas.png'), \r\n      tileset, \r\n      this._scale,\r\n      CONTROLS[0]);\r\n      \r\n    const player2 = new Player(\r\n      this.tilesize * this._scale * ((this.width / (this.tilesize * this._scale)) - 2), \r\n      this.tilesize * this._scale * .5, \r\n      await loadImageFromUrl('sprites/bomberman-atlas.png'), \r\n      tileset, \r\n      this._scale,\r\n      CONTROLS[1]);\r\n\r\n    this.addEntity(map);\r\n    this.addEntity(player);\r\n    this.addEntity(player2);\r\n  }\r\n}","import { ICollidable } from \"./collidable\";\r\nimport { Collision } from \"./collision\";\r\nimport { CollisionBox } from \"./collision-box\";\r\nimport { IEntity } from \"./entity\";\r\n\r\nexport class CollisionManager {\r\n  private collidables: ICollidable[] = [];\r\n\r\n  public addCollidable(collidable: ICollidable) {\r\n    this.collidables.push(collidable);\r\n  }\r\n\r\n  public removeCollidable(collidable: ICollidable) {\r\n    const index = this.collidables.findIndex(x => x === collidable);\r\n    this.collidables.splice(index, 1);\r\n  }\r\n\r\n  public testMovement(driverCollidable: ICollidable, velX: number, velY: number): Collision[] {\r\n    return this.findCollisions(driverCollidable, velX, velY).filter(x => x.with.solid);\r\n  }\r\n\r\n  public findCollisions(driverCollidable: ICollidable | CollisionBox, xOffset: number = 0, yOffset: number = 0): Collision[] {\r\n    const result = [];\r\n\r\n    for (const collidable of this.collidables) {\r\n      const collision = this.findCollision(driverCollidable, collidable, xOffset, yOffset);\r\n      if (collision) {\r\n        result.push(collision);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private findCollision(\r\n    driverCollidableOrBox: ICollidable | CollisionBox,\r\n    otherCollidable: ICollidable,\r\n    xOffset: number = 0,\r\n    yOffset: number = 0): Collision | null {\r\n\r\n    let driverCollisionBox: CollisionBox;\r\n\r\n    if (this.isCollidable(driverCollidableOrBox)) {\r\n      if (driverCollidableOrBox === otherCollidable) {\r\n        return null;\r\n      } else {\r\n        driverCollisionBox = driverCollidableOrBox.getCollisionBox();\r\n      }\r\n    } else {\r\n      driverCollisionBox = driverCollidableOrBox;\r\n    }\r\n\r\n    driverCollisionBox.xPos += xOffset;\r\n    driverCollisionBox.yPos += yOffset;\r\n    const collidableCollisionBox = otherCollidable.getCollisionBox();\r\n\r\n    const rightCollision =\r\n      driverCollisionBox.xPos <= collidableCollisionBox.xPos &&\r\n      driverCollisionBox.xPos + driverCollisionBox.width >= collidableCollisionBox.xPos;\r\n\r\n    const leftCollision =\r\n      collidableCollisionBox.xPos <= driverCollisionBox.xPos &&\r\n      collidableCollisionBox.xPos + collidableCollisionBox.width >= driverCollisionBox.xPos;\r\n\r\n    const topCollision =\r\n      driverCollisionBox.yPos <= collidableCollisionBox.yPos &&\r\n      driverCollisionBox.yPos + driverCollisionBox.height >= collidableCollisionBox.yPos;\r\n\r\n    const bottomCollision =\r\n      collidableCollisionBox.yPos <= driverCollisionBox.yPos &&\r\n      collidableCollisionBox.yPos + collidableCollisionBox.height >= driverCollisionBox.yPos;\r\n\r\n    if ((rightCollision || leftCollision) && (topCollision || bottomCollision)) {\r\n      return {\r\n        with: otherCollidable,\r\n        bottom: bottomCollision,\r\n        left: leftCollision,\r\n        right: rightCollision,\r\n        top: topCollision\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  public render(context: CanvasRenderingContext2D) {\r\n    for (const collidable of this.collidables) {\r\n      const box = collidable.getCollisionBox();\r\n      context.strokeStyle = 'blue';\r\n      context.lineWidth = 3;\r\n      context.strokeRect(box.xPos, box.yPos, box.width, box.height);\r\n    }\r\n  }\r\n\r\n  public isCollidable(entity: IEntity | CollisionBox | ICollidable): entity is ICollidable {\r\n    return (entity as ICollidable).getCollisionBox !== undefined;\r\n  }\r\n}","import { CollisionManager } from \"./collision-manager\";\r\nimport { IEntity } from \"./entity\";\r\nimport { PositionManager } from \"./position-manager\";\r\n\r\nexport class EntityManager {\r\n  private readonly entities: IEntity[] = [];\r\n\r\n  constructor(\r\n    private readonly collisionManager: CollisionManager,\r\n    private readonly positionManager: PositionManager) {\r\n  }\r\n\r\n  public addEntity(entity: IEntity): void {\r\n    this.entities.push(entity);\r\n\r\n    if (this.collisionManager.isCollidable(entity)) {\r\n      this.collisionManager.addCollidable(entity);\r\n    }\r\n\r\n    if (this.positionManager.isPositionable(entity)) {\r\n      this.positionManager.addPositionable(entity);\r\n    }\r\n  }\r\n\r\n  public removeEntity(entity: IEntity): void {\r\n    const index = this.entities.findIndex(x => x === entity);\r\n    this.entities.splice(index, 1);\r\n\r\n    if(this.collisionManager.isCollidable(entity)) {\r\n      this.collisionManager.removeCollidable(entity);\r\n    }\r\n\r\n    if(this.positionManager.isPositionable(entity)) {\r\n      this.positionManager.removePositionable(entity);\r\n    }\r\n  }\r\n\r\n  public getEntities(): IEntity[] {\r\n    return this.entities;\r\n  }\r\n}","export function getTimestampMs(): number {\r\n  return (new Date).getTime();\r\n}","import { getTimestampMs } from \"./time-utils\";\r\n\r\ntype UpdateFunction = (dt: number) => void;\r\ntype RenderFunction = () => void;\r\n\r\nexport interface IGameLoop {\r\n  run: (updateFunction: UpdateFunction, renderFunction: RenderFunction) => void;\r\n}\r\n\r\nexport class WindowDomGameLoop implements IGameLoop {\r\n  private _sumDeltas: number = 0;\r\n  private _frames: number = 0;\r\n  private _lastTime: number = 0;\r\n  private updateFunction: UpdateFunction | undefined;\r\n  private renderFunction: RenderFunction | undefined;\r\n\r\n  constructor() { }\r\n\r\n  public run(updateFunction: UpdateFunction, renderFunction: RenderFunction) {\r\n    this._lastTime = getTimestampMs();\r\n    this.updateFunction = updateFunction;\r\n    this.renderFunction = renderFunction;\r\n\r\n    window.requestAnimationFrame(() => {\r\n      this.loop();\r\n    });\r\n  }\r\n\r\n  private loop() {\r\n    if (!this.updateFunction || !this.renderFunction) {\r\n      throw Error('Game loop was not initialized');\r\n    }\r\n    const currentTime = getTimestampMs();\r\n    const dt = (currentTime - this._lastTime) / 1000;\r\n    this._lastTime = currentTime;\r\n    this._sumDeltas += dt;\r\n    this._frames += 1;\r\n\r\n    if(this._sumDeltas >= 1) {\r\n      this._sumDeltas = 0;\r\n      this._frames = 0;\r\n    }\r\n\r\n    this.updateFunction(dt);\r\n    this.renderFunction();\r\n    window.requestAnimationFrame(() => this.loop());\r\n  }\r\n}","export class KeyListener {\r\n  private _keyStates: { [key: string]: boolean } = {};\r\n  private _lastKeyPressed: string | undefined;\r\n\r\n  constructor(private canvasEl: HTMLCanvasElement) { }\r\n\r\n  public async setup() {\r\n    this.canvasEl.addEventListener('keydown', e => {\r\n      e.preventDefault();\r\n      this._keyStates[e.key] = true;\r\n      this._lastKeyPressed = e.key;\r\n    })\r\n\r\n    this.canvasEl.addEventListener('keyup', e => {\r\n      e.preventDefault();\r\n      this._keyStates[e.key] = false;\r\n    });\r\n  }\r\n\r\n  public isKeyDown(key: string): boolean {\r\n    return this._keyStates[key] === true;\r\n  }\r\n\r\n  public isAnyKeyDown(keys: string[]): boolean {\r\n    return keys.some(key => this.isKeyDown(key));\r\n  }\r\n\r\n  public get lastKeyPressed(): string | undefined {\r\n    return this._lastKeyPressed;\r\n  }\r\n}","import { IEntity } from \"./entity\";\r\nimport { IPositionable } from \"./positionable\";\r\n\r\nexport class PositionManager {\r\n  private readonly positionables: IPositionable[] = [];\r\n\r\n  constructor(){ }\r\n\r\n  public addPositionable(positionable: IPositionable): void {\r\n    this.positionables.push(positionable);\r\n  }\r\n\r\n  public removePositionable(positionable: IPositionable) {\r\n    const index = this.positionables.findIndex(x => x === positionable);\r\n    this.positionables.splice(index, 1);\r\n  }\r\n\r\n  public getPositionables(): IPositionable[] {\r\n    return this.positionables;\r\n  }\r\n\r\n  public getPositionablesAt(x: number, y: number): IPositionable[] {\r\n    return this.positionables.filter(p => p.x === x && p.y === y);\r\n  }\r\n\r\n  public getPositionablesBetween(x0: number, y0: number, x1: number, y1: number): IPositionable[] {\r\n    return this.positionables.filter(p => \r\n      p.x >= x0 && p.y >= y0 &&\r\n      p.x <= x1 && p.y <= y1);\r\n  }\r\n\r\n  public isPositionable(entity: IEntity | IPositionable): entity is IPositionable {\r\n    const positionable = entity as IPositionable;\r\n    return positionable.x !== undefined && positionable.y !== undefined;\r\n  }\r\n}","import { BombermanGame } from \"./bomberman-game\";\r\nimport { CollisionManager } from \"./engine/collision-manager\";\r\nimport { EntityManager } from \"./engine/entity-manager\";\r\nimport { WindowDomGameLoop } from \"./engine/game-loop\";\r\nimport { KeyListener } from \"./engine/key-listener\";\r\nimport { PositionManager } from \"./engine/position-manager\";\r\n\r\n\r\nasync function bootstrap() {\r\n  const canvasEl = document.getElementById('game-canvas') as HTMLCanvasElement | null;\r\n\r\n  if (!canvasEl) {\r\n    console.error('Couldn\\'t find the canvas element');\r\n    return;\r\n  }\r\n\r\n  const context = canvasEl.getContext('2d');\r\n  \r\n  if(!context) {\r\n    console.error('Couldn\\'t get the context');\r\n    return;\r\n  }\r\n\r\n  canvasEl.focus();\r\n  context.imageSmoothingEnabled = false;\r\n\r\n  const collisionManager = new CollisionManager();\r\n  const positionManager = new PositionManager();\r\n\r\n  const game = new BombermanGame(\r\n    context, \r\n    canvasEl.width, \r\n    canvasEl.height, \r\n    new KeyListener(canvasEl),\r\n    new EntityManager(collisionManager, positionManager),\r\n    collisionManager,\r\n    positionManager,\r\n    new WindowDomGameLoop());\r\n\r\n  await game.run();\r\n}\r\n\r\nbootstrap();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}